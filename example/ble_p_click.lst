;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4/4/2016 10:48:12 AM
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2001  	537001980
0x0004	0x2CED0000  	11501
0x0008	0x2C950000  	11413
0x000C	0x2C950000  	11413
0x0010	0x2C950000  	11413
0x0014	0x2C950000  	11413
0x0018	0x2C950000  	11413
0x001C	0x2C950000  	11413
0x0020	0x2C950000  	11413
0x0024	0x2C950000  	11413
0x0028	0x2C950000  	11413
0x002C	0x2C950000  	11413
0x0030	0x2C950000  	11413
0x0034	0x2C950000  	11413
0x0038	0x2C950000  	11413
0x003C	0x2C950000  	11413
0x0040	0x2C950000  	11413
0x0044	0x2C950000  	11413
0x0048	0x2C950000  	11413
0x004C	0x2C950000  	11413
0x0050	0x2C950000  	11413
0x0054	0x2C950000  	11413
0x0058	0x2C950000  	11413
0x005C	0x2C950000  	11413
0x0060	0x2C950000  	11413
0x0064	0x2C950000  	11413
0x0068	0x2C950000  	11413
0x006C	0x2C950000  	11413
0x0070	0x2C950000  	11413
0x0074	0x2C950000  	11413
0x0078	0x2C950000  	11413
0x007C	0x2C950000  	11413
0x0080	0x2C950000  	11413
0x0084	0x2C950000  	11413
0x0088	0x2C950000  	11413
0x008C	0x2C950000  	11413
0x0090	0x2C950000  	11413
0x0094	0x2C950000  	11413
0x0098	0x2C950000  	11413
0x009C	0x2C950000  	11413
0x00A0	0x2C950000  	11413
0x00A4	0x2C950000  	11413
0x00A8	0x2C950000  	11413
0x00AC	0x2C950000  	11413
0x00B0	0x2C950000  	11413
0x00B4	0x2C950000  	11413
0x00B8	0x2C950000  	11413
0x00BC	0x2C950000  	11413
0x00C0	0x2C950000  	11413
0x00C4	0x2C950000  	11413
0x00C8	0x2C950000  	11413
0x00CC	0x2C950000  	11413
0x00D0	0x2C950000  	11413
0x00D4	0x2C950000  	11413
0x00D8	0x2C950000  	11413
0x00DC	0x2C950000  	11413
0x00E0	0x2C950000  	11413
0x00E4	0x2C950000  	11413
0x00E8	0x2C950000  	11413
0x00EC	0x2C950000  	11413
0x00F0	0x2C950000  	11413
0x00F4	0x2C950000  	11413
0x00F8	0x2C950000  	11413
0x00FC	0x2C950000  	11413
0x0100	0x2C950000  	11413
0x0104	0x2C950000  	11413
0x0108	0x2C950000  	11413
0x010C	0x2C950000  	11413
0x0110	0x2C950000  	11413
0x0114	0x2C950000  	11413
0x0118	0x2C950000  	11413
0x011C	0x2C950000  	11413
0x0120	0x2C950000  	11413
0x0124	0x2C950000  	11413
0x0128	0x2C950000  	11413
0x012C	0x2C950000  	11413
0x0130	0x2C950000  	11413
0x0134	0x2C950000  	11413
0x0138	0x2C950000  	11413
0x013C	0x2C950000  	11413
0x0140	0x2C950000  	11413
0x0144	0x2C950000  	11413
0x0148	0x2C950000  	11413
0x014C	0x2C950000  	11413
0x0150	0x2C950000  	11413
0x0154	0x2C950000  	11413
0x0158	0x2C950000  	11413
0x015C	0x2C950000  	11413
0x0160	0x2C950000  	11413
0x0164	0x2C950000  	11413
0x0168	0x2C950000  	11413
0x016C	0x2C950000  	11413
0x0170	0x2C950000  	11413
0x0174	0x2C950000  	11413
0x0178	0x2C950000  	11413
0x017C	0x2C950000  	11413
0x0180	0x2C950000  	11413
0x0184	0x2C950000  	11413
; end of ____SysVT
_main:
;ble_p_click.c, 89 :: 		void main() {
0x2CEC	0xF000F848  BL	11648
0x2CF0	0xF7FFFFD4  BL	11420
0x2CF4	0xF000FFB2  BL	15452
0x2CF8	0xF7FFFFE6  BL	11464
0x2CFC	0xF000FF6E  BL	15324
;ble_p_click.c, 90 :: 		UART1_Init(57600);
0x2D00	0xF24E1000  MOVW	R0, #57600
0x2D04	0xF7FFFFAC  BL	_UART1_Init+0
;ble_p_click.c, 91 :: 		UART1_Write_Text("Uart initialized");
0x2D08	0x4818    LDR	R0, [PC, #96]
0x2D0A	0xF7FFFF39  BL	_UART1_Write_Text+0
;ble_p_click.c, 92 :: 		UART1_Write(10);
0x2D0E	0x200A    MOVS	R0, #10
0x2D10	0xF7FFFF44  BL	_UART1_Write+0
;ble_p_click.c, 93 :: 		UART1_Write(13);
0x2D14	0x200D    MOVS	R0, #13
0x2D16	0xF7FFFF41  BL	_UART1_Write+0
;ble_p_click.c, 94 :: 		GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13);
0x2D1A	0xF2420100  MOVW	R1, #8192
0x2D1E	0x4814    LDR	R0, [PC, #80]
0x2D20	0xF7FFFF4A  BL	_GPIO_Digital_Output+0
;ble_p_click.c, 95 :: 		GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4);
0x2D24	0xF2400110  MOVW	R1, #16
0x2D28	0x4812    LDR	R0, [PC, #72]
0x2D2A	0xF7FFFEE1  BL	_GPIO_Digital_Input+0
;ble_p_click.c, 96 :: 		GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10);
0x2D2E	0xF2404100  MOVW	R1, #1024
0x2D32	0x480F    LDR	R0, [PC, #60]
0x2D34	0xF7FFFEDC  BL	_GPIO_Digital_Input+0
;ble_p_click.c, 97 :: 		GPIO_Digital_Output(&GPIOC_ODR, _GPIO_PINMASK_2);                             // Set PC2 (RST) as digital output
0x2D38	0xF2400104  MOVW	R1, #4
0x2D3C	0x480E    LDR	R0, [PC, #56]
0x2D3E	0xF7FFFF3B  BL	_GPIO_Digital_Output+0
;ble_p_click.c, 98 :: 		GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0);                            // Set PA0 (CONN)
0x2D42	0xF2400101  MOVW	R1, #1
0x2D46	0x480B    LDR	R0, [PC, #44]
0x2D48	0xF7FFFF36  BL	_GPIO_Digital_Output+0
;ble_p_click.c, 105 :: 		&_GPIO_MODULE_SPI3_PC10_11_12);
0x2D4C	0x4A0B    LDR	R2, [PC, #44]
;ble_p_click.c, 104 :: 		_SPI_SSM_ENABLE | _SPI_SSI_1,
0x2D4E	0xF2403184  MOVW	R1, #900
;ble_p_click.c, 101 :: 		SPI3_Init_Advanced(_SPI_FPCLK_DIV128,
0x2D52	0x2006    MOVS	R0, #6
;ble_p_click.c, 105 :: 		&_GPIO_MODULE_SPI3_PC10_11_12);
0x2D54	0xF7FFFED8  BL	_SPI3_Init_Advanced+0
;ble_p_click.c, 107 :: 		blep_hal_init();
0x2D58	0xF7FFFF00  BL	_blep_hal_init+0
;ble_p_click.c, 108 :: 		setup();
0x2D5C	0xF7FFFF6C  BL	_setup+0
;ble_p_click.c, 110 :: 		while(1)
L_main10:
;ble_p_click.c, 114 :: 		ble_uart_loop();
0x2D60	0xF7FFFF42  BL	_ble_uart_loop+0
;ble_p_click.c, 117 :: 		handle_serial_input();
0x2D64	0xF7FFFE66  BL	_handle_serial_input+0
;ble_p_click.c, 118 :: 		}
0x2D68	0xE7FA    B	L_main10
;ble_p_click.c, 120 :: 		}
L_end_main:
L__main_end_loop:
0x2D6A	0xE7FE    B	L__main_end_loop
0x2D6C	0x00062000  	?lstr2_ble_p_click+0
0x2D70	0x0C004002  	GPIOD_BASE+0
0x2D74	0x00004002  	GPIOA_BASE+0
0x2D78	0x08144002  	GPIOC_ODR+0
0x2D7C	0x38240000  	__GPIO_MODULE_SPI3_PC10_11_12+0
; end of _main
___CC2DW:
;__Lib_System_4XX.c, 43 :: 		
0x2BD4	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 45 :: 		
L_loopDW:
;__Lib_System_4XX.c, 46 :: 		
0x2BD6	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_4XX.c, 47 :: 		
0x2BDA	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_4XX.c, 48 :: 		
0x2BDE	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 49 :: 		
0x2BE2	0xD1F8    BNE	L_loopDW
;__Lib_System_4XX.c, 51 :: 		
L_end___CC2DW:
0x2BE4	0xB001    ADD	SP, SP, #4
0x2BE6	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_4XX.c, 85 :: 		
0x2BFC	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 87 :: 		
0x2BFE	0xF04F0900  MOV	R9, #0
;__Lib_System_4XX.c, 88 :: 		
0x2C02	0xF04F0C00  MOV	R12, #0
;__Lib_System_4XX.c, 89 :: 		
0x2C06	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_4XX.c, 90 :: 		
0x2C0A	0xDC04    BGT	L_loopFZs
;__Lib_System_4XX.c, 91 :: 		
0x2C0C	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_4XX.c, 92 :: 		
0x2C10	0xDB01    BLT	L_loopFZs
;__Lib_System_4XX.c, 93 :: 		
0x2C12	0x46D4    MOV	R12, R10
;__Lib_System_4XX.c, 94 :: 		
0x2C14	0x46EA    MOV	R10, SP
;__Lib_System_4XX.c, 95 :: 		
L_loopFZs:
;__Lib_System_4XX.c, 96 :: 		
0x2C16	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_4XX.c, 97 :: 		
0x2C1A	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_4XX.c, 98 :: 		
0x2C1E	0xD1FA    BNE	L_loopFZs
;__Lib_System_4XX.c, 99 :: 		
0x2C20	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_4XX.c, 100 :: 		
0x2C24	0xDD05    BLE	L_norep
;__Lib_System_4XX.c, 101 :: 		
0x2C26	0x46E2    MOV	R10, R12
;__Lib_System_4XX.c, 102 :: 		
0x2C28	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_4XX.c, 103 :: 		
0x2C2C	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_4XX.c, 104 :: 		
0x2C30	0xE7F1    B	L_loopFZs
;__Lib_System_4XX.c, 105 :: 		
L_norep:
;__Lib_System_4XX.c, 107 :: 		
L_end___FillZeros:
0x2C32	0xB001    ADD	SP, SP, #4
0x2C34	0x4770    BX	LR
; end of ___FillZeros
_UART1_Init:
;__Lib_UART_123_45_6.c, 439 :: 		
; baud_rate start address is: 0 (R0)
0x2C60	0xB081    SUB	SP, SP, #4
0x2C62	0xF8CDE000  STR	LR, [SP, #0]
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 440 :: 		
0x2C66	0x4A09    LDR	R2, [PC, #36]
0x2C68	0xF2400100  MOVW	R1, #0
0x2C6C	0xB404    PUSH	(R2)
0x2C6E	0xB402    PUSH	(R1)
0x2C70	0xF2400300  MOVW	R3, #0
0x2C74	0xF2400200  MOVW	R2, #0
0x2C78	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x2C7A	0x4805    LDR	R0, [PC, #20]
0x2C7C	0xF7FFFB76  BL	__Lib_UART_123_45_6_UARTx_Init_Advanced+0
0x2C80	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45_6.c, 441 :: 		
L_end_UART1_Init:
0x2C82	0xF8DDE000  LDR	LR, [SP, #0]
0x2C86	0xB001    ADD	SP, SP, #4
0x2C88	0x4770    BX	LR
0x2C8A	0xBF00    NOP
0x2C8C	0x38900000  	__GPIO_MODULE_USART1_PA9_10+0
0x2C90	0x10004001  	USART1_SR+0
; end of _UART1_Init
__Lib_UART_123_45_6_UARTx_Init_Advanced:
;__Lib_UART_123_45_6.c, 319 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x236C	0xB08B    SUB	SP, SP, #44
0x236E	0xF8CDE000  STR	LR, [SP, #0]
0x2372	0xB29A    UXTH	R2, R3
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; baud_rate start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
0x2374	0xF8BD302C  LDRH	R3, [SP, #44]
; module start address is: 24 (R6)
0x2378	0x9E0C    LDR	R6, [SP, #48]
;__Lib_UART_123_45_6.c, 323 :: 		
0x237A	0xAC06    ADD	R4, SP, #24
0x237C	0xF8AD3004  STRH	R3, [SP, #4]
0x2380	0xF8AD2008  STRH	R2, [SP, #8]
0x2384	0x9103    STR	R1, [SP, #12]
0x2386	0x9004    STR	R0, [SP, #16]
0x2388	0x4620    MOV	R0, R4
0x238A	0xF7FFFDCD  BL	_RCC_GetClocksFrequency+0
0x238E	0x9804    LDR	R0, [SP, #16]
0x2390	0x9903    LDR	R1, [SP, #12]
0x2392	0xF8BD2008  LDRH	R2, [SP, #8]
0x2396	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 325 :: 		
0x239A	0x4C71    LDR	R4, [PC, #452]
0x239C	0x42A0    CMP	R0, R4
0x239E	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced15
;__Lib_UART_123_45_6.c, 326 :: 		
0x23A0	0x2501    MOVS	R5, #1
0x23A2	0xB26D    SXTB	R5, R5
0x23A4	0x4C6F    LDR	R4, [PC, #444]
0x23A6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 327 :: 		
0x23A8	0x4D6F    LDR	R5, [PC, #444]
0x23AA	0x4C70    LDR	R4, [PC, #448]
0x23AC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 328 :: 		
0x23AE	0x4D70    LDR	R5, [PC, #448]
0x23B0	0x4C70    LDR	R4, [PC, #448]
0x23B2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 329 :: 		
0x23B4	0x4D70    LDR	R5, [PC, #448]
0x23B6	0x4C71    LDR	R4, [PC, #452]
0x23B8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 330 :: 		
0x23BA	0x4D71    LDR	R5, [PC, #452]
0x23BC	0x4C71    LDR	R4, [PC, #452]
0x23BE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 331 :: 		
0x23C0	0x9C09    LDR	R4, [SP, #36]
0x23C2	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 332 :: 		
0x23C4	0xE06C    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced16
L___Lib_UART_123_45_6_UARTx_Init_Advanced15:
;__Lib_UART_123_45_6.c, 333 :: 		
0x23C6	0x4C70    LDR	R4, [PC, #448]
0x23C8	0x42A0    CMP	R0, R4
0x23CA	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced17
;__Lib_UART_123_45_6.c, 334 :: 		
0x23CC	0x2501    MOVS	R5, #1
0x23CE	0xB26D    SXTB	R5, R5
0x23D0	0x4C6E    LDR	R4, [PC, #440]
0x23D2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 335 :: 		
0x23D4	0x4D6E    LDR	R5, [PC, #440]
0x23D6	0x4C65    LDR	R4, [PC, #404]
0x23D8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 336 :: 		
0x23DA	0x4D6E    LDR	R5, [PC, #440]
0x23DC	0x4C65    LDR	R4, [PC, #404]
0x23DE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 337 :: 		
0x23E0	0x4D6D    LDR	R5, [PC, #436]
0x23E2	0x4C66    LDR	R4, [PC, #408]
0x23E4	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 338 :: 		
0x23E6	0x4D6D    LDR	R5, [PC, #436]
0x23E8	0x4C66    LDR	R4, [PC, #408]
0x23EA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 339 :: 		
0x23EC	0x9C08    LDR	R4, [SP, #32]
0x23EE	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 340 :: 		
0x23F0	0xE056    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced18
L___Lib_UART_123_45_6_UARTx_Init_Advanced17:
;__Lib_UART_123_45_6.c, 341 :: 		
0x23F2	0x4C6B    LDR	R4, [PC, #428]
0x23F4	0x42A0    CMP	R0, R4
0x23F6	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced19
;__Lib_UART_123_45_6.c, 342 :: 		
0x23F8	0x2501    MOVS	R5, #1
0x23FA	0xB26D    SXTB	R5, R5
0x23FC	0x4C69    LDR	R4, [PC, #420]
0x23FE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 343 :: 		
0x2400	0x4D69    LDR	R5, [PC, #420]
0x2402	0x4C5A    LDR	R4, [PC, #360]
0x2404	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 344 :: 		
0x2406	0x4D69    LDR	R5, [PC, #420]
0x2408	0x4C5A    LDR	R4, [PC, #360]
0x240A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 345 :: 		
0x240C	0x4D68    LDR	R5, [PC, #416]
0x240E	0x4C5B    LDR	R4, [PC, #364]
0x2410	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 346 :: 		
0x2412	0x4D68    LDR	R5, [PC, #416]
0x2414	0x4C5B    LDR	R4, [PC, #364]
0x2416	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 347 :: 		
0x2418	0x9C08    LDR	R4, [SP, #32]
0x241A	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 348 :: 		
0x241C	0xE040    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced20
L___Lib_UART_123_45_6_UARTx_Init_Advanced19:
;__Lib_UART_123_45_6.c, 349 :: 		
0x241E	0x4C66    LDR	R4, [PC, #408]
0x2420	0x42A0    CMP	R0, R4
0x2422	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced21
;__Lib_UART_123_45_6.c, 350 :: 		
0x2424	0x2501    MOVS	R5, #1
0x2426	0xB26D    SXTB	R5, R5
0x2428	0x4C64    LDR	R4, [PC, #400]
0x242A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 351 :: 		
0x242C	0x4D64    LDR	R5, [PC, #400]
0x242E	0x4C4F    LDR	R4, [PC, #316]
0x2430	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 352 :: 		
0x2432	0x4D64    LDR	R5, [PC, #400]
0x2434	0x4C4F    LDR	R4, [PC, #316]
0x2436	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 353 :: 		
0x2438	0x4D63    LDR	R5, [PC, #396]
0x243A	0x4C50    LDR	R4, [PC, #320]
0x243C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 354 :: 		
0x243E	0x4D63    LDR	R5, [PC, #396]
0x2440	0x4C50    LDR	R4, [PC, #320]
0x2442	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 355 :: 		
0x2444	0x9C08    LDR	R4, [SP, #32]
0x2446	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 356 :: 		
0x2448	0xE02A    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced22
L___Lib_UART_123_45_6_UARTx_Init_Advanced21:
;__Lib_UART_123_45_6.c, 357 :: 		
0x244A	0x4C61    LDR	R4, [PC, #388]
0x244C	0x42A0    CMP	R0, R4
0x244E	0xD112    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced23
;__Lib_UART_123_45_6.c, 358 :: 		
0x2450	0x2501    MOVS	R5, #1
0x2452	0xB26D    SXTB	R5, R5
0x2454	0x4C5F    LDR	R4, [PC, #380]
0x2456	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 359 :: 		
0x2458	0x4D5F    LDR	R5, [PC, #380]
0x245A	0x4C44    LDR	R4, [PC, #272]
0x245C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 360 :: 		
0x245E	0x4D5F    LDR	R5, [PC, #380]
0x2460	0x4C44    LDR	R4, [PC, #272]
0x2462	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 361 :: 		
0x2464	0x4D5E    LDR	R5, [PC, #376]
0x2466	0x4C45    LDR	R4, [PC, #276]
0x2468	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 362 :: 		
0x246A	0x4D5E    LDR	R5, [PC, #376]
0x246C	0x4C45    LDR	R4, [PC, #276]
0x246E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 363 :: 		
0x2470	0x9C08    LDR	R4, [SP, #32]
0x2472	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 364 :: 		
0x2474	0xE014    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced24
L___Lib_UART_123_45_6_UARTx_Init_Advanced23:
;__Lib_UART_123_45_6.c, 365 :: 		
0x2476	0x4C5C    LDR	R4, [PC, #368]
0x2478	0x42A0    CMP	R0, R4
0x247A	0xD111    BNE	L___Lib_UART_123_45_6_UARTx_Init_Advanced25
;__Lib_UART_123_45_6.c, 366 :: 		
0x247C	0x2501    MOVS	R5, #1
0x247E	0xB26D    SXTB	R5, R5
0x2480	0x4C5A    LDR	R4, [PC, #360]
0x2482	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 367 :: 		
0x2484	0x4D5A    LDR	R5, [PC, #360]
0x2486	0x4C39    LDR	R4, [PC, #228]
0x2488	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 368 :: 		
0x248A	0x4D5A    LDR	R5, [PC, #360]
0x248C	0x4C39    LDR	R4, [PC, #228]
0x248E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 369 :: 		
0x2490	0x4D59    LDR	R5, [PC, #356]
0x2492	0x4C3A    LDR	R4, [PC, #232]
0x2494	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 370 :: 		
0x2496	0x4D59    LDR	R5, [PC, #356]
0x2498	0x4C3A    LDR	R4, [PC, #232]
0x249A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45_6.c, 371 :: 		
0x249C	0x9C09    LDR	R4, [SP, #36]
0x249E	0x9405    STR	R4, [SP, #20]
;__Lib_UART_123_45_6.c, 372 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced25:
L___Lib_UART_123_45_6_UARTx_Init_Advanced24:
L___Lib_UART_123_45_6_UARTx_Init_Advanced22:
L___Lib_UART_123_45_6_UARTx_Init_Advanced20:
L___Lib_UART_123_45_6_UARTx_Init_Advanced18:
L___Lib_UART_123_45_6_UARTx_Init_Advanced16:
;__Lib_UART_123_45_6.c, 374 :: 		
0x24A0	0xF8AD3004  STRH	R3, [SP, #4]
; module end address is: 24 (R6)
0x24A4	0xF8AD2008  STRH	R2, [SP, #8]
0x24A8	0x9103    STR	R1, [SP, #12]
0x24AA	0x9004    STR	R0, [SP, #16]
0x24AC	0x4630    MOV	R0, R6
0x24AE	0xF7FFFD93  BL	_GPIO_Alternate_Function_Enable+0
0x24B2	0x9804    LDR	R0, [SP, #16]
0x24B4	0x9903    LDR	R1, [SP, #12]
0x24B6	0xF8BD2008  LDRH	R2, [SP, #8]
0x24BA	0xF8BD3004  LDRH	R3, [SP, #4]
;__Lib_UART_123_45_6.c, 376 :: 		
0x24BE	0xF2000510  ADDW	R5, R0, #16
0x24C2	0x2400    MOVS	R4, #0
0x24C4	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 377 :: 		
0x24C6	0xF2000510  ADDW	R5, R0, #16
0x24CA	0x682C    LDR	R4, [R5, #0]
0x24CC	0x431C    ORRS	R4, R3
; stop_bits end address is: 12 (R3)
0x24CE	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 378 :: 		
0x24D0	0xF200050C  ADDW	R5, R0, #12
0x24D4	0x2400    MOVS	R4, #0
0x24D6	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 380 :: 		
0x24D8	0xB11A    CBZ	R2, L___Lib_UART_123_45_6_UARTx_Init_Advanced40
;__Lib_UART_123_45_6.c, 381 :: 		
0x24DA	0xF4426280  ORR	R2, R2, #1024
0x24DE	0xB292    UXTH	R2, R2
; parity end address is: 8 (R2)
;__Lib_UART_123_45_6.c, 382 :: 		
0x24E0	0xE7FF    B	L___Lib_UART_123_45_6_UARTx_Init_Advanced26
L___Lib_UART_123_45_6_UARTx_Init_Advanced40:
;__Lib_UART_123_45_6.c, 380 :: 		
;__Lib_UART_123_45_6.c, 382 :: 		
L___Lib_UART_123_45_6_UARTx_Init_Advanced26:
;__Lib_UART_123_45_6.c, 384 :: 		
; parity start address is: 8 (R2)
0x24E2	0xF200050C  ADDW	R5, R0, #12
0x24E6	0x682C    LDR	R4, [R5, #0]
0x24E8	0x4314    ORRS	R4, R2
; parity end address is: 8 (R2)
0x24EA	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 386 :: 		
0x24EC	0xF200060C  ADDW	R6, R0, #12
0x24F0	0x2501    MOVS	R5, #1
0x24F2	0x6834    LDR	R4, [R6, #0]
0x24F4	0xF365344D  BFI	R4, R5, #13, #1
0x24F8	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 387 :: 		
0x24FA	0xF200060C  ADDW	R6, R0, #12
0x24FE	0x2501    MOVS	R5, #1
0x2500	0x6834    LDR	R4, [R6, #0]
0x2502	0xF36504C3  BFI	R4, R5, #3, #1
0x2506	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 388 :: 		
0x2508	0xF200060C  ADDW	R6, R0, #12
0x250C	0x2501    MOVS	R5, #1
0x250E	0x6834    LDR	R4, [R6, #0]
0x2510	0xF3650482  BFI	R4, R5, #2, #1
0x2514	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45_6.c, 389 :: 		
0x2516	0xF2000514  ADDW	R5, R0, #20
0x251A	0x2400    MOVS	R4, #0
0x251C	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 394 :: 		
0x251E	0x9D05    LDR	R5, [SP, #20]
0x2520	0x2419    MOVS	R4, #25
0x2522	0x4365    MULS	R5, R4, R5
0x2524	0x008C    LSLS	R4, R1, #2
; baud_rate end address is: 4 (R1)
0x2526	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45_6.c, 395 :: 		
0x252A	0x2464    MOVS	R4, #100
0x252C	0xFBB7F4F4  UDIV	R4, R7, R4
0x2530	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45_6.c, 397 :: 		
0x2532	0x0935    LSRS	R5, R6, #4
0x2534	0x2464    MOVS	R4, #100
0x2536	0x436C    MULS	R4, R5, R4
0x2538	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45_6.c, 398 :: 		
0x253A	0x0124    LSLS	R4, R4, #4
0x253C	0xF2040532  ADDW	R5, R4, #50
0x2540	0x2464    MOVS	R4, #100
0x2542	0xFBB5F4F4  UDIV	R4, R5, R4
0x2546	0xF004040F  AND	R4, R4, #15
0x254A	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45_6.c, 400 :: 		
0x254E	0xF2000508  ADDW	R5, R0, #8
; UART_Base end address is: 0 (R0)
0x2552	0xB2A4    UXTH	R4, R4
0x2554	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45_6.c, 401 :: 		
L_end_UARTx_Init_Advanced:
0x2556	0xF8DDE000  LDR	LR, [SP, #0]
0x255A	0xB00B    ADD	SP, SP, #44
0x255C	0x4770    BX	LR
0x255E	0xBF00    NOP
0x2560	0x10004001  	USART1_SR+0
0x2564	0x08904247  	RCC_APB2ENR+0
0x2568	0x2B9D0000  	_UART1_Write+0
0x256C	0x04D02000  	_UART_Wr_Ptr+0
0x2570	0x22F50000  	_UART1_Read+0
0x2574	0x04D42000  	_UART_Rd_Ptr+0
0x2578	0x26010000  	_UART1_Data_Ready+0
0x257C	0x04D82000  	_UART_Rdy_Ptr+0
0x2580	0xFFFFFFFF  	_UART1_Tx_Idle+0
0x2584	0x04DC2000  	_UART_Tx_Idle_Ptr+0
0x2588	0x44004000  	USART2_SR+0
0x258C	0x08444247  	RCC_APB1ENR+0
0x2590	0xFFFFFFFF  	_UART2_Write+0
0x2594	0xFFFFFFFF  	_UART2_Read+0
0x2598	0xFFFFFFFF  	_UART2_Data_Ready+0
0x259C	0xFFFFFFFF  	_UART2_Tx_Idle+0
0x25A0	0x48004000  	USART3_SR+0
0x25A4	0x08484247  	RCC_APB1ENR+0
0x25A8	0xFFFFFFFF  	_UART3_Write+0
0x25AC	0xFFFFFFFF  	_UART3_Read+0
0x25B0	0xFFFFFFFF  	_UART3_Data_Ready+0
0x25B4	0xFFFFFFFF  	_UART3_Tx_Idle+0
0x25B8	0x4C004000  	UART4_SR+0
0x25BC	0x084C4247  	RCC_APB1ENR+0
0x25C0	0xFFFFFFFF  	_UART4_Write+0
0x25C4	0xFFFFFFFF  	_UART4_Read+0
0x25C8	0xFFFFFFFF  	_UART4_Data_Ready+0
0x25CC	0xFFFFFFFF  	_UART4_Tx_Idle+0
0x25D0	0x50004000  	UART5_SR+0
0x25D4	0x08504247  	RCC_APB1ENR+0
0x25D8	0xFFFFFFFF  	_UART5_Write+0
0x25DC	0xFFFFFFFF  	_UART5_Read+0
0x25E0	0xFFFFFFFF  	_UART5_Data_Ready+0
0x25E4	0xFFFFFFFF  	_UART5_Tx_Idle+0
0x25E8	0x14004001  	USART6_SR+0
0x25EC	0x08944247  	RCC_APB2ENR+0
0x25F0	0xFFFFFFFF  	_UART6_Write+0
0x25F4	0xFFFFFFFF  	_UART6_Read+0
0x25F8	0xFFFFFFFF  	_UART6_Data_Ready+0
0x25FC	0xFFFFFFFF  	_UART6_Tx_Idle+0
; end of __Lib_UART_123_45_6_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_4XX.c, 389 :: 		
; RCC_Clocks start address is: 0 (R0)
0x1F28	0xB082    SUB	SP, SP, #8
0x1F2A	0xF8CDE000  STR	LR, [SP, #0]
0x1F2E	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_4XX.c, 391 :: 		
;__Lib_System_4XX.c, 393 :: 		
0x1F30	0x4619    MOV	R1, R3
0x1F32	0x9101    STR	R1, [SP, #4]
0x1F34	0xF7FEFF92  BL	_Get_Fosc_kHz+0
0x1F38	0xF24031E8  MOVW	R1, #1000
0x1F3C	0xFB00F201  MUL	R2, R0, R1
0x1F40	0x9901    LDR	R1, [SP, #4]
0x1F42	0x600A    STR	R2, [R1, #0]
;__Lib_System_4XX.c, 396 :: 		
0x1F44	0x4917    LDR	R1, [PC, #92]
0x1F46	0x6809    LDR	R1, [R1, #0]
0x1F48	0xF00101F0  AND	R1, R1, #240
;__Lib_System_4XX.c, 397 :: 		
0x1F4C	0x090A    LSRS	R2, R1, #4
;__Lib_System_4XX.c, 398 :: 		
0x1F4E	0x4916    LDR	R1, [PC, #88]
0x1F50	0x1889    ADDS	R1, R1, R2
0x1F52	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x1F54	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 400 :: 		
0x1F56	0x1D1A    ADDS	R2, R3, #4
0x1F58	0x6819    LDR	R1, [R3, #0]
0x1F5A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x1F5C	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 403 :: 		
0x1F5E	0x4911    LDR	R1, [PC, #68]
0x1F60	0x6809    LDR	R1, [R1, #0]
0x1F62	0xF40151E0  AND	R1, R1, #7168
;__Lib_System_4XX.c, 404 :: 		
0x1F66	0x0A8A    LSRS	R2, R1, #10
;__Lib_System_4XX.c, 405 :: 		
0x1F68	0x490F    LDR	R1, [PC, #60]
0x1F6A	0x1889    ADDS	R1, R1, R2
0x1F6C	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x1F6E	0xB2C0    UXTB	R0, R0
;__Lib_System_4XX.c, 407 :: 		
0x1F70	0xF2030208  ADDW	R2, R3, #8
0x1F74	0x1D19    ADDS	R1, R3, #4
0x1F76	0x6809    LDR	R1, [R1, #0]
0x1F78	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x1F7A	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 410 :: 		
0x1F7C	0x4909    LDR	R1, [PC, #36]
0x1F7E	0x6809    LDR	R1, [R1, #0]
0x1F80	0xF4014160  AND	R1, R1, #57344
;__Lib_System_4XX.c, 411 :: 		
0x1F84	0x0B4A    LSRS	R2, R1, #13
;__Lib_System_4XX.c, 412 :: 		
0x1F86	0x4908    LDR	R1, [PC, #32]
0x1F88	0x1889    ADDS	R1, R1, R2
0x1F8A	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x1F8C	0xB2C8    UXTB	R0, R1
;__Lib_System_4XX.c, 414 :: 		
0x1F8E	0xF203020C  ADDW	R2, R3, #12
0x1F92	0x1D19    ADDS	R1, R3, #4
; RCC_Clocks end address is: 12 (R3)
0x1F94	0x6809    LDR	R1, [R1, #0]
0x1F96	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x1F98	0x6011    STR	R1, [R2, #0]
;__Lib_System_4XX.c, 415 :: 		
L_end_RCC_GetClocksFrequency:
0x1F9A	0xF8DDE000  LDR	LR, [SP, #0]
0x1F9E	0xB002    ADD	SP, SP, #8
0x1FA0	0x4770    BX	LR
0x1FA2	0xBF00    NOP
0x1FA4	0x38084002  	RCC_CFGR+0
0x1FA8	0x02CF2000  	__Lib_System_4XX_APBAHBPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0E5C	0x4801    LDR	R0, [PC, #4]
0x0E5E	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0E60	0x4770    BX	LR
0x0E62	0xBF00    NOP
0x0E64	0x04C82000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F4xx.c, 223 :: 		
; module start address is: 0 (R0)
0x1FD8	0xB083    SUB	SP, SP, #12
0x1FDA	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 226 :: 		
; i start address is: 16 (R4)
0x1FDE	0x2400    MOVS	R4, #0
; module end address is: 0 (R0)
; i end address is: 16 (R4)
;__Lib_GPIO_32F4xx.c, 227 :: 		
L_GPIO_Alternate_Function_Enable66:
; i start address is: 16 (R4)
; module start address is: 0 (R0)
0x1FE0	0x00A1    LSLS	R1, R4, #2
0x1FE2	0x1841    ADDS	R1, R0, R1
0x1FE4	0x6809    LDR	R1, [R1, #0]
0x1FE6	0xF1B13FFF  CMP	R1, #-1
0x1FEA	0xD014    BEQ	L_GPIO_Alternate_Function_Enable67
;__Lib_GPIO_32F4xx.c, 228 :: 		
0x1FEC	0xF2000134  ADDW	R1, R0, #52
0x1FF0	0x00A3    LSLS	R3, R4, #2
0x1FF2	0x18C9    ADDS	R1, R1, R3
0x1FF4	0x6809    LDR	R1, [R1, #0]
0x1FF6	0x460A    MOV	R2, R1
0x1FF8	0x18C1    ADDS	R1, R0, R3
0x1FFA	0x6809    LDR	R1, [R1, #0]
0x1FFC	0x9001    STR	R0, [SP, #4]
0x1FFE	0xF8AD4008  STRH	R4, [SP, #8]
0x2002	0x4608    MOV	R0, R1
0x2004	0x4611    MOV	R1, R2
0x2006	0xF7FFFD7D  BL	__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function+0
0x200A	0xF8BD4008  LDRH	R4, [SP, #8]
0x200E	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 229 :: 		
0x2010	0x1C64    ADDS	R4, R4, #1
0x2012	0xB2A4    UXTH	R4, R4
;__Lib_GPIO_32F4xx.c, 230 :: 		
; module end address is: 0 (R0)
; i end address is: 16 (R4)
0x2014	0xE7E4    B	L_GPIO_Alternate_Function_Enable66
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F4xx.c, 231 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x2016	0xF8DDE000  LDR	LR, [SP, #0]
0x201A	0xB003    ADD	SP, SP, #12
0x201C	0x4770    BX	LR
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function:
;__Lib_GPIO_32F4xx.c, 190 :: 		
; configs start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x1B04	0xB083    SUB	SP, SP, #12
0x1B06	0xF8CDE000  STR	LR, [SP, #0]
0x1B0A	0x4604    MOV	R4, R0
; configs end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 16 (R4)
; configs start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 195 :: 		
0x1B0C	0xF00403FF  AND	R3, R4, #255
0x1B10	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x1B12	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 196 :: 		
0x1B14	0xF003020F  AND	R2, R3, #15
; pin start address is: 48 (R12)
0x1B18	0x4694    MOV	R12, R2
;__Lib_GPIO_32F4xx.c, 197 :: 		
0x1B1A	0x0A22    LSRS	R2, R4, #8
; af_pin end address is: 16 (R4)
0x1B1C	0xF002020F  AND	R2, R2, #15
; af start address is: 44 (R11)
0x1B20	0x4693    MOV	R11, R2
;__Lib_GPIO_32F4xx.c, 199 :: 		
0x1B22	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54
; port end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 200 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56:
0x1B24	0x4A2D    LDR	R2, [PC, #180]
0x1B26	0x9202    STR	R2, [SP, #8]
0x1B28	0xE029    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 201 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57:
0x1B2A	0x4A2D    LDR	R2, [PC, #180]
0x1B2C	0x9202    STR	R2, [SP, #8]
0x1B2E	0xE026    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 202 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58:
0x1B30	0x4A2C    LDR	R2, [PC, #176]
0x1B32	0x9202    STR	R2, [SP, #8]
0x1B34	0xE023    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 203 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59:
0x1B36	0x4A2C    LDR	R2, [PC, #176]
0x1B38	0x9202    STR	R2, [SP, #8]
0x1B3A	0xE020    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 204 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60:
0x1B3C	0x4A2B    LDR	R2, [PC, #172]
0x1B3E	0x9202    STR	R2, [SP, #8]
0x1B40	0xE01D    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 205 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61:
0x1B42	0x4A2B    LDR	R2, [PC, #172]
0x1B44	0x9202    STR	R2, [SP, #8]
0x1B46	0xE01A    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 206 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62:
0x1B48	0x4A2A    LDR	R2, [PC, #168]
0x1B4A	0x9202    STR	R2, [SP, #8]
0x1B4C	0xE017    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 207 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63:
0x1B4E	0x4A2A    LDR	R2, [PC, #168]
0x1B50	0x9202    STR	R2, [SP, #8]
0x1B52	0xE014    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 208 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64:
0x1B54	0x4A29    LDR	R2, [PC, #164]
0x1B56	0x9202    STR	R2, [SP, #8]
0x1B58	0xE011    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55
;__Lib_GPIO_32F4xx.c, 209 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function54:
; port start address is: 0 (R0)
0x1B5A	0x2800    CMP	R0, #0
0x1B5C	0xD0E2    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function56
0x1B5E	0x2801    CMP	R0, #1
0x1B60	0xD0E3    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function57
0x1B62	0x2802    CMP	R0, #2
0x1B64	0xD0E4    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function58
0x1B66	0x2803    CMP	R0, #3
0x1B68	0xD0E5    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function59
0x1B6A	0x2804    CMP	R0, #4
0x1B6C	0xD0E6    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function60
0x1B6E	0x2805    CMP	R0, #5
0x1B70	0xD0E7    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function61
0x1B72	0x2806    CMP	R0, #6
0x1B74	0xD0E8    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function62
0x1B76	0x2807    CMP	R0, #7
0x1B78	0xD0E9    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function63
0x1B7A	0x2808    CMP	R0, #8
0x1B7C	0xD0EA    BEQ	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function64
; port end address is: 0 (R0)
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function55:
;__Lib_GPIO_32F4xx.c, 211 :: 		
0x1B7E	0x2201    MOVS	R2, #1
0x1B80	0xB212    SXTH	R2, R2
0x1B82	0xFA02F20C  LSL	R2, R2, R12
0x1B86	0xF8AD2004  STRH	R2, [SP, #4]
; configs end address is: 4 (R1)
0x1B8A	0x9802    LDR	R0, [SP, #8]
0x1B8C	0x460A    MOV	R2, R1
0x1B8E	0xF8BD1004  LDRH	R1, [SP, #4]
0x1B92	0xF7FEFF5D  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 213 :: 		
0x1B96	0x9A02    LDR	R2, [SP, #8]
0x1B98	0xF2020120  ADDW	R1, R2, #32
; tmp_ptr start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x1B9C	0xF1BC0F07  CMP	R12, #7
0x1BA0	0xD908    BLS	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90
;__Lib_GPIO_32F4xx.c, 215 :: 		
0x1BA2	0x1D0A    ADDS	R2, R1, #4
; tmp_ptr end address is: 4 (R1)
; tmp_ptr start address is: 0 (R0)
0x1BA4	0x4610    MOV	R0, R2
;__Lib_GPIO_32F4xx.c, 216 :: 		
0x1BA6	0xF1AC0208  SUB	R2, R12, #8
; pin end address is: 48 (R12)
; pin start address is: 4 (R1)
0x1BAA	0x4611    MOV	R1, R2
; tmp_ptr end address is: 0 (R0)
; pin end address is: 4 (R1)
0x1BAC	0x9101    STR	R1, [SP, #4]
0x1BAE	0x4601    MOV	R1, R0
0x1BB0	0x9801    LDR	R0, [SP, #4]
;__Lib_GPIO_32F4xx.c, 217 :: 		
0x1BB2	0xE000    B	L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function90:
;__Lib_GPIO_32F4xx.c, 214 :: 		
0x1BB4	0x4660    MOV	R0, R12
;__Lib_GPIO_32F4xx.c, 217 :: 		
L___Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function65:
;__Lib_GPIO_32F4xx.c, 218 :: 		
; pin start address is: 0 (R0)
; tmp_ptr start address is: 4 (R1)
0x1BB6	0x0083    LSLS	R3, R0, #2
0x1BB8	0xF04F020F  MOV	R2, #15
0x1BBC	0x409A    LSLS	R2, R3
0x1BBE	0x43D3    MVN	R3, R2
0x1BC0	0x680A    LDR	R2, [R1, #0]
0x1BC2	0x401A    ANDS	R2, R3
0x1BC4	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 219 :: 		
0x1BC6	0x0082    LSLS	R2, R0, #2
; pin end address is: 0 (R0)
0x1BC8	0xFA0BF302  LSL	R3, R11, R2
; af end address is: 44 (R11)
0x1BCC	0x680A    LDR	R2, [R1, #0]
0x1BCE	0x431A    ORRS	R2, R3
0x1BD0	0x600A    STR	R2, [R1, #0]
; tmp_ptr end address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 220 :: 		
L_end_GPIO_Config_Pin_Alternate_Function:
0x1BD2	0xF8DDE000  LDR	LR, [SP, #0]
0x1BD6	0xB003    ADD	SP, SP, #12
0x1BD8	0x4770    BX	LR
0x1BDA	0xBF00    NOP
0x1BDC	0x00004002  	#1073872896
0x1BE0	0x04004002  	#1073873920
0x1BE4	0x08004002  	#1073874944
0x1BE8	0x0C004002  	#1073875968
0x1BEC	0x10004002  	#1073876992
0x1BF0	0x14004002  	#1073878016
0x1BF4	0x18004002  	#1073879040
0x1BF8	0x1C004002  	#1073880064
0x1BFC	0x20004002  	#1073881088
; end of __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
_GPIO_Config:
;__Lib_GPIO_32F4xx.c, 74 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0A50	0xB084    SUB	SP, SP, #16
0x0A52	0xF8CDE000  STR	LR, [SP, #0]
0x0A56	0xB28D    UXTH	R5, R1
0x0A58	0x4616    MOV	R6, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 20 (R5)
; config start address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 75 :: 		
;__Lib_GPIO_32F4xx.c, 76 :: 		
;__Lib_GPIO_32F4xx.c, 80 :: 		
0x0A5A	0x4B86    LDR	R3, [PC, #536]
0x0A5C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 28 (R7)
0x0A60	0x461F    MOV	R7, R3
;__Lib_GPIO_32F4xx.c, 82 :: 		
0x0A62	0x4618    MOV	R0, R3
0x0A64	0xF7FFFDF0  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F4xx.c, 85 :: 		
0x0A68	0xF1B50FFF  CMP	R5, #255
0x0A6C	0xD120    BNE	L_GPIO_Config22
;__Lib_GPIO_32F4xx.c, 86 :: 		
0x0A6E	0x683C    LDR	R4, [R7, #0]
;__Lib_GPIO_32F4xx.c, 87 :: 		
0x0A70	0x4B81    LDR	R3, [PC, #516]
0x0A72	0xEA040303  AND	R3, R4, R3, LSL #0
; tmp start address is: 0 (R0)
0x0A76	0x4618    MOV	R0, R3
;__Lib_GPIO_32F4xx.c, 88 :: 		
0x0A78	0x4B80    LDR	R3, [PC, #512]
0x0A7A	0x429E    CMP	R6, R3
0x0A7C	0xD114    BNE	L_GPIO_Config23
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 89 :: 		
0x0A7E	0xF2455355  MOVW	R3, #21845
0x0A82	0xEA400303  ORR	R3, R0, R3, LSL #0
; tmp end address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 90 :: 		
0x0A86	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 91 :: 		
0x0A88	0x1D3D    ADDS	R5, R7, #4
0x0A8A	0x682C    LDR	R4, [R5, #0]
0x0A8C	0xF06F03FF  MVN	R3, #255
0x0A90	0xEA040303  AND	R3, R4, R3, LSL #0
0x0A94	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 92 :: 		
0x0A96	0xF2070508  ADDW	R5, R7, #8
; port end address is: 28 (R7)
0x0A9A	0x682C    LDR	R4, [R5, #0]
0x0A9C	0xF64F73FF  MOVW	R3, #65535
0x0AA0	0xEA440303  ORR	R3, R4, R3, LSL #0
0x0AA4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 93 :: 		
0x0AA6	0xE0E1    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 94 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F4xx.c, 95 :: 		
; port start address is: 28 (R7)
; tmp start address is: 0 (R0)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0AA8	0x2E42    CMP	R6, #66
0x0AAA	0xD101    BNE	L_GPIO_Config24
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 96 :: 		
0x0AAC	0x6038    STR	R0, [R7, #0]
; tmp end address is: 0 (R0)
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 97 :: 		
0x0AAE	0xE0DD    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 98 :: 		
L_GPIO_Config24:
;__Lib_GPIO_32F4xx.c, 99 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config22:
;__Lib_GPIO_32F4xx.c, 101 :: 		
0x0AB0	0xF64F73FF  MOVW	R3, #65535
0x0AB4	0x429D    CMP	R5, R3
0x0AB6	0xD113    BNE	L_GPIO_Config25
;__Lib_GPIO_32F4xx.c, 102 :: 		
0x0AB8	0x4B70    LDR	R3, [PC, #448]
0x0ABA	0x429E    CMP	R6, R3
0x0ABC	0xD10B    BNE	L_GPIO_Config26
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 103 :: 		
0x0ABE	0xF04F3355  MOV	R3, #1431655765
0x0AC2	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 104 :: 		
0x0AC4	0x1D3C    ADDS	R4, R7, #4
0x0AC6	0x2300    MOVS	R3, #0
0x0AC8	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 105 :: 		
0x0ACA	0xF2070408  ADDW	R4, R7, #8
; port end address is: 28 (R7)
0x0ACE	0xF04F33FF  MOV	R3, #-1
0x0AD2	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F4xx.c, 106 :: 		
0x0AD4	0xE0CA    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 107 :: 		
L_GPIO_Config26:
;__Lib_GPIO_32F4xx.c, 108 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
0x0AD6	0x2E42    CMP	R6, #66
0x0AD8	0xD102    BNE	L_GPIO_Config27
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
;__Lib_GPIO_32F4xx.c, 109 :: 		
0x0ADA	0x2300    MOVS	R3, #0
0x0ADC	0x603B    STR	R3, [R7, #0]
; port end address is: 28 (R7)
;__Lib_GPIO_32F4xx.c, 110 :: 		
0x0ADE	0xE0C5    B	L_end_GPIO_Config
;__Lib_GPIO_32F4xx.c, 111 :: 		
L_GPIO_Config27:
;__Lib_GPIO_32F4xx.c, 112 :: 		
; port start address is: 28 (R7)
; config start address is: 24 (R6)
; pin_mask start address is: 20 (R5)
L_GPIO_Config25:
;__Lib_GPIO_32F4xx.c, 114 :: 		
0x0AE0	0xF0060301  AND	R3, R6, #1
0x0AE4	0xB10B    CBZ	R3, L_GPIO_Config28
;__Lib_GPIO_32F4xx.c, 115 :: 		
; mode start address is: 0 (R0)
0x0AE6	0x2003    MOVS	R0, #3
; mode end address is: 0 (R0)
0x0AE8	0xE00A    B	L_GPIO_Config29
L_GPIO_Config28:
;__Lib_GPIO_32F4xx.c, 116 :: 		
0x0AEA	0xF0060308  AND	R3, R6, #8
0x0AEE	0xB10B    CBZ	R3, L_GPIO_Config30
;__Lib_GPIO_32F4xx.c, 117 :: 		
; mode start address is: 0 (R0)
0x0AF0	0x2002    MOVS	R0, #2
; mode end address is: 0 (R0)
0x0AF2	0xE005    B	L_GPIO_Config31
L_GPIO_Config30:
;__Lib_GPIO_32F4xx.c, 118 :: 		
0x0AF4	0xF0060304  AND	R3, R6, #4
0x0AF8	0xB10B    CBZ	R3, L_GPIO_Config32
;__Lib_GPIO_32F4xx.c, 119 :: 		
; mode start address is: 0 (R0)
0x0AFA	0x2001    MOVS	R0, #1
; mode end address is: 0 (R0)
0x0AFC	0xE000    B	L_GPIO_Config33
L_GPIO_Config32:
;__Lib_GPIO_32F4xx.c, 121 :: 		
; mode start address is: 0 (R0)
0x0AFE	0x2000    MOVS	R0, #0
; mode end address is: 0 (R0)
L_GPIO_Config33:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config31:
; mode start address is: 0 (R0)
; mode end address is: 0 (R0)
L_GPIO_Config29:
;__Lib_GPIO_32F4xx.c, 123 :: 		
; mode start address is: 0 (R0)
0x0B00	0xF4062301  AND	R3, R6, #528384
0x0B04	0xB10B    CBZ	R3, L_GPIO_Config34
;__Lib_GPIO_32F4xx.c, 124 :: 		
; speed start address is: 4 (R1)
0x0B06	0x2103    MOVS	R1, #3
; speed end address is: 4 (R1)
0x0B08	0xE00A    B	L_GPIO_Config35
L_GPIO_Config34:
;__Lib_GPIO_32F4xx.c, 125 :: 		
0x0B0A	0xF4066300  AND	R3, R6, #2048
0x0B0E	0xB10B    CBZ	R3, L_GPIO_Config36
;__Lib_GPIO_32F4xx.c, 126 :: 		
; speed start address is: 4 (R1)
0x0B10	0x2102    MOVS	R1, #2
; speed end address is: 4 (R1)
0x0B12	0xE005    B	L_GPIO_Config37
L_GPIO_Config36:
;__Lib_GPIO_32F4xx.c, 127 :: 		
0x0B14	0xF4066380  AND	R3, R6, #1024
0x0B18	0xB10B    CBZ	R3, L_GPIO_Config38
;__Lib_GPIO_32F4xx.c, 128 :: 		
; speed start address is: 4 (R1)
0x0B1A	0x2101    MOVS	R1, #1
; speed end address is: 4 (R1)
0x0B1C	0xE000    B	L_GPIO_Config39
L_GPIO_Config38:
;__Lib_GPIO_32F4xx.c, 130 :: 		
; speed start address is: 4 (R1)
0x0B1E	0x2100    MOVS	R1, #0
; speed end address is: 4 (R1)
L_GPIO_Config39:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config37:
; speed start address is: 4 (R1)
; speed end address is: 4 (R1)
L_GPIO_Config35:
;__Lib_GPIO_32F4xx.c, 132 :: 		
; speed start address is: 4 (R1)
0x0B20	0xF0060320  AND	R3, R6, #32
0x0B24	0xB10B    CBZ	R3, L_GPIO_Config40
;__Lib_GPIO_32F4xx.c, 133 :: 		
; otype start address is: 8 (R2)
0x0B26	0x2201    MOVS	R2, #1
; otype end address is: 8 (R2)
0x0B28	0xE000    B	L_GPIO_Config41
L_GPIO_Config40:
;__Lib_GPIO_32F4xx.c, 135 :: 		
; otype start address is: 8 (R2)
0x0B2A	0x2200    MOVS	R2, #0
; otype end address is: 8 (R2)
L_GPIO_Config41:
;__Lib_GPIO_32F4xx.c, 137 :: 		
; otype start address is: 8 (R2)
0x0B2C	0xF4067380  AND	R3, R6, #256
0x0B30	0xB10B    CBZ	R3, L_GPIO_Config42
;__Lib_GPIO_32F4xx.c, 138 :: 		
; pull start address is: 12 (R3)
0x0B32	0x2302    MOVS	R3, #2
; pull end address is: 12 (R3)
0x0B34	0xE005    B	L_GPIO_Config43
L_GPIO_Config42:
;__Lib_GPIO_32F4xx.c, 139 :: 		
0x0B36	0xF0060380  AND	R3, R6, #128
0x0B3A	0xB10B    CBZ	R3, L_GPIO_Config44
;__Lib_GPIO_32F4xx.c, 140 :: 		
; pull start address is: 12 (R3)
0x0B3C	0x2301    MOVS	R3, #1
; pull end address is: 12 (R3)
0x0B3E	0xE000    B	L_GPIO_Config45
L_GPIO_Config44:
;__Lib_GPIO_32F4xx.c, 142 :: 		
; pull start address is: 12 (R3)
0x0B40	0x2300    MOVS	R3, #0
; pull end address is: 12 (R3)
L_GPIO_Config45:
; pull start address is: 12 (R3)
; pull end address is: 12 (R3)
L_GPIO_Config43:
;__Lib_GPIO_32F4xx.c, 146 :: 		
; pull start address is: 12 (R3)
; pinpos start address is: 40 (R10)
0x0B42	0xF2400A00  MOVW	R10, #0
; pin_mask end address is: 20 (R5)
; config end address is: 24 (R6)
; mode end address is: 0 (R0)
; speed end address is: 4 (R1)
; otype end address is: 8 (R2)
; pull end address is: 12 (R3)
; pinpos end address is: 40 (R10)
0x0B46	0x9201    STR	R2, [SP, #4]
0x0B48	0xFA1FF985  UXTH	R9, R5
0x0B4C	0x46B0    MOV	R8, R6
0x0B4E	0x4606    MOV	R6, R0
0x0B50	0x4618    MOV	R0, R3
0x0B52	0x460A    MOV	R2, R1
0x0B54	0x9901    LDR	R1, [SP, #4]
L_GPIO_Config46:
; pinpos start address is: 40 (R10)
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
; pull start address is: 0 (R0)
; pull end address is: 0 (R0)
; otype start address is: 4 (R1)
; otype end address is: 4 (R1)
; speed start address is: 8 (R2)
; speed end address is: 8 (R2)
; mode start address is: 24 (R6)
; mode end address is: 24 (R6)
; port start address is: 28 (R7)
; port end address is: 28 (R7)
; config start address is: 32 (R8)
; config end address is: 32 (R8)
; pin_mask start address is: 36 (R9)
; pin_mask end address is: 36 (R9)
0x0B56	0xF1BA0F10  CMP	R10, #16
0x0B5A	0xF0808087  BCS	L_GPIO_Config47
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
;__Lib_GPIO_32F4xx.c, 148 :: 		
; pin_mask start address is: 36 (R9)
; config start address is: 32 (R8)
; port start address is: 28 (R7)
; mode start address is: 24 (R6)
; speed start address is: 8 (R2)
; otype start address is: 4 (R1)
; pull start address is: 0 (R0)
0x0B5E	0xF04F0301  MOV	R3, #1
0x0B62	0xFA03F40A  LSL	R4, R3, R10
;__Lib_GPIO_32F4xx.c, 150 :: 		
0x0B66	0xEA090304  AND	R3, R9, R4, LSL #0
;__Lib_GPIO_32F4xx.c, 152 :: 		
0x0B6A	0x42A3    CMP	R3, R4
0x0B6C	0xF040807B  BNE	L_GPIO_Config49
;__Lib_GPIO_32F4xx.c, 154 :: 		
0x0B70	0xEA4F044A  LSL	R4, R10, #1
0x0B74	0xF04F0303  MOV	R3, #3
0x0B78	0x40A3    LSLS	R3, R4
0x0B7A	0x43DC    MVN	R4, R3
0x0B7C	0x683B    LDR	R3, [R7, #0]
0x0B7E	0x4023    ANDS	R3, R4
0x0B80	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 155 :: 		
0x0B82	0xEA4F034A  LSL	R3, R10, #1
0x0B86	0xFA06F403  LSL	R4, R6, R3
0x0B8A	0x683B    LDR	R3, [R7, #0]
0x0B8C	0x4323    ORRS	R3, R4
0x0B8E	0x603B    STR	R3, [R7, #0]
;__Lib_GPIO_32F4xx.c, 157 :: 		
0x0B90	0xF008030C  AND	R3, R8, #12
0x0B94	0xB33B    CBZ	R3, L_GPIO_Config50
;__Lib_GPIO_32F4xx.c, 160 :: 		
0x0B96	0xF2070508  ADDW	R5, R7, #8
0x0B9A	0xEA4F044A  LSL	R4, R10, #1
0x0B9E	0xF04F0303  MOV	R3, #3
0x0BA2	0x40A3    LSLS	R3, R4
0x0BA4	0x43DC    MVN	R4, R3
0x0BA6	0x682B    LDR	R3, [R5, #0]
0x0BA8	0x4023    ANDS	R3, R4
0x0BAA	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 161 :: 		
0x0BAC	0xF2070508  ADDW	R5, R7, #8
0x0BB0	0xEA4F034A  LSL	R3, R10, #1
0x0BB4	0xFA02F403  LSL	R4, R2, R3
0x0BB8	0x682B    LDR	R3, [R5, #0]
0x0BBA	0x4323    ORRS	R3, R4
0x0BBC	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 164 :: 		
0x0BBE	0x1D3D    ADDS	R5, R7, #4
0x0BC0	0xFA1FF48A  UXTH	R4, R10
0x0BC4	0xF04F0301  MOV	R3, #1
0x0BC8	0x40A3    LSLS	R3, R4
0x0BCA	0x43DC    MVN	R4, R3
0x0BCC	0x682B    LDR	R3, [R5, #0]
0x0BCE	0x4023    ANDS	R3, R4
0x0BD0	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 165 :: 		
0x0BD2	0x1D3D    ADDS	R5, R7, #4
0x0BD4	0xFA1FF48A  UXTH	R4, R10
0x0BD8	0xB28B    UXTH	R3, R1
0x0BDA	0xFA03F404  LSL	R4, R3, R4
0x0BDE	0xB2A4    UXTH	R4, R4
0x0BE0	0x682B    LDR	R3, [R5, #0]
0x0BE2	0x4323    ORRS	R3, R4
0x0BE4	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 166 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F4xx.c, 169 :: 		
0x0BE6	0xF207050C  ADDW	R5, R7, #12
0x0BEA	0xFA1FF38A  UXTH	R3, R10
0x0BEE	0x005C    LSLS	R4, R3, #1
0x0BF0	0xB2A4    UXTH	R4, R4
0x0BF2	0xF04F0303  MOV	R3, #3
0x0BF6	0x40A3    LSLS	R3, R4
0x0BF8	0x43DC    MVN	R4, R3
0x0BFA	0x682B    LDR	R3, [R5, #0]
0x0BFC	0x4023    ANDS	R3, R4
0x0BFE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 170 :: 		
0x0C00	0xF207050C  ADDW	R5, R7, #12
0x0C04	0xEA4F034A  LSL	R3, R10, #1
0x0C08	0xFA00F403  LSL	R4, R0, R3
0x0C0C	0x682B    LDR	R3, [R5, #0]
0x0C0E	0x4323    ORRS	R3, R4
0x0C10	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F4xx.c, 172 :: 		
0x0C12	0xF0080308  AND	R3, R8, #8
0x0C16	0xB333    CBZ	R3, L_GPIO_Config51
;__Lib_GPIO_32F4xx.c, 173 :: 		
0x0C18	0xF4080370  AND	R3, R8, #15728640
0x0C1C	0x0D1B    LSRS	R3, R3, #20
0x0C1E	0xF88D300C  STRB	R3, [SP, #12]
;__Lib_GPIO_32F4xx.c, 174 :: 		
0x0C22	0xF1BA0F07  CMP	R10, #7
0x0C26	0xD905    BLS	L_GPIO_Config52
;__Lib_GPIO_32F4xx.c, 175 :: 		
0x0C28	0xF2070324  ADDW	R3, R7, #36
0x0C2C	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 176 :: 		
0x0C2E	0xF1AA0508  SUB	R5, R10, #8
; pos start address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 177 :: 		
; pos end address is: 20 (R5)
0x0C32	0xE003    B	L_GPIO_Config53
L_GPIO_Config52:
;__Lib_GPIO_32F4xx.c, 178 :: 		
0x0C34	0xF2070320  ADDW	R3, R7, #32
0x0C38	0x9302    STR	R3, [SP, #8]
;__Lib_GPIO_32F4xx.c, 179 :: 		
; pos start address is: 20 (R5)
0x0C3A	0x4655    MOV	R5, R10
; pos end address is: 20 (R5)
;__Lib_GPIO_32F4xx.c, 180 :: 		
L_GPIO_Config53:
;__Lib_GPIO_32F4xx.c, 181 :: 		
; pos start address is: 20 (R5)
0x0C3C	0x00AC    LSLS	R4, R5, #2
0x0C3E	0xF04F030F  MOV	R3, #15
0x0C42	0x40A3    LSLS	R3, R4
0x0C44	0x43DC    MVN	R4, R3
0x0C46	0x9B02    LDR	R3, [SP, #8]
0x0C48	0x681B    LDR	R3, [R3, #0]
0x0C4A	0xEA030404  AND	R4, R3, R4, LSL #0
0x0C4E	0x9B02    LDR	R3, [SP, #8]
0x0C50	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 182 :: 		
0x0C52	0xF89D400C  LDRB	R4, [SP, #12]
0x0C56	0x00AB    LSLS	R3, R5, #2
; pos end address is: 20 (R5)
0x0C58	0x409C    LSLS	R4, R3
0x0C5A	0x9B02    LDR	R3, [SP, #8]
0x0C5C	0x681B    LDR	R3, [R3, #0]
0x0C5E	0xEA430404  ORR	R4, R3, R4, LSL #0
0x0C62	0x9B02    LDR	R3, [SP, #8]
0x0C64	0x601C    STR	R4, [R3, #0]
;__Lib_GPIO_32F4xx.c, 183 :: 		
L_GPIO_Config51:
;__Lib_GPIO_32F4xx.c, 185 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F4xx.c, 146 :: 		
0x0C66	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F4xx.c, 186 :: 		
; pull end address is: 0 (R0)
; otype end address is: 4 (R1)
; speed end address is: 8 (R2)
; mode end address is: 24 (R6)
; port end address is: 28 (R7)
; config end address is: 32 (R8)
; pin_mask end address is: 36 (R9)
; pinpos end address is: 40 (R10)
0x0C6A	0xE774    B	L_GPIO_Config46
L_GPIO_Config47:
;__Lib_GPIO_32F4xx.c, 187 :: 		
L_end_GPIO_Config:
0x0C6C	0xF8DDE000  LDR	LR, [SP, #0]
0x0C70	0xB004    ADD	SP, SP, #16
0x0C72	0x4770    BX	LR
0x0C74	0xFC00FFFF  	#-1024
0x0C78	0x0000FFFF  	#-65536
0x0C7C	0x00140008  	#524308
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F4xx.c, 26 :: 		
; gpio_port start address is: 0 (R0)
0x0648	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F4xx.c, 28 :: 		
0x064A	0x491E    LDR	R1, [PC, #120]
0x064C	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0650	0x4608    MOV	R0, R1
;__Lib_GPIO_32F4xx.c, 29 :: 		
; pos start address is: 8 (R2)
0x0652	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F4xx.c, 30 :: 		
0x0654	0xE012    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F4xx.c, 31 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0656	0x2001    MOVS	R0, #1
; pos end address is: 0 (R0)
0x0658	0xE02C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 32 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x065A	0x2002    MOVS	R0, #2
; pos end address is: 0 (R0)
0x065C	0xE02A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 33 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x065E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0660	0xE028    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 34 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x0662	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0664	0xE026    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 35 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0666	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0668	0xE024    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 36 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x066A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x066C	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 37 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x066E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0670	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 38 :: 		
L_GPIO_Clk_Enable9:
; pos start address is: 0 (R0)
0x0672	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0674	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 39 :: 		
L_GPIO_Clk_Enable10:
; pos start address is: 0 (R0)
0x0676	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x067A	0xE01B    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F4xx.c, 40 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x067C	0x4912    LDR	R1, [PC, #72]
0x067E	0x4288    CMP	R0, R1
0x0680	0xD0E9    BEQ	L_GPIO_Clk_Enable2
0x0682	0x4912    LDR	R1, [PC, #72]
0x0684	0x4288    CMP	R0, R1
0x0686	0xD0E8    BEQ	L_GPIO_Clk_Enable3
0x0688	0x4911    LDR	R1, [PC, #68]
0x068A	0x4288    CMP	R0, R1
0x068C	0xD0E7    BEQ	L_GPIO_Clk_Enable4
0x068E	0x4911    LDR	R1, [PC, #68]
0x0690	0x4288    CMP	R0, R1
0x0692	0xD0E6    BEQ	L_GPIO_Clk_Enable5
0x0694	0x4910    LDR	R1, [PC, #64]
0x0696	0x4288    CMP	R0, R1
0x0698	0xD0E5    BEQ	L_GPIO_Clk_Enable6
0x069A	0x4910    LDR	R1, [PC, #64]
0x069C	0x4288    CMP	R0, R1
0x069E	0xD0E4    BEQ	L_GPIO_Clk_Enable7
0x06A0	0x490F    LDR	R1, [PC, #60]
0x06A2	0x4288    CMP	R0, R1
0x06A4	0xD0E3    BEQ	L_GPIO_Clk_Enable8
0x06A6	0x490F    LDR	R1, [PC, #60]
0x06A8	0x4288    CMP	R0, R1
0x06AA	0xD0E2    BEQ	L_GPIO_Clk_Enable9
0x06AC	0x490E    LDR	R1, [PC, #56]
0x06AE	0x4288    CMP	R0, R1
0x06B0	0xD0E1    BEQ	L_GPIO_Clk_Enable10
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x06B2	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F4xx.c, 42 :: 		
; pos start address is: 0 (R0)
0x06B4	0x490D    LDR	R1, [PC, #52]
0x06B6	0x6809    LDR	R1, [R1, #0]
0x06B8	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x06BC	0x490B    LDR	R1, [PC, #44]
0x06BE	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F4xx.c, 43 :: 		
L_end_GPIO_Clk_Enable:
0x06C0	0xB001    ADD	SP, SP, #4
0x06C2	0x4770    BX	LR
0x06C4	0xFC00FFFF  	#-1024
0x06C8	0x00004002  	#1073872896
0x06CC	0x04004002  	#1073873920
0x06D0	0x08004002  	#1073874944
0x06D4	0x0C004002  	#1073875968
0x06D8	0x10004002  	#1073876992
0x06DC	0x14004002  	#1073878016
0x06E0	0x18004002  	#1073879040
0x06E4	0x1C004002  	#1073880064
0x06E8	0x20004002  	#1073881088
0x06EC	0x38304002  	RCC_AHB1ENR+0
; end of _GPIO_Clk_Enable
_UART1_Write_Text:
;__Lib_UART_123_45_6.c, 78 :: 		
; uart_text start address is: 0 (R0)
0x2B80	0xB081    SUB	SP, SP, #4
0x2B82	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 0 (R0)
; uart_text start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 79 :: 		
0x2B86	0x4601    MOV	R1, R0
; uart_text end address is: 0 (R0)
0x2B88	0x4803    LDR	R0, [PC, #12]
0x2B8A	0xF7FFFD45  BL	__Lib_UART_123_45_6_UARTx_Write_Text+0
;__Lib_UART_123_45_6.c, 80 :: 		
L_end_UART1_Write_Text:
0x2B8E	0xF8DDE000  LDR	LR, [SP, #0]
0x2B92	0xB001    ADD	SP, SP, #4
0x2B94	0x4770    BX	LR
0x2B96	0xBF00    NOP
0x2B98	0x10004001  	USART1_SR+0
; end of _UART1_Write_Text
__Lib_UART_123_45_6_UARTx_Write_Text:
;__Lib_UART_123_45_6.c, 67 :: 		
; uart_text start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x2618	0xB081    SUB	SP, SP, #4
0x261A	0xF8CDE000  STR	LR, [SP, #0]
; uart_text end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; uart_text start address is: 4 (R1)
;__Lib_UART_123_45_6.c, 68 :: 		
; counter start address is: 24 (R6)
0x261E	0x2600    MOVS	R6, #0
;__Lib_UART_123_45_6.c, 70 :: 		
0x2620	0x780A    LDRB	R2, [R1, #0]
; data_ start address is: 12 (R3)
0x2622	0xB2D3    UXTB	R3, R2
; UART_Base end address is: 0 (R0)
; uart_text end address is: 4 (R1)
; data_ end address is: 12 (R3)
; counter end address is: 24 (R6)
0x2624	0x4605    MOV	R5, R0
0x2626	0xB2D8    UXTB	R0, R3
0x2628	0x460C    MOV	R4, R1
;__Lib_UART_123_45_6.c, 71 :: 		
L___Lib_UART_123_45_6_UARTx_Write_Text2:
; data_ start address is: 0 (R0)
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
; counter start address is: 24 (R6)
; uart_text start address is: 16 (R4)
; uart_text end address is: 16 (R4)
; UART_Base start address is: 20 (R5)
; UART_Base end address is: 20 (R5)
0x262A	0xB150    CBZ	R0, L___Lib_UART_123_45_6_UARTx_Write_Text3
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
;__Lib_UART_123_45_6.c, 72 :: 		
; UART_Base start address is: 20 (R5)
; uart_text start address is: 16 (R4)
0x262C	0xB2C1    UXTB	R1, R0
; data_ end address is: 0 (R0)
0x262E	0x4628    MOV	R0, R5
0x2630	0xF7FFFCBC  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 73 :: 		
0x2634	0x1C72    ADDS	R2, R6, #1
0x2636	0xB2D2    UXTB	R2, R2
0x2638	0xB2D6    UXTB	R6, R2
;__Lib_UART_123_45_6.c, 74 :: 		
0x263A	0x18A2    ADDS	R2, R4, R2
0x263C	0x7812    LDRB	R2, [R2, #0]
; data_ start address is: 0 (R0)
0x263E	0xB2D0    UXTB	R0, R2
;__Lib_UART_123_45_6.c, 75 :: 		
; uart_text end address is: 16 (R4)
; UART_Base end address is: 20 (R5)
; counter end address is: 24 (R6)
; data_ end address is: 0 (R0)
0x2640	0xE7F3    B	L___Lib_UART_123_45_6_UARTx_Write_Text2
L___Lib_UART_123_45_6_UARTx_Write_Text3:
;__Lib_UART_123_45_6.c, 76 :: 		
L_end_UARTx_Write_Text:
0x2642	0xF8DDE000  LDR	LR, [SP, #0]
0x2646	0xB001    ADD	SP, SP, #4
0x2648	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write_Text
__Lib_UART_123_45_6_UARTx_Write:
;__Lib_UART_123_45_6.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1FAC	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x1FAE	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x1FB2	0x4601    MOV	R1, R0
0x1FB4	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45_6.c, 36 :: 		
L___Lib_UART_123_45_6_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x1FB8	0x680B    LDR	R3, [R1, #0]
0x1FBA	0xF3C312C0  UBFX	R2, R3, #7, #1
0x1FBE	0xB902    CBNZ	R2, L___Lib_UART_123_45_6_UARTx_Write1
;__Lib_UART_123_45_6.c, 37 :: 		
0x1FC0	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Write0
L___Lib_UART_123_45_6_UARTx_Write1:
;__Lib_UART_123_45_6.c, 38 :: 		
0x1FC2	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x1FC4	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 39 :: 		
L_end_UARTx_Write:
0x1FC6	0xB001    ADD	SP, SP, #4
0x1FC8	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Write
_UART1_Write:
;__Lib_UART_123_45_6.c, 41 :: 		
; _data start address is: 0 (R0)
0x2B9C	0xB081    SUB	SP, SP, #4
0x2B9E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 42 :: 		
0x2BA2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x2BA4	0x4803    LDR	R0, [PC, #12]
0x2BA6	0xF7FFFA01  BL	__Lib_UART_123_45_6_UARTx_Write+0
;__Lib_UART_123_45_6.c, 43 :: 		
L_end_UART1_Write:
0x2BAA	0xF8DDE000  LDR	LR, [SP, #0]
0x2BAE	0xB001    ADD	SP, SP, #4
0x2BB0	0x4770    BX	LR
0x2BB2	0xBF00    NOP
0x2BB4	0x10004001  	USART1_SR+0
; end of _UART1_Write
_GPIO_Digital_Output:
;__Lib_GPIO_32F4xx.c, 233 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x2BB8	0xB081    SUB	SP, SP, #4
0x2BBA	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 234 :: 		
0x2BBE	0x4A04    LDR	R2, [PC, #16]
0x2BC0	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x2BC2	0xF7FDFF45  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 235 :: 		
L_end_GPIO_Digital_Output:
0x2BC6	0xF8DDE000  LDR	LR, [SP, #0]
0x2BCA	0xB001    ADD	SP, SP, #4
0x2BCC	0x4770    BX	LR
0x2BCE	0xBF00    NOP
0x2BD0	0x00140008  	#524308
; end of _GPIO_Digital_Output
_GPIO_Digital_Input:
;__Lib_GPIO_32F4xx.c, 237 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x2AF0	0xB081    SUB	SP, SP, #4
0x2AF2	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F4xx.c, 238 :: 		
0x2AF6	0xF04F0242  MOV	R2, #66
0x2AFA	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x2AFC	0xF7FDFFA8  BL	_GPIO_Config+0
;__Lib_GPIO_32F4xx.c, 239 :: 		
L_end_GPIO_Digital_Input:
0x2B00	0xF8DDE000  LDR	LR, [SP, #0]
0x2B04	0xB001    ADD	SP, SP, #4
0x2B06	0x4770    BX	LR
; end of _GPIO_Digital_Input
_SPI3_Init_Advanced:
;__Lib_SPI_123.c, 133 :: 		
; module start address is: 8 (R2)
0x2B08	0xB083    SUB	SP, SP, #12
0x2B0A	0xF8CDE000  STR	LR, [SP, #0]
0x2B0E	0xF88D0004  STRB	R0, [SP, #4]
0x2B12	0x9102    STR	R1, [SP, #8]
; module end address is: 8 (R2)
; module start address is: 8 (R2)
;__Lib_SPI_123.c, 134 :: 		
0x2B14	0x4C0B    LDR	R4, [PC, #44]
0x2B16	0x4B0C    LDR	R3, [PC, #48]
0x2B18	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 135 :: 		
0x2B1A	0x4C0C    LDR	R4, [PC, #48]
0x2B1C	0x4B0C    LDR	R3, [PC, #48]
0x2B1E	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 137 :: 		
0x2B20	0x2401    MOVS	R4, #1
0x2B22	0xB264    SXTB	R4, R4
0x2B24	0x4B0B    LDR	R3, [PC, #44]
0x2B26	0x601C    STR	R4, [R3, #0]
;__Lib_SPI_123.c, 138 :: 		
0x2B28	0x4610    MOV	R0, R2
; module end address is: 8 (R2)
0x2B2A	0xF7FFFA55  BL	_GPIO_Alternate_Function_Enable+0
;__Lib_SPI_123.c, 140 :: 		
0x2B2E	0x9A02    LDR	R2, [SP, #8]
0x2B30	0xF89D1004  LDRB	R1, [SP, #4]
0x2B34	0x4808    LDR	R0, [PC, #32]
0x2B36	0xF7FFFBE9  BL	__Lib_SPI_123_SPIx_Init_Advanced+0
;__Lib_SPI_123.c, 141 :: 		
L_end_SPI3_Init_Advanced:
0x2B3A	0xF8DDE000  LDR	LR, [SP, #0]
0x2B3E	0xB003    ADD	SP, SP, #12
0x2B40	0x4770    BX	LR
0x2B42	0xBF00    NOP
0x2B44	0x01C90000  	_SPI3_Read+0
0x2B48	0x03102000  	_SPI_Rd_Ptr+0
0x2B4C	0xFFFFFFFF  	_SPI3_Write+0
0x2B50	0x03082000  	_SPI_Wr_Ptr+0
0x2B54	0x083C4247  	RCC_APB1ENR+0
0x2B58	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Init_Advanced
__Lib_SPI_123_SPIx_Init_Advanced:
;__Lib_SPI_123.c, 53 :: 		
; config start address is: 8 (R2)
; clock_divider start address is: 4 (R1)
; base start address is: 0 (R0)
0x230C	0xB081    SUB	SP, SP, #4
; config end address is: 8 (R2)
; clock_divider end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; clock_divider start address is: 4 (R1)
; config start address is: 8 (R2)
;__Lib_SPI_123.c, 56 :: 		
0x230E	0x2300    MOVS	R3, #0
0x2310	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 58 :: 		
0x2312	0x00CB    LSLS	R3, R1, #3
0x2314	0xB29B    UXTH	R3, R3
; clock_divider end address is: 4 (R1)
0x2316	0xEA420303  ORR	R3, R2, R3, LSL #0
;__Lib_SPI_123.c, 60 :: 		
0x231A	0x6804    LDR	R4, [R0, #0]
0x231C	0xB29B    UXTH	R3, R3
0x231E	0xEA440303  ORR	R3, R4, R3, LSL #0
0x2322	0x6003    STR	R3, [R0, #0]
;__Lib_SPI_123.c, 61 :: 		
0x2324	0x1D05    ADDS	R5, R0, #4
0x2326	0x1413    ASRS	R3, R2, #16
; config end address is: 8 (R2)
0x2328	0x461C    MOV	R4, R3
0x232A	0x682B    LDR	R3, [R5, #0]
0x232C	0xF3640382  BFI	R3, R4, #2, #1
0x2330	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 63 :: 		
0x2332	0xF200051C  ADDW	R5, R0, #28
0x2336	0x2400    MOVS	R4, #0
0x2338	0x682B    LDR	R3, [R5, #0]
0x233A	0xF36423CB  BFI	R3, R4, #11, #1
0x233E	0x602B    STR	R3, [R5, #0]
;__Lib_SPI_123.c, 64 :: 		
0x2340	0x2401    MOVS	R4, #1
0x2342	0x6803    LDR	R3, [R0, #0]
0x2344	0xF3641386  BFI	R3, R4, #6, #1
0x2348	0x6003    STR	R3, [R0, #0]
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 65 :: 		
L_end_SPIx_Init_Advanced:
0x234A	0xB001    ADD	SP, SP, #4
0x234C	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Init_Advanced
_blep_hal_init:
;blep_hal.c, 83 :: 		void blep_hal_init()
;blep_hal.c, 90 :: 		write_spi_p = SPI_Wr_Ptr;
0x2B5C	0x4804    LDR	R0, [PC, #16]
0x2B5E	0x6801    LDR	R1, [R0, #0]
0x2B60	0x4804    LDR	R0, [PC, #16]
0x2B62	0x6001    STR	R1, [R0, #0]
;blep_hal.c, 91 :: 		read_spi_p = SPI_Rd_Ptr;
0x2B64	0x4804    LDR	R0, [PC, #16]
0x2B66	0x6801    LDR	R1, [R0, #0]
0x2B68	0x4804    LDR	R0, [PC, #16]
0x2B6A	0x6001    STR	R1, [R0, #0]
;blep_hal.c, 104 :: 		}
L_end_blep_hal_init:
0x2B6C	0x4770    BX	LR
0x2B6E	0xBF00    NOP
0x2B70	0x03082000  	_SPI_Wr_Ptr+0
0x2B74	0x03042000  	blep_hal_write_spi_p+0
0x2B78	0x03102000  	_SPI_Rd_Ptr+0
0x2B7C	0x030C2000  	blep_hal_read_spi_p+0
; end of _blep_hal_init
_setup:
;ble_p_click.c, 33 :: 		void setup(void)
0x2C38	0xB081    SUB	SP, SP, #4
0x2C3A	0xF8CDE000  STR	LR, [SP, #0]
;ble_p_click.c, 37 :: 		ble_uart_setup(MOSI_PIN, MISO_PIN, SCK_PIN, REQN_PIN, RDYN_PIN, RESET_PIN);
0x2C3E	0x2105    MOVS	R1, #5
0x2C40	0x2001    MOVS	R0, #1
0x2C42	0xB402    PUSH	(R1)
0x2C44	0xB401    PUSH	(R0)
0x2C46	0x2300    MOVS	R3, #0
0x2C48	0x2204    MOVS	R2, #4
0x2C4A	0x2103    MOVS	R1, #3
0x2C4C	0x2002    MOVS	R0, #2
0x2C4E	0xF7FFFA85  BL	_ble_uart_setup+0
0x2C52	0xB002    ADD	SP, SP, #8
;ble_p_click.c, 40 :: 		clear_serial_buffer();
0x2C54	0xF7FFFB7C  BL	ble_p_click_clear_serial_buffer+0
;ble_p_click.c, 42 :: 		}
L_end_setup:
0x2C58	0xF8DDE000  LDR	LR, [SP, #0]
0x2C5C	0xB001    ADD	SP, SP, #4
0x2C5E	0x4770    BX	LR
; end of _setup
_ble_uart_setup:
;ble_uart.c, 86 :: 		void ble_uart_setup(uint8_t pin_mosi, uint8_t pin_miso, uint8_t pin_sck, uint8_t pin_reqn, uint8_t pin_rdyn, uint8_t pin_reset)
; pin_reqn start address is: 12 (R3)
; pin_sck start address is: 8 (R2)
; pin_miso start address is: 4 (R1)
; pin_mosi start address is: 0 (R0)
0x215C	0xB081    SUB	SP, SP, #4
0x215E	0xF8CDE000  STR	LR, [SP, #0]
0x2162	0xB2C7    UXTB	R7, R0
0x2164	0xFA5FF881  UXTB	R8, R1
0x2168	0xFA5FF982  UXTB	R9, R2
0x216C	0xFA5FFA83  UXTB	R10, R3
; pin_reqn end address is: 12 (R3)
; pin_sck end address is: 8 (R2)
; pin_miso end address is: 4 (R1)
; pin_mosi end address is: 0 (R0)
; pin_mosi start address is: 28 (R7)
; pin_miso start address is: 32 (R8)
; pin_sck start address is: 36 (R9)
; pin_reqn start address is: 40 (R10)
; pin_rdyn start address is: 44 (R11)
0x2170	0xF89DB004  LDRB	R11, [SP, #4]
; pin_reset start address is: 48 (R12)
0x2174	0xF89DC008  LDRB	R12, [SP, #8]
;ble_uart.c, 88 :: 		UART1_Write_Text("BLE P Click Setup");
0x2178	0x4C22    LDR	R4, [PC, #136]
0x217A	0x4620    MOV	R0, R4
0x217C	0xF000FD00  BL	_UART1_Write_Text+0
;ble_uart.c, 89 :: 		UART1_Write_Text("Set line ending to newline to send data from the serial monitor");
0x2180	0x4C21    LDR	R4, [PC, #132]
0x2182	0x4620    MOV	R0, R4
0x2184	0xF000FCFC  BL	_UART1_Write_Text+0
;ble_uart.c, 94 :: 		if (NULL != services_pipe_type_mapping)
0x2188	0x2500    MOVS	R5, #0
0x218A	0x4C20    LDR	R4, [PC, #128]
0x218C	0x42A5    CMP	R5, R4
0x218E	0xD003    BEQ	L_ble_uart_setup0
;ble_uart.c, 96 :: 		aci_state.aci_setup_info.services_pipe_type_mapping = &services_pipe_type_mapping[0];
0x2190	0x4D1E    LDR	R5, [PC, #120]
0x2192	0x4C1F    LDR	R4, [PC, #124]
0x2194	0x6025    STR	R5, [R4, #0]
;ble_uart.c, 97 :: 		}
0x2196	0xE002    B	L_ble_uart_setup1
L_ble_uart_setup0:
;ble_uart.c, 100 :: 		aci_state.aci_setup_info.services_pipe_type_mapping = NULL;
0x2198	0x2500    MOVS	R5, #0
0x219A	0x4C1D    LDR	R4, [PC, #116]
0x219C	0x6025    STR	R5, [R4, #0]
;ble_uart.c, 101 :: 		}
L_ble_uart_setup1:
;ble_uart.c, 102 :: 		aci_state.aci_setup_info.number_of_pipes    = NUMBER_OF_PIPES;
0x219E	0x250C    MOVS	R5, #12
0x21A0	0x4C1C    LDR	R4, [PC, #112]
0x21A2	0x7025    STRB	R5, [R4, #0]
;ble_uart.c, 103 :: 		aci_state.aci_setup_info.setup_msgs         = (hal_aci_data_t*) setup_msgs;
0x21A4	0x4D1C    LDR	R5, [PC, #112]
0x21A6	0x4C1D    LDR	R4, [PC, #116]
0x21A8	0x6025    STR	R5, [R4, #0]
;ble_uart.c, 104 :: 		aci_state.aci_setup_info.num_setup_msgs     = NB_SETUP_MESSAGES;
0x21AA	0x2522    MOVS	R5, #34
0x21AC	0x4C1C    LDR	R4, [PC, #112]
0x21AE	0x7025    STRB	R5, [R4, #0]
;ble_uart.c, 110 :: 		aci_state.aci_pins.board_name = BOARD_DEFAULT; //See board.h for details
0x21B0	0x2500    MOVS	R5, #0
0x21B2	0x4C1C    LDR	R4, [PC, #112]
0x21B4	0x7025    STRB	R5, [R4, #0]
;ble_uart.c, 111 :: 		aci_state.aci_pins.mosi_pin   = pin_mosi;
0x21B6	0x4C1C    LDR	R4, [PC, #112]
0x21B8	0x7027    STRB	R7, [R4, #0]
; pin_mosi end address is: 28 (R7)
;ble_uart.c, 112 :: 		aci_state.aci_pins.miso_pin   = pin_miso;
0x21BA	0x4C1C    LDR	R4, [PC, #112]
0x21BC	0xF8848000  STRB	R8, [R4, #0]
; pin_miso end address is: 32 (R8)
;ble_uart.c, 113 :: 		aci_state.aci_pins.reqn_pin   = pin_reqn;
0x21C0	0x4C1B    LDR	R4, [PC, #108]
0x21C2	0xF884A000  STRB	R10, [R4, #0]
; pin_reqn end address is: 40 (R10)
;ble_uart.c, 114 :: 		aci_state.aci_pins.rdyn_pin   = pin_rdyn;
0x21C6	0x4C1B    LDR	R4, [PC, #108]
0x21C8	0xF884B000  STRB	R11, [R4, #0]
; pin_rdyn end address is: 44 (R11)
;ble_uart.c, 115 :: 		aci_state.aci_pins.sck_pin    = pin_sck;
0x21CC	0x4C1A    LDR	R4, [PC, #104]
0x21CE	0xF8849000  STRB	R9, [R4, #0]
; pin_sck end address is: 36 (R9)
;ble_uart.c, 116 :: 		aci_state.aci_pins.reset_pin  = pin_reset;
0x21D2	0x4C1A    LDR	R4, [PC, #104]
0x21D4	0xF884C000  STRB	R12, [R4, #0]
; pin_reset end address is: 48 (R12)
;ble_uart.c, 121 :: 		aci_state.aci_pins.active_pin             = ACTIVE_PIN;
0x21D8	0x2506    MOVS	R5, #6
0x21DA	0x4C19    LDR	R4, [PC, #100]
0x21DC	0x7025    STRB	R5, [R4, #0]
;ble_uart.c, 124 :: 		aci_state.aci_pins.interface_is_interrupt = false;
0x21DE	0x2500    MOVS	R5, #0
0x21E0	0x4C18    LDR	R4, [PC, #96]
0x21E2	0x7025    STRB	R5, [R4, #0]
;ble_uart.c, 125 :: 		aci_state.aci_pins.interrupt_number       = 1;
0x21E4	0x2501    MOVS	R5, #1
0x21E6	0x4C18    LDR	R4, [PC, #96]
0x21E8	0x7025    STRB	R5, [R4, #0]
;ble_uart.c, 131 :: 		lib_aci_init(&aci_state, false);
0x21EA	0x2100    MOVS	R1, #0
0x21EC	0x480D    LDR	R0, [PC, #52]
0x21EE	0xF7FFFF55  BL	_lib_aci_init+0
;ble_uart.c, 133 :: 		UART1_Write_Text("SETUP DONE");
0x21F2	0x4C16    LDR	R4, [PC, #88]
0x21F4	0x4620    MOV	R0, R4
0x21F6	0xF000FCC3  BL	_UART1_Write_Text+0
;ble_uart.c, 134 :: 		}
L_end_ble_uart_setup:
0x21FA	0xF8DDE000  LDR	LR, [SP, #0]
0x21FE	0xB001    ADD	SP, SP, #4
0x2200	0x4770    BX	LR
0x2202	0xBF00    NOP
0x2204	0x00412000  	?lstr1_ble_uart+0
0x2208	0x00532000  	?lstr2_ble_uart+0
0x220C	0x00942000  	ble_uart_services_pipe_type_mapping+0
0x2210	0x03402000  	_aci_state+12
0x2214	0x03442000  	_aci_state+16
0x2218	0x30E00000  	ble_uart_setup_msgs+0
0x221C	0x03482000  	_aci_state+20
0x2220	0x034C2000  	_aci_state+24
0x2224	0x03342000  	_aci_state+0
0x2228	0x03372000  	_aci_state+3
0x222C	0x03382000  	_aci_state+4
0x2230	0x03352000  	_aci_state+1
0x2234	0x03362000  	_aci_state+2
0x2238	0x03392000  	_aci_state+5
0x223C	0x033B2000  	_aci_state+7
0x2240	0x033C2000  	_aci_state+8
0x2244	0x033E2000  	_aci_state+10
0x2248	0x033F2000  	_aci_state+11
0x224C	0x00C42000  	?lstr3_ble_uart+0
; end of _ble_uart_setup
_lib_aci_init:
;lib_aci.c, 180 :: 		void lib_aci_init(aci_state_t *aci_stat, bool debug)
; debug start address is: 4 (R1)
; aci_stat start address is: 0 (R0)
0x209C	0xB083    SUB	SP, SP, #12
0x209E	0xF8CDE000  STR	LR, [SP, #0]
; debug end address is: 4 (R1)
; aci_stat end address is: 0 (R0)
; aci_stat start address is: 0 (R0)
; debug start address is: 4 (R1)
;lib_aci.c, 184 :: 		for (i = 0; i < PIPES_ARRAY_SIZE; i++)
; i start address is: 16 (R4)
0x20A2	0x2400    MOVS	R4, #0
; aci_stat end address is: 0 (R0)
; debug end address is: 4 (R1)
; i end address is: 16 (R4)
0x20A4	0xF88D1004  STRB	R1, [SP, #4]
0x20A8	0x4601    MOV	R1, R0
0x20AA	0xF89D0004  LDRB	R0, [SP, #4]
L_lib_aci_init15:
; i start address is: 16 (R4)
; debug start address is: 0 (R0)
; aci_stat start address is: 4 (R1)
0x20AE	0x2C08    CMP	R4, #8
0x20B0	0xD210    BCS	L_lib_aci_init16
;lib_aci.c, 186 :: 		aci_stat->pipes_open_bitmap[i]          = 0;
0x20B2	0xF2010226  ADDW	R2, R1, #38
0x20B6	0x1913    ADDS	R3, R2, R4
0x20B8	0x2200    MOVS	R2, #0
0x20BA	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 187 :: 		aci_stat->pipes_closed_bitmap[i]        = 0;
0x20BC	0xF201022E  ADDW	R2, R1, #46
0x20C0	0x1913    ADDS	R3, R2, R4
0x20C2	0x2200    MOVS	R2, #0
0x20C4	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 188 :: 		aci_cmd_params_open_adv_pipe.pipes[i]   = 0;
0x20C6	0x4A18    LDR	R2, [PC, #96]
0x20C8	0x1913    ADDS	R3, R2, R4
0x20CA	0x2200    MOVS	R2, #0
0x20CC	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 184 :: 		for (i = 0; i < PIPES_ARRAY_SIZE; i++)
0x20CE	0x1C64    ADDS	R4, R4, #1
0x20D0	0xB2E4    UXTB	R4, R4
;lib_aci.c, 189 :: 		}
; i end address is: 16 (R4)
0x20D2	0xE7EC    B	L_lib_aci_init15
L_lib_aci_init16:
;lib_aci.c, 194 :: 		is_request_operation_pending     = false;
0x20D4	0x2300    MOVS	R3, #0
0x20D6	0x4A15    LDR	R2, [PC, #84]
0x20D8	0x7013    STRB	R3, [R2, #0]
;lib_aci.c, 195 :: 		is_indicate_operation_pending    = false;
0x20DA	0x2300    MOVS	R3, #0
0x20DC	0x4A14    LDR	R2, [PC, #80]
0x20DE	0x7013    STRB	R3, [R2, #0]
;lib_aci.c, 196 :: 		is_open_remote_pipe_pending      = false;
0x20E0	0x2300    MOVS	R3, #0
0x20E2	0x4A14    LDR	R2, [PC, #80]
0x20E4	0x7013    STRB	R3, [R2, #0]
;lib_aci.c, 197 :: 		is_close_remote_pipe_pending     = false;
0x20E6	0x2300    MOVS	R3, #0
0x20E8	0x4A13    LDR	R2, [PC, #76]
0x20EA	0x7013    STRB	R3, [R2, #0]
;lib_aci.c, 203 :: 		request_operation_pipe           = 0;
0x20EC	0x2300    MOVS	R3, #0
0x20EE	0x4A13    LDR	R2, [PC, #76]
0x20F0	0x7013    STRB	R3, [R2, #0]
;lib_aci.c, 204 :: 		indicate_operation_pipe          = 0;
0x20F2	0x2300    MOVS	R3, #0
0x20F4	0x4A12    LDR	R2, [PC, #72]
0x20F6	0x7013    STRB	R3, [R2, #0]
;lib_aci.c, 208 :: 		p_services_pipe_type_map = aci_stat->aci_setup_info.services_pipe_type_mapping;
0x20F8	0xF201040C  ADDW	R4, R1, #12
0x20FC	0x6823    LDR	R3, [R4, #0]
0x20FE	0x4A11    LDR	R2, [PC, #68]
0x2100	0x6013    STR	R3, [R2, #0]
;lib_aci.c, 210 :: 		p_setup_msgs             = aci_stat->aci_setup_info.setup_msgs;
0x2102	0xF2040208  ADDW	R2, R4, #8
0x2106	0x6813    LDR	R3, [R2, #0]
0x2108	0x4A0F    LDR	R2, [PC, #60]
0x210A	0x6013    STR	R3, [R2, #0]
;lib_aci.c, 213 :: 		hal_aci_tl_init(&aci_stat->aci_pins, debug);
0x210C	0x9101    STR	R1, [SP, #4]
; debug end address is: 0 (R0)
0x210E	0x9102    STR	R1, [SP, #8]
0x2110	0xB2C1    UXTB	R1, R0
0x2112	0x9802    LDR	R0, [SP, #8]
0x2114	0xF7FFFC18  BL	_hal_aci_tl_init+0
0x2118	0x9901    LDR	R1, [SP, #4]
;lib_aci.c, 215 :: 		lib_aci_board_init(aci_stat);
0x211A	0x4608    MOV	R0, R1
; aci_stat end address is: 4 (R1)
0x211C	0xF7FFFC5C  BL	_lib_aci_board_init+0
;lib_aci.c, 216 :: 		}
L_end_lib_aci_init:
0x2120	0xF8DDE000  LDR	LR, [SP, #0]
0x2124	0xB003    ADD	SP, SP, #12
0x2126	0x4770    BX	LR
0x2128	0x04802000  	lib_aci_aci_cmd_params_open_adv_pipe+0
0x212C	0x03022000  	lib_aci_is_request_operation_pending+0
0x2130	0x03032000  	lib_aci_is_indicate_operation_pending+0
0x2134	0x04882000  	lib_aci_is_open_remote_pipe_pending+0
0x2138	0x04892000  	lib_aci_is_close_remote_pipe_pending+0
0x213C	0x00DF2000  	lib_aci_request_operation_pipe+0
0x2140	0x00E02000  	lib_aci_indicate_operation_pipe+0
0x2144	0x047C2000  	lib_aci_p_services_pipe_type_map+0
0x2148	0x048C2000  	lib_aci_p_setup_msgs+0
; end of _lib_aci_init
_hal_aci_tl_init:
;hal_aci_tl.c, 346 :: 		void hal_aci_tl_init(aci_pins_t *a_pins, bool debug)
0x1948	0xB082    SUB	SP, SP, #8
0x194A	0xF8CDE000  STR	LR, [SP, #0]
0x194E	0x9001    STR	R0, [SP, #4]
;hal_aci_tl.c, 351 :: 		m_aci_pins_set(a_pins);
0x1950	0x9801    LDR	R0, [SP, #4]
0x1952	0xF7FFF9DF  BL	hal_aci_tl_m_aci_pins_set+0
;hal_aci_tl.c, 369 :: 		aci_queue_init(&aci_tx_q);
0x1956	0x481E    LDR	R0, [PC, #120]
0x1958	0xF7FFFA52  BL	_aci_queue_init+0
;hal_aci_tl.c, 370 :: 		aci_queue_init(&aci_rx_q);
0x195C	0x481D    LDR	R0, [PC, #116]
0x195E	0xF7FFFA4F  BL	_aci_queue_init+0
;hal_aci_tl.c, 377 :: 		if (UNUSED != a_pins->active_pin)
0x1962	0x9A01    LDR	R2, [SP, #4]
0x1964	0x3208    ADDS	R2, #8
0x1966	0x7812    LDRB	R2, [R2, #0]
0x1968	0xF1B20FFF  CMP	R2, #255
0x196C	0xD0FF    BEQ	L_hal_aci_tl_init47
;hal_aci_tl.c, 380 :: 		}
L_hal_aci_tl_init47:
;hal_aci_tl.c, 382 :: 		hal_aci_tl_pin_reset();
0x196E	0xF7FFF987  BL	_hal_aci_tl_pin_reset+0
;hal_aci_tl.c, 386 :: 		digitalWrite(a_pins->miso_pin, 0);
0x1972	0x9A01    LDR	R2, [SP, #4]
0x1974	0x1D12    ADDS	R2, R2, #4
0x1976	0x7812    LDRB	R2, [R2, #0]
0x1978	0x2100    MOVS	R1, #0
0x197A	0xB2D0    UXTB	R0, R2
0x197C	0xF7FEFEF0  BL	_digitalWrite+0
;hal_aci_tl.c, 387 :: 		digitalWrite(a_pins->mosi_pin, 0);
0x1980	0x9A01    LDR	R2, [SP, #4]
0x1982	0x1CD2    ADDS	R2, R2, #3
0x1984	0x7812    LDRB	R2, [R2, #0]
0x1986	0x2100    MOVS	R1, #0
0x1988	0xB2D0    UXTB	R0, R2
0x198A	0xF7FEFEE9  BL	_digitalWrite+0
;hal_aci_tl.c, 388 :: 		digitalWrite(a_pins->reqn_pin, 1);
0x198E	0x9A01    LDR	R2, [SP, #4]
0x1990	0x1C52    ADDS	R2, R2, #1
0x1992	0x7812    LDRB	R2, [R2, #0]
0x1994	0x2101    MOVS	R1, #1
0x1996	0xB2D0    UXTB	R0, R2
0x1998	0xF7FEFEE2  BL	_digitalWrite+0
;hal_aci_tl.c, 389 :: 		digitalWrite(a_pins->sck_pin,  0);
0x199C	0x9A01    LDR	R2, [SP, #4]
0x199E	0x1D52    ADDS	R2, R2, #5
0x19A0	0x7812    LDRB	R2, [R2, #0]
0x19A2	0x2100    MOVS	R1, #0
0x19A4	0xB2D0    UXTB	R0, R2
0x19A6	0xF7FEFEDB  BL	_digitalWrite+0
;hal_aci_tl.c, 391 :: 		Delay_ms(30); //Wait for the nRF8001 to get hold of its lines - the lines float for a few ms after the reset
0x19AA	0xF64547BE  MOVW	R7, #23742
0x19AE	0xF2C00715  MOVT	R7, #21
L_hal_aci_tl_init48:
0x19B2	0x1E7F    SUBS	R7, R7, #1
0x19B4	0xD1FD    BNE	L_hal_aci_tl_init48
0x19B6	0xBF00    NOP
0x19B8	0xBF00    NOP
0x19BA	0xBF00    NOP
0x19BC	0xBF00    NOP
0x19BE	0xBF00    NOP
;hal_aci_tl.c, 395 :: 		if (a_pins->interface_is_interrupt)
0x19C0	0x9A01    LDR	R2, [SP, #4]
0x19C2	0x320A    ADDS	R2, #10
0x19C4	0x7812    LDRB	R2, [R2, #0]
;hal_aci_tl.c, 400 :: 		}
L_hal_aci_tl_init50:
;hal_aci_tl.c, 401 :: 		}
L_end_hal_aci_tl_init:
0x19C6	0xF8DDE000  LDR	LR, [SP, #0]
0x19CA	0xB002    ADD	SP, SP, #8
0x19CC	0x4770    BX	LR
0x19CE	0xBF00    NOP
0x19D0	0x03F62000  	_aci_tx_q+0
0x19D4	0x03702000  	_aci_rx_q+0
; end of _hal_aci_tl_init
hal_aci_tl_m_aci_pins_set:
;hal_aci_tl.c, 191 :: 		static void m_aci_pins_set(aci_pins_t *a_pins_ptr)
; a_pins_ptr start address is: 0 (R0)
; a_pins_ptr end address is: 0 (R0)
; a_pins_ptr start address is: 0 (R0)
;hal_aci_tl.c, 193 :: 		a_pins_local_ptr = a_pins_ptr;
0x0D14	0x4B0F    LDR	R3, [PC, #60]
0x0D16	0x6018    STR	R0, [R3, #0]
;hal_aci_tl.c, 194 :: 		a_pins_local_ptr->active_pin = ACTIVE_PIN;
0x0D18	0xF2000208  ADDW	R2, R0, #8
; a_pins_ptr end address is: 0 (R0)
0x0D1C	0x2106    MOVS	R1, #6
0x0D1E	0x7011    STRB	R1, [R2, #0]
;hal_aci_tl.c, 195 :: 		a_pins_local_ptr->rdyn_pin = RDYN_PIN;
0x0D20	0x4619    MOV	R1, R3
0x0D22	0x6809    LDR	R1, [R1, #0]
0x0D24	0x1C8A    ADDS	R2, R1, #2
0x0D26	0x2101    MOVS	R1, #1
0x0D28	0x7011    STRB	R1, [R2, #0]
;hal_aci_tl.c, 196 :: 		a_pins_local_ptr->reqn_pin = REQN_PIN;
0x0D2A	0x4619    MOV	R1, R3
0x0D2C	0x6809    LDR	R1, [R1, #0]
0x0D2E	0x1C4A    ADDS	R2, R1, #1
0x0D30	0x2100    MOVS	R1, #0
0x0D32	0x7011    STRB	R1, [R2, #0]
;hal_aci_tl.c, 197 :: 		a_pins_local_ptr->reset_pin = RESET_PIN;
0x0D34	0x4619    MOV	R1, R3
0x0D36	0x6809    LDR	R1, [R1, #0]
0x0D38	0x1DCA    ADDS	R2, R1, #7
0x0D3A	0x2105    MOVS	R1, #5
0x0D3C	0x7011    STRB	R1, [R2, #0]
;hal_aci_tl.c, 198 :: 		a_pins_local_ptr->miso_pin = MISO_PIN;
0x0D3E	0x4619    MOV	R1, R3
0x0D40	0x6809    LDR	R1, [R1, #0]
0x0D42	0x1D0A    ADDS	R2, R1, #4
0x0D44	0x2103    MOVS	R1, #3
0x0D46	0x7011    STRB	R1, [R2, #0]
;hal_aci_tl.c, 199 :: 		a_pins_local_ptr->mosi_pin = MOSI_PIN;
0x0D48	0x4619    MOV	R1, R3
0x0D4A	0x6809    LDR	R1, [R1, #0]
0x0D4C	0x1CCA    ADDS	R2, R1, #3
0x0D4E	0x2102    MOVS	R1, #2
0x0D50	0x7011    STRB	R1, [R2, #0]
;hal_aci_tl.c, 200 :: 		}
L_end_m_aci_pins_set:
0x0D52	0x4770    BX	LR
0x0D54	0x036C2000  	hal_aci_tl_a_pins_local_ptr+0
; end of hal_aci_tl_m_aci_pins_set
_aci_queue_init:
;aci_queue.c, 33 :: 		void aci_queue_init(aci_queue_t *aci_q)
; aci_q start address is: 0 (R0)
0x0E00	0xB083    SUB	SP, SP, #12
0x0E02	0xF8CDE000  STR	LR, [SP, #0]
0x0E06	0x4603    MOV	R3, R0
; aci_q end address is: 0 (R0)
; aci_q start address is: 12 (R3)
;aci_queue.c, 37 :: 		ble_assert(NULL != aci_q);
0x0E08	0xB103    CBZ	R3, L_aci_queue_init0
0x0E0A	0xE006    B	L_aci_queue_init1
L_aci_queue_init0:
0x0E0C	0x4912    LDR	R1, [PC, #72]
0x0E0E	0x9301    STR	R3, [SP, #4]
0x0E10	0x4608    MOV	R0, R1
0x0E12	0x2125    MOVS	R1, #37
0x0E14	0xF7FFFCC2  BL	___ble_assert+0
0x0E18	0x9B01    LDR	R3, [SP, #4]
L_aci_queue_init1:
;aci_queue.c, 39 :: 		aci_q->head = 0;
0x0E1A	0xF2030284  ADDW	R2, R3, #132
0x0E1E	0x2100    MOVS	R1, #0
0x0E20	0x7011    STRB	R1, [R2, #0]
;aci_queue.c, 40 :: 		aci_q->tail = 0;
0x0E22	0xF2030285  ADDW	R2, R3, #133
0x0E26	0x2100    MOVS	R1, #0
0x0E28	0x7011    STRB	R1, [R2, #0]
;aci_queue.c, 41 :: 		for(loop=0; loop<ACI_QUEUE_SIZE; loop++)
; loop start address is: 0 (R0)
0x0E2A	0x2000    MOVS	R0, #0
; loop end address is: 0 (R0)
L_aci_queue_init2:
; loop start address is: 0 (R0)
; aci_q start address is: 12 (R3)
; aci_q end address is: 12 (R3)
0x0E2C	0x2804    CMP	R0, #4
0x0E2E	0xD20F    BCS	L_aci_queue_init3
; aci_q end address is: 12 (R3)
;aci_queue.c, 43 :: 		aci_q->aci_data[loop].buffer[0] = 0x00;
; aci_q start address is: 12 (R3)
0x0E30	0x2121    MOVS	R1, #33
0x0E32	0x4341    MULS	R1, R0, R1
0x0E34	0x1859    ADDS	R1, R3, R1
0x0E36	0x1C4A    ADDS	R2, R1, #1
0x0E38	0x2100    MOVS	R1, #0
0x0E3A	0x7011    STRB	R1, [R2, #0]
;aci_queue.c, 44 :: 		aci_q->aci_data[loop].buffer[1] = 0x00;
0x0E3C	0x2121    MOVS	R1, #33
0x0E3E	0x4341    MULS	R1, R0, R1
0x0E40	0x1859    ADDS	R1, R3, R1
0x0E42	0x1C49    ADDS	R1, R1, #1
0x0E44	0x1C4A    ADDS	R2, R1, #1
0x0E46	0x2100    MOVS	R1, #0
0x0E48	0x7011    STRB	R1, [R2, #0]
;aci_queue.c, 41 :: 		for(loop=0; loop<ACI_QUEUE_SIZE; loop++)
0x0E4A	0x1C40    ADDS	R0, R0, #1
0x0E4C	0xB2C0    UXTB	R0, R0
;aci_queue.c, 45 :: 		}
; aci_q end address is: 12 (R3)
; loop end address is: 0 (R0)
0x0E4E	0xE7ED    B	L_aci_queue_init2
L_aci_queue_init3:
;aci_queue.c, 46 :: 		}
L_end_aci_queue_init:
0x0E50	0xF8DDE000  LDR	LR, [SP, #0]
0x0E54	0xB003    ADD	SP, SP, #12
0x0E56	0x4770    BX	LR
0x0E58	0x3AB60000  	?lstr_1_aci_queue+0
; end of _aci_queue_init
___ble_assert:
;uart_aci.c, 63 :: 		void __ble_assert(const char *file, uint16_t line)
; line start address is: 4 (R1)
; file start address is: 0 (R0)
0x079C	0xB081    SUB	SP, SP, #4
0x079E	0xF8CDE000  STR	LR, [SP, #0]
0x07A2	0x4604    MOV	R4, R0
0x07A4	0xB28D    UXTH	R5, R1
; line end address is: 4 (R1)
; file end address is: 0 (R0)
; file start address is: 16 (R4)
; line start address is: 20 (R5)
;uart_aci.c, 65 :: 		PRINT("BLE UART ERROR");
0x07A6	0xF64332A2  MOVW	R2, #lo_addr(?lstr_1_uart_aci+0)
0x07AA	0xB290    UXTH	R0, R2
0x07AC	0xF002F9F6  BL	_UART1_Write+0
;uart_aci.c, 66 :: 		PRINT(file);
0x07B0	0xB2A0    UXTH	R0, R4
; file end address is: 16 (R4)
0x07B2	0xF002F9F3  BL	_UART1_Write+0
;uart_aci.c, 67 :: 		PRINT(": ");
0x07B6	0xF64332D6  MOVW	R2, #lo_addr(?lstr_2_uart_aci+0)
0x07BA	0xB290    UXTH	R0, R2
0x07BC	0xF002F9EE  BL	_UART1_Write+0
;uart_aci.c, 68 :: 		PRINT(line);
0x07C0	0xB2A8    UXTH	R0, R5
; line end address is: 20 (R5)
0x07C2	0xF002F9EB  BL	_UART1_Write+0
;uart_aci.c, 69 :: 		PRINT("\n");
0x07C6	0xF24012AA  MOVW	R2, #lo_addr(?lstr_3_uart_aci+0)
0x07CA	0xB290    UXTH	R0, R2
0x07CC	0xF002F9E6  BL	_UART1_Write+0
;uart_aci.c, 70 :: 		while(1);
L___ble_assert0:
0x07D0	0xE7FE    B	L___ble_assert0
;uart_aci.c, 71 :: 		}
L_end___ble_assert:
0x07D2	0xF8DDE000  LDR	LR, [SP, #0]
0x07D6	0xB001    ADD	SP, SP, #4
0x07D8	0x4770    BX	LR
; end of ___ble_assert
_hal_aci_tl_pin_reset:
;hal_aci_tl.c, 268 :: 		void hal_aci_tl_pin_reset(void)
0x0C80	0xB081    SUB	SP, SP, #4
0x0C82	0xF8CDE000  STR	LR, [SP, #0]
;hal_aci_tl.c, 270 :: 		if (UNUSED != a_pins_local_ptr->reset_pin)
0x0C86	0x4822    LDR	R0, [PC, #136]
0x0C88	0x6800    LDR	R0, [R0, #0]
0x0C8A	0x1DC0    ADDS	R0, R0, #7
0x0C8C	0x7800    LDRB	R0, [R0, #0]
0x0C8E	0xF1B00FFF  CMP	R0, #255
0x0C92	0xD038    BEQ	L_hal_aci_tl_pin_reset28
;hal_aci_tl.c, 275 :: 		if ((REDBEARLAB_SHIELD_V1_1     == a_pins_local_ptr->board_name) ||
0x0C94	0x481E    LDR	R0, [PC, #120]
0x0C96	0x6800    LDR	R0, [R0, #0]
0x0C98	0x7800    LDRB	R0, [R0, #0]
;hal_aci_tl.c, 276 :: 		(REDBEARLAB_SHIELD_V2012_07 == a_pins_local_ptr->board_name))
0x0C9A	0x2801    CMP	R0, #1
0x0C9C	0xD005    BEQ	L__hal_aci_tl_pin_reset63
0x0C9E	0x481C    LDR	R0, [PC, #112]
0x0CA0	0x6800    LDR	R0, [R0, #0]
0x0CA2	0x7800    LDRB	R0, [R0, #0]
0x0CA4	0x2801    CMP	R0, #1
0x0CA6	0xD000    BEQ	L__hal_aci_tl_pin_reset62
0x0CA8	0xE018    B	L_hal_aci_tl_pin_reset31
L__hal_aci_tl_pin_reset63:
L__hal_aci_tl_pin_reset62:
;hal_aci_tl.c, 280 :: 		digitalWrite(a_pins_local_ptr->reset_pin, 1);
0x0CAA	0x4819    LDR	R0, [PC, #100]
0x0CAC	0x6800    LDR	R0, [R0, #0]
0x0CAE	0x1DC0    ADDS	R0, R0, #7
0x0CB0	0x7800    LDRB	R0, [R0, #0]
0x0CB2	0x2101    MOVS	R1, #1
0x0CB4	0xF7FFFD54  BL	_digitalWrite+0
;hal_aci_tl.c, 281 :: 		Delay_ms(100);
0x0CB8	0xF2435729  MOVW	R7, #13609
0x0CBC	0xF2C00747  MOVT	R7, #71
L_hal_aci_tl_pin_reset32:
0x0CC0	0x1E7F    SUBS	R7, R7, #1
0x0CC2	0xD1FD    BNE	L_hal_aci_tl_pin_reset32
0x0CC4	0xBF00    NOP
0x0CC6	0xBF00    NOP
0x0CC8	0xBF00    NOP
0x0CCA	0xBF00    NOP
;hal_aci_tl.c, 282 :: 		digitalWrite(a_pins_local_ptr->reset_pin, 0);
0x0CCC	0x4810    LDR	R0, [PC, #64]
0x0CCE	0x6800    LDR	R0, [R0, #0]
0x0CD0	0x1DC0    ADDS	R0, R0, #7
0x0CD2	0x7800    LDRB	R0, [R0, #0]
0x0CD4	0x2100    MOVS	R1, #0
0x0CD6	0xF7FFFD43  BL	_digitalWrite+0
;hal_aci_tl.c, 283 :: 		}
0x0CDA	0xE014    B	L_hal_aci_tl_pin_reset34
L_hal_aci_tl_pin_reset31:
;hal_aci_tl.c, 286 :: 		digitalWrite(a_pins_local_ptr->reset_pin, 1);
0x0CDC	0x480C    LDR	R0, [PC, #48]
0x0CDE	0x6800    LDR	R0, [R0, #0]
0x0CE0	0x1DC0    ADDS	R0, R0, #7
0x0CE2	0x7800    LDRB	R0, [R0, #0]
0x0CE4	0x2101    MOVS	R1, #1
0x0CE6	0xF7FFFD3B  BL	_digitalWrite+0
;hal_aci_tl.c, 287 :: 		digitalWrite(a_pins_local_ptr->reset_pin, 0);
0x0CEA	0x4809    LDR	R0, [PC, #36]
0x0CEC	0x6800    LDR	R0, [R0, #0]
0x0CEE	0x1DC0    ADDS	R0, R0, #7
0x0CF0	0x7800    LDRB	R0, [R0, #0]
0x0CF2	0x2100    MOVS	R1, #0
0x0CF4	0xF7FFFD34  BL	_digitalWrite+0
;hal_aci_tl.c, 288 :: 		digitalWrite(a_pins_local_ptr->reset_pin, 1);
0x0CF8	0x4805    LDR	R0, [PC, #20]
0x0CFA	0x6800    LDR	R0, [R0, #0]
0x0CFC	0x1DC0    ADDS	R0, R0, #7
0x0CFE	0x7800    LDRB	R0, [R0, #0]
0x0D00	0x2101    MOVS	R1, #1
0x0D02	0xF7FFFD2D  BL	_digitalWrite+0
;hal_aci_tl.c, 289 :: 		}
L_hal_aci_tl_pin_reset34:
;hal_aci_tl.c, 290 :: 		}
L_hal_aci_tl_pin_reset28:
;hal_aci_tl.c, 291 :: 		}
L_end_hal_aci_tl_pin_reset:
0x0D06	0xF8DDE000  LDR	LR, [SP, #0]
0x0D0A	0xB001    ADD	SP, SP, #4
0x0D0C	0x4770    BX	LR
0x0D0E	0xBF00    NOP
0x0D10	0x036C2000  	hal_aci_tl_a_pins_local_ptr+0
; end of _hal_aci_tl_pin_reset
_digitalWrite:
;blep_hal.c, 112 :: 		void digitalWrite (uint8_t pin_num, uint8_t level)
; level start address is: 4 (R1)
; pin_num start address is: 0 (R0)
; level end address is: 4 (R1)
; pin_num end address is: 0 (R0)
; pin_num start address is: 0 (R0)
; level start address is: 4 (R1)
;blep_hal.c, 114 :: 		switch ( pin_num)
0x0760	0xE00B    B	L_digitalWrite0
; pin_num end address is: 0 (R0)
;blep_hal.c, 116 :: 		case REQN_PIN:
L_digitalWrite2:
;blep_hal.c, 117 :: 		CS = level;
0x0762	0x4A0A    LDR	R2, [PC, #40]
0x0764	0x6011    STR	R1, [R2, #0]
; level end address is: 4 (R1)
;blep_hal.c, 118 :: 		break;
0x0766	0xE010    B	L_digitalWrite1
;blep_hal.c, 119 :: 		case RDYN_PIN:
L_digitalWrite3:
;blep_hal.c, 120 :: 		RDYN = level;
; level start address is: 4 (R1)
0x0768	0x4A09    LDR	R2, [PC, #36]
0x076A	0x6011    STR	R1, [R2, #0]
; level end address is: 4 (R1)
;blep_hal.c, 121 :: 		break;
0x076C	0xE00D    B	L_digitalWrite1
;blep_hal.c, 122 :: 		case RESET_PIN:
L_digitalWrite4:
;blep_hal.c, 123 :: 		RST = level;
; level start address is: 4 (R1)
0x076E	0x4A09    LDR	R2, [PC, #36]
0x0770	0x6011    STR	R1, [R2, #0]
; level end address is: 4 (R1)
;blep_hal.c, 124 :: 		break;
0x0772	0xE00A    B	L_digitalWrite1
;blep_hal.c, 125 :: 		case ACTIVE_PIN:
L_digitalWrite5:
;blep_hal.c, 126 :: 		ACT = level;
; level start address is: 4 (R1)
0x0774	0x4A08    LDR	R2, [PC, #32]
0x0776	0x6011    STR	R1, [R2, #0]
; level end address is: 4 (R1)
;blep_hal.c, 127 :: 		break;
0x0778	0xE007    B	L_digitalWrite1
;blep_hal.c, 128 :: 		}
L_digitalWrite0:
; level start address is: 4 (R1)
; pin_num start address is: 0 (R0)
0x077A	0x2800    CMP	R0, #0
0x077C	0xD0F1    BEQ	L_digitalWrite2
0x077E	0x2801    CMP	R0, #1
0x0780	0xD0F2    BEQ	L_digitalWrite3
0x0782	0x2805    CMP	R0, #5
0x0784	0xD0F3    BEQ	L_digitalWrite4
0x0786	0x2806    CMP	R0, #6
0x0788	0xD0F4    BEQ	L_digitalWrite5
; pin_num end address is: 0 (R0)
; level end address is: 4 (R1)
L_digitalWrite1:
;blep_hal.c, 129 :: 		}
L_end_digitalWrite:
0x078A	0x4770    BX	LR
0x078C	0x82B44241  	CS+0
0x0790	0x82284241  	RDYN+0
0x0794	0x02884241  	RST+0
0x0798	0x02104240  	ACT+0
; end of _digitalWrite
_lib_aci_board_init:
;lib_aci.c, 103 :: 		void lib_aci_board_init(aci_state_t *aci_stat)
; aci_stat start address is: 0 (R0)
0x19D8	0xB084    SUB	SP, SP, #16
0x19DA	0xF8CDE000  STR	LR, [SP, #0]
; aci_stat end address is: 0 (R0)
; aci_stat start address is: 0 (R0)
;lib_aci.c, 105 :: 		hal_aci_evt_t *aci_data = NULL;
;lib_aci.c, 106 :: 		aci_data = (hal_aci_evt_t *)&msg_to_send;
; aci_data start address is: 8 (R2)
0x19DE	0x4A3D    LDR	R2, [PC, #244]
;lib_aci.c, 108 :: 		if (REDBEARLAB_SHIELD_V1_1 == aci_stat->aci_pins.board_name)
0x19E0	0x7801    LDRB	R1, [R0, #0]
0x19E2	0x2901    CMP	R1, #1
0x19E4	0xF0408071  BNE	L_lib_aci_board_init2
;lib_aci.c, 114 :: 		Delay_ms(100);
0x19E8	0xF2435729  MOVW	R7, #13609
0x19EC	0xF2C00747  MOVT	R7, #71
L_lib_aci_board_init3:
0x19F0	0x1E7F    SUBS	R7, R7, #1
0x19F2	0xD1FD    BNE	L_lib_aci_board_init3
0x19F4	0xBF00    NOP
0x19F6	0xBF00    NOP
0x19F8	0xBF00    NOP
0x19FA	0xBF00    NOP
;lib_aci.c, 119 :: 		lib_aci_radio_reset();
0x19FC	0x9201    STR	R2, [SP, #4]
; aci_stat end address is: 0 (R0)
; aci_data end address is: 8 (R2)
0x19FE	0x9002    STR	R0, [SP, #8]
0x1A00	0xF7FFF9B4  BL	_lib_aci_radio_reset+0
0x1A04	0x9802    LDR	R0, [SP, #8]
0x1A06	0x9A01    LDR	R2, [SP, #4]
0x1A08	0x4603    MOV	R3, R0
;lib_aci.c, 121 :: 		while (1)
L_lib_aci_board_init5:
;lib_aci.c, 128 :: 		if (true == lib_aci_event_get(aci_stat, aci_data))
; aci_data start address is: 8 (R2)
; aci_stat start address is: 12 (R3)
0x1A0A	0x9301    STR	R3, [SP, #4]
0x1A0C	0x9202    STR	R2, [SP, #8]
0x1A0E	0x4611    MOV	R1, R2
0x1A10	0x4618    MOV	R0, R3
0x1A12	0xF7FEFF93  BL	_lib_aci_event_get+0
0x1A16	0x9A02    LDR	R2, [SP, #8]
0x1A18	0x9B01    LDR	R3, [SP, #4]
0x1A1A	0x2801    CMP	R0, #1
0x1A1C	0xF0408054  BNE	L_lib_aci_board_init7
;lib_aci.c, 131 :: 		aci_evt = &(aci_data->evt);
0x1A20	0x1C51    ADDS	R1, R2, #1
0x1A22	0x9103    STR	R1, [SP, #12]
;lib_aci.c, 133 :: 		if (ACI_EVT_CMD_RSP == aci_evt->evt_opcode)
0x1A24	0x1C49    ADDS	R1, R1, #1
0x1A26	0x7809    LDRB	R1, [R1, #0]
0x1A28	0x2984    CMP	R1, #132
0x1A2A	0xF040804D  BNE	L_lib_aci_board_init8
; aci_data end address is: 8 (R2)
; aci_stat end address is: 12 (R3)
;lib_aci.c, 135 :: 		if (ACI_STATUS_ERROR_DEVICE_STATE_INVALID == aci_evt->params.cmd_rsp.cmd_status) //in SETUP
0x1A2E	0x9903    LDR	R1, [SP, #12]
0x1A30	0x1C89    ADDS	R1, R1, #2
0x1A32	0x1C49    ADDS	R1, R1, #1
0x1A34	0x7809    LDRB	R1, [R1, #0]
0x1A36	0x2983    CMP	R1, #131
0x1A38	0xD113    BNE	L_lib_aci_board_init9
;lib_aci.c, 138 :: 		msg_to_send.buffer[0] = 4;    //Length
0x1A3A	0x2204    MOVS	R2, #4
0x1A3C	0x4926    LDR	R1, [PC, #152]
0x1A3E	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 139 :: 		msg_to_send.buffer[1] = 0x81; //Device Started Event
0x1A40	0x2281    MOVS	R2, #129
0x1A42	0x4926    LDR	R1, [PC, #152]
0x1A44	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 140 :: 		msg_to_send.buffer[2] = 0x02; //Setup
0x1A46	0x2202    MOVS	R2, #2
0x1A48	0x4925    LDR	R1, [PC, #148]
0x1A4A	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 141 :: 		msg_to_send.buffer[3] = 0;    //Hardware Error -> None
0x1A4C	0x2200    MOVS	R2, #0
0x1A4E	0x4925    LDR	R1, [PC, #148]
0x1A50	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 142 :: 		msg_to_send.buffer[4] = 2;    //Data Credit Available
0x1A52	0x2202    MOVS	R2, #2
0x1A54	0x4924    LDR	R1, [PC, #144]
0x1A56	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 143 :: 		aci_queue_enqueue(&aci_rx_q, &msg_to_send);
0x1A58	0x491E    LDR	R1, [PC, #120]
0x1A5A	0x4824    LDR	R0, [PC, #144]
0x1A5C	0xF7FEFD56  BL	_aci_queue_enqueue+0
;lib_aci.c, 144 :: 		}
0x1A60	0xE031    B	L_lib_aci_board_init10
L_lib_aci_board_init9:
;lib_aci.c, 145 :: 		else if (ACI_STATUS_SUCCESS == aci_evt->params.cmd_rsp.cmd_status) //We are now in STANDBY
0x1A62	0x9903    LDR	R1, [SP, #12]
0x1A64	0x1C89    ADDS	R1, R1, #2
0x1A66	0x1C49    ADDS	R1, R1, #1
0x1A68	0x7809    LDRB	R1, [R1, #0]
0x1A6A	0xB999    CBNZ	R1, L_lib_aci_board_init11
;lib_aci.c, 148 :: 		msg_to_send.buffer[0] = 4;    //Length
0x1A6C	0x2204    MOVS	R2, #4
0x1A6E	0x491A    LDR	R1, [PC, #104]
0x1A70	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 149 :: 		msg_to_send.buffer[1] = 0x81; //Device Started Event
0x1A72	0x2281    MOVS	R2, #129
0x1A74	0x4919    LDR	R1, [PC, #100]
0x1A76	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 150 :: 		msg_to_send.buffer[2] = 0x03; //Standby
0x1A78	0x2203    MOVS	R2, #3
0x1A7A	0x4919    LDR	R1, [PC, #100]
0x1A7C	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 151 :: 		msg_to_send.buffer[3] = 0;    //Hardware Error -> None
0x1A7E	0x2200    MOVS	R2, #0
0x1A80	0x4918    LDR	R1, [PC, #96]
0x1A82	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 152 :: 		msg_to_send.buffer[4] = 2;    //Data Credit Available
0x1A84	0x2202    MOVS	R2, #2
0x1A86	0x4918    LDR	R1, [PC, #96]
0x1A88	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 153 :: 		aci_queue_enqueue(&aci_rx_q, &msg_to_send);
0x1A8A	0x4912    LDR	R1, [PC, #72]
0x1A8C	0x4817    LDR	R0, [PC, #92]
0x1A8E	0xF7FEFD3D  BL	_aci_queue_enqueue+0
;lib_aci.c, 154 :: 		}
0x1A92	0xE018    B	L_lib_aci_board_init12
L_lib_aci_board_init11:
;lib_aci.c, 155 :: 		else if (ACI_STATUS_ERROR_CMD_UNKNOWN == aci_evt->params.cmd_rsp.cmd_status) //We are now in TEST
0x1A94	0x9903    LDR	R1, [SP, #12]
0x1A96	0x1C89    ADDS	R1, R1, #2
0x1A98	0x1C49    ADDS	R1, R1, #1
0x1A9A	0x7809    LDRB	R1, [R1, #0]
0x1A9C	0x2982    CMP	R1, #130
0x1A9E	0xD112    BNE	L_lib_aci_board_init13
;lib_aci.c, 158 :: 		msg_to_send.buffer[0] = 4;    //Length
0x1AA0	0x2204    MOVS	R2, #4
0x1AA2	0x490D    LDR	R1, [PC, #52]
0x1AA4	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 159 :: 		msg_to_send.buffer[1] = 0x81; //Device Started Event
0x1AA6	0x2281    MOVS	R2, #129
0x1AA8	0x490C    LDR	R1, [PC, #48]
0x1AAA	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 160 :: 		msg_to_send.buffer[2] = 0x01; //Test
0x1AAC	0x2201    MOVS	R2, #1
0x1AAE	0x490C    LDR	R1, [PC, #48]
0x1AB0	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 161 :: 		msg_to_send.buffer[3] = 0;    //Hardware Error -> None
0x1AB2	0x2200    MOVS	R2, #0
0x1AB4	0x490B    LDR	R1, [PC, #44]
0x1AB6	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 162 :: 		msg_to_send.buffer[4] = 0;    //Data Credit Available
0x1AB8	0x2200    MOVS	R2, #0
0x1ABA	0x490B    LDR	R1, [PC, #44]
0x1ABC	0x700A    STRB	R2, [R1, #0]
;lib_aci.c, 163 :: 		aci_queue_enqueue(&aci_rx_q, &msg_to_send);
0x1ABE	0x4905    LDR	R1, [PC, #20]
0x1AC0	0x480A    LDR	R0, [PC, #40]
0x1AC2	0xF7FEFD23  BL	_aci_queue_enqueue+0
;lib_aci.c, 164 :: 		}
L_lib_aci_board_init13:
L_lib_aci_board_init12:
L_lib_aci_board_init10:
;lib_aci.c, 167 :: 		break;
0x1AC6	0xE000    B	L_lib_aci_board_init6
;lib_aci.c, 168 :: 		}
L_lib_aci_board_init8:
;lib_aci.c, 174 :: 		}
; aci_stat start address is: 12 (R3)
; aci_data start address is: 8 (R2)
L_lib_aci_board_init7:
;lib_aci.c, 175 :: 		}
; aci_data end address is: 8 (R2)
; aci_stat end address is: 12 (R3)
0x1AC8	0xE79F    B	L_lib_aci_board_init5
L_lib_aci_board_init6:
;lib_aci.c, 176 :: 		}
L_lib_aci_board_init2:
;lib_aci.c, 177 :: 		}
L_end_lib_aci_board_init:
0x1ACA	0xF8DDE000  LDR	LR, [SP, #0]
0x1ACE	0xB004    ADD	SP, SP, #16
0x1AD0	0x4770    BX	LR
0x1AD2	0xBF00    NOP
0x1AD4	0x02E12000  	_msg_to_send+0
0x1AD8	0x02E22000  	_msg_to_send+1
0x1ADC	0x02E32000  	_msg_to_send+2
0x1AE0	0x02E42000  	_msg_to_send+3
0x1AE4	0x02E52000  	_msg_to_send+4
0x1AE8	0x02E62000  	_msg_to_send+5
0x1AEC	0x03702000  	_aci_rx_q+0
; end of _lib_aci_board_init
_lib_aci_radio_reset:
;lib_aci.c, 277 :: 		bool lib_aci_radio_reset()
0x0D6C	0xB081    SUB	SP, SP, #4
0x0D6E	0xF8CDE000  STR	LR, [SP, #0]
;lib_aci.c, 279 :: 		acil_encode_baseband_reset(&(msg_to_send.buffer[0]));
0x0D72	0x4805    LDR	R0, [PC, #20]
0x0D74	0xF7FFFD32  BL	_acil_encode_baseband_reset+0
;lib_aci.c, 280 :: 		return hal_aci_tl_send(&msg_to_send);
0x0D78	0x4804    LDR	R0, [PC, #16]
0x0D7A	0xF7FFFD35  BL	_hal_aci_tl_send+0
;lib_aci.c, 281 :: 		}
L_end_lib_aci_radio_reset:
0x0D7E	0xF8DDE000  LDR	LR, [SP, #0]
0x0D82	0xB001    ADD	SP, SP, #4
0x0D84	0x4770    BX	LR
0x0D86	0xBF00    NOP
0x0D88	0x02E22000  	_msg_to_send+1
0x0D8C	0x02E12000  	_msg_to_send+0
; end of _lib_aci_radio_reset
_acil_encode_baseband_reset:
;acilib.c, 99 :: 		void acil_encode_baseband_reset(uint8_t *buffer)
; buffer start address is: 0 (R0)
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;acilib.c, 101 :: 		*(buffer + OFFSET_ACI_CMD_T_LEN) = MSG_BASEBAND_RESET_LEN;
0x07DC	0x2101    MOVS	R1, #1
0x07DE	0x7001    STRB	R1, [R0, #0]
;acilib.c, 102 :: 		*(buffer + OFFSET_ACI_CMD_T_CMD_OPCODE) = ACI_CMD_RADIO_RESET;
0x07E0	0x1C42    ADDS	R2, R0, #1
; buffer end address is: 0 (R0)
0x07E2	0x210E    MOVS	R1, #14
0x07E4	0x7011    STRB	R1, [R2, #0]
;acilib.c, 103 :: 		}
L_end_acil_encode_baseband_reset:
0x07E6	0x4770    BX	LR
; end of _acil_encode_baseband_reset
_hal_aci_tl_send:
;hal_aci_tl.c, 403 :: 		bool hal_aci_tl_send(hal_aci_data_t *p_aci_cmd)
0x07E8	0xB083    SUB	SP, SP, #12
0x07EA	0xF8CDE000  STR	LR, [SP, #0]
0x07EE	0x9002    STR	R0, [SP, #8]
;hal_aci_tl.c, 405 :: 		uint8_t length = p_aci_cmd->buffer[0];
0x07F0	0x9902    LDR	R1, [SP, #8]
0x07F2	0x1C49    ADDS	R1, R1, #1
0x07F4	0x7809    LDRB	R1, [R1, #0]
; length start address is: 0 (R0)
0x07F6	0xB2C8    UXTB	R0, R1
;hal_aci_tl.c, 406 :: 		bool ret_val = false;
;hal_aci_tl.c, 408 :: 		if (length > HAL_ACI_MAX_LENGTH)
0x07F8	0x281F    CMP	R0, #31
0x07FA	0xD901    BLS	L_hal_aci_tl_send51
; length end address is: 0 (R0)
;hal_aci_tl.c, 410 :: 		return false;
0x07FC	0x2000    MOVS	R0, #0
0x07FE	0xE014    B	L_end_hal_aci_tl_send
;hal_aci_tl.c, 411 :: 		}
L_hal_aci_tl_send51:
;hal_aci_tl.c, 413 :: 		ret_val = aci_queue_enqueue(&aci_tx_q, p_aci_cmd);
0x0800	0x9902    LDR	R1, [SP, #8]
0x0802	0x480C    LDR	R0, [PC, #48]
0x0804	0xF7FFFE82  BL	_aci_queue_enqueue+0
0x0808	0xF88D0004  STRB	R0, [SP, #4]
;hal_aci_tl.c, 414 :: 		if (ret_val)
0x080C	0xB158    CBZ	R0, L_hal_aci_tl_send52
;hal_aci_tl.c, 416 :: 		if(!aci_queue_is_full(&aci_rx_q))
0x080E	0x480A    LDR	R0, [PC, #40]
0x0810	0xF7FFFD34  BL	_aci_queue_is_full+0
0x0814	0xB908    CBNZ	R0, L_hal_aci_tl_send53
;hal_aci_tl.c, 419 :: 		m_aci_reqn_enable();
0x0816	0xF7FFFE69  BL	hal_aci_tl_m_aci_reqn_enable+0
;hal_aci_tl.c, 420 :: 		}
L_hal_aci_tl_send53:
;hal_aci_tl.c, 422 :: 		if (aci_debug_print)
0x081A	0x4908    LDR	R1, [PC, #32]
0x081C	0x7809    LDRB	R1, [R1, #0]
0x081E	0xB111    CBZ	R1, L_hal_aci_tl_send54
;hal_aci_tl.c, 425 :: 		m_aci_data_print(p_aci_cmd);
0x0820	0x9802    LDR	R0, [SP, #8]
0x0822	0xF7FFFF0F  BL	_m_aci_data_print+0
;hal_aci_tl.c, 426 :: 		}
L_hal_aci_tl_send54:
;hal_aci_tl.c, 428 :: 		}
L_hal_aci_tl_send52:
;hal_aci_tl.c, 430 :: 		return ret_val;
0x0826	0xF89D0004  LDRB	R0, [SP, #4]
;hal_aci_tl.c, 431 :: 		}
L_end_hal_aci_tl_send:
0x082A	0xF8DDE000  LDR	LR, [SP, #0]
0x082E	0xB003    ADD	SP, SP, #12
0x0830	0x4770    BX	LR
0x0832	0xBF00    NOP
0x0834	0x03F62000  	_aci_tx_q+0
0x0838	0x03702000  	_aci_rx_q+0
0x083C	0x00932000  	hal_aci_tl_aci_debug_print+0
; end of _hal_aci_tl_send
_aci_queue_enqueue:
;aci_queue.c, 80 :: 		bool aci_queue_enqueue(aci_queue_t *aci_q, hal_aci_data_t *p_data)
0x050C	0xB085    SUB	SP, SP, #20
0x050E	0xF8CDE000  STR	LR, [SP, #0]
0x0512	0x9003    STR	R0, [SP, #12]
0x0514	0x9104    STR	R1, [SP, #16]
;aci_queue.c, 82 :: 		uint8_t length = p_data->buffer[0];
0x0516	0x9A04    LDR	R2, [SP, #16]
0x0518	0x1C52    ADDS	R2, R2, #1
0x051A	0x7812    LDRB	R2, [R2, #0]
0x051C	0xF88D2009  STRB	R2, [SP, #9]
;aci_queue.c, 84 :: 		ble_assert(NULL != aci_q);
0x0520	0x9A03    LDR	R2, [SP, #12]
0x0522	0xB102    CBZ	R2, L_aci_queue_enqueue15
0x0524	0xE004    B	L_aci_queue_enqueue16
L_aci_queue_enqueue15:
0x0526	0x4A1F    LDR	R2, [PC, #124]
0x0528	0x2154    MOVS	R1, #84
0x052A	0x4610    MOV	R0, R2
0x052C	0xF000F936  BL	___ble_assert+0
L_aci_queue_enqueue16:
;aci_queue.c, 85 :: 		ble_assert(NULL != p_data);
0x0530	0x9A04    LDR	R2, [SP, #16]
0x0532	0xB102    CBZ	R2, L_aci_queue_enqueue17
0x0534	0xE004    B	L_aci_queue_enqueue18
L_aci_queue_enqueue17:
0x0536	0x4A1C    LDR	R2, [PC, #112]
0x0538	0x2155    MOVS	R1, #85
0x053A	0x4610    MOV	R0, R2
0x053C	0xF000F92E  BL	___ble_assert+0
L_aci_queue_enqueue18:
;aci_queue.c, 87 :: 		if (aci_queue_is_full(aci_q))
0x0540	0x9803    LDR	R0, [SP, #12]
0x0542	0xF7FFFE9B  BL	_aci_queue_is_full+0
0x0546	0xB108    CBZ	R0, L_aci_queue_enqueue19
;aci_queue.c, 89 :: 		return false;
0x0548	0x2000    MOVS	R0, #0
0x054A	0xE027    B	L_end_aci_queue_enqueue
;aci_queue.c, 90 :: 		}
L_aci_queue_enqueue19:
;aci_queue.c, 92 :: 		aci_q->aci_data[aci_q->tail % ACI_QUEUE_SIZE].status_byte = 0;
0x054C	0x9A03    LDR	R2, [SP, #12]
0x054E	0x3285    ADDS	R2, #133
0x0550	0x7812    LDRB	R2, [R2, #0]
0x0552	0xF0020303  AND	R3, R2, #3
0x0556	0xB2DB    UXTB	R3, R3
0x0558	0x2221    MOVS	R2, #33
0x055A	0x4353    MULS	R3, R2, R3
0x055C	0x9A03    LDR	R2, [SP, #12]
0x055E	0x18D3    ADDS	R3, R2, R3
0x0560	0x2200    MOVS	R2, #0
0x0562	0x701A    STRB	R2, [R3, #0]
;aci_queue.c, 93 :: 		memcpy((uint8_t *)&(aci_q->aci_data[aci_q->tail % ACI_QUEUE_SIZE].buffer[0]), (uint8_t *)&p_data->buffer[0], length + 1);
0x0564	0xF89D2009  LDRB	R2, [SP, #9]
0x0568	0x1C55    ADDS	R5, R2, #1
0x056A	0x9A04    LDR	R2, [SP, #16]
0x056C	0x1C54    ADDS	R4, R2, #1
0x056E	0x9A03    LDR	R2, [SP, #12]
0x0570	0x3285    ADDS	R2, #133
0x0572	0x7812    LDRB	R2, [R2, #0]
0x0574	0xF0020303  AND	R3, R2, #3
0x0578	0xB2DB    UXTB	R3, R3
0x057A	0x2221    MOVS	R2, #33
0x057C	0x4353    MULS	R3, R2, R3
0x057E	0x9A03    LDR	R2, [SP, #12]
0x0580	0x18D2    ADDS	R2, R2, R3
0x0582	0x1C52    ADDS	R2, R2, #1
0x0584	0x4621    MOV	R1, R4
0x0586	0x4610    MOV	R0, R2
0x0588	0xB22A    SXTH	R2, R5
0x058A	0xF7FFFE65  BL	_memcpy+0
;aci_queue.c, 94 :: 		++aci_q->tail;
0x058E	0x9A03    LDR	R2, [SP, #12]
0x0590	0xF2020385  ADDW	R3, R2, #133
0x0594	0x781A    LDRB	R2, [R3, #0]
0x0596	0x1C52    ADDS	R2, R2, #1
0x0598	0x701A    STRB	R2, [R3, #0]
;aci_queue.c, 96 :: 		return true;
0x059A	0x2001    MOVS	R0, #1
;aci_queue.c, 97 :: 		}
L_end_aci_queue_enqueue:
0x059C	0xF8DDE000  LDR	LR, [SP, #0]
0x05A0	0xB005    ADD	SP, SP, #20
0x05A2	0x4770    BX	LR
0x05A4	0x3A0B0000  	?lstr_6_aci_queue+0
0x05A8	0x39600000  	?lstr_7_aci_queue+0
; end of _aci_queue_enqueue
_aci_queue_is_full:
;aci_queue.c, 142 :: 		bool aci_queue_is_full(aci_queue_t *aci_q)
0x027C	0xB083    SUB	SP, SP, #12
0x027E	0xF8CDE000  STR	LR, [SP, #0]
0x0282	0x9002    STR	R0, [SP, #8]
;aci_queue.c, 146 :: 		ble_assert(NULL != aci_q);
0x0284	0x9902    LDR	R1, [SP, #8]
0x0286	0xB101    CBZ	R1, L_aci_queue_is_full30
0x0288	0xE004    B	L_aci_queue_is_full31
L_aci_queue_is_full30:
0x028A	0x490F    LDR	R1, [PC, #60]
0x028C	0x4608    MOV	R0, R1
0x028E	0x2192    MOVS	R1, #146
0x0290	0xF000FA84  BL	___ble_assert+0
L_aci_queue_is_full31:
;aci_queue.c, 149 :: 		noInterrupts();
0x0294	0xF7FFFFC2  BL	_noInterrupts+0
;aci_queue.c, 151 :: 		state = (aci_q->tail == aci_q->head + ACI_QUEUE_SIZE);
0x0298	0x9902    LDR	R1, [SP, #8]
0x029A	0x3185    ADDS	R1, #133
0x029C	0x780A    LDRB	R2, [R1, #0]
0x029E	0x9902    LDR	R1, [SP, #8]
0x02A0	0x3184    ADDS	R1, #132
0x02A2	0x7809    LDRB	R1, [R1, #0]
0x02A4	0x1D09    ADDS	R1, R1, #4
0x02A6	0xB209    SXTH	R1, R1
0x02A8	0x428A    CMP	R2, R1
0x02AA	0xF2400100  MOVW	R1, #0
0x02AE	0xD100    BNE	L__aci_queue_is_full53
0x02B0	0x2101    MOVS	R1, #1
L__aci_queue_is_full53:
0x02B2	0xF88D1005  STRB	R1, [SP, #5]
;aci_queue.c, 153 :: 		interrupts();
0x02B6	0xF7FFFFB3  BL	_interrupts+0
;aci_queue.c, 156 :: 		return state;
0x02BA	0xF89D0005  LDRB	R0, [SP, #5]
;aci_queue.c, 157 :: 		}
L_end_aci_queue_is_full:
0x02BE	0xF8DDE000  LDR	LR, [SP, #0]
0x02C2	0xB003    ADD	SP, SP, #12
0x02C4	0x4770    BX	LR
0x02C6	0xBF00    NOP
0x02C8	0x3A440000  	?lstr_12_aci_queue+0
; end of _aci_queue_is_full
_noInterrupts:
;mikroc_interrupts.c, 7 :: 		void noInterrupts()
;mikroc_interrupts.c, 8 :: 		{}
L_end_noInterrupts:
0x021C	0x4770    BX	LR
; end of _noInterrupts
_interrupts:
;mikroc_interrupts.c, 9 :: 		void interrupts()
;mikroc_interrupts.c, 10 :: 		{}
L_end_interrupts:
0x0220	0x4770    BX	LR
; end of _interrupts
_memcpy:
;__Lib_CString.c, 44 :: 		
; n start address is: 8 (R2)
; s1 start address is: 4 (R1)
; d1 start address is: 0 (R0)
0x0258	0xB081    SUB	SP, SP, #4
0x025A	0x460B    MOV	R3, R1
0x025C	0x4601    MOV	R1, R0
; n end address is: 8 (R2)
; s1 end address is: 4 (R1)
; d1 end address is: 0 (R0)
; d1 start address is: 4 (R1)
; s1 start address is: 12 (R3)
; n start address is: 8 (R2)
;__Lib_CString.c, 48 :: 		
; ss start address is: 0 (R0)
0x025E	0x4618    MOV	R0, R3
; s1 end address is: 12 (R3)
;__Lib_CString.c, 49 :: 		
; dd start address is: 20 (R5)
0x0260	0x460D    MOV	R5, R1
; d1 end address is: 4 (R1)
; dd end address is: 20 (R5)
; ss end address is: 0 (R0)
;__Lib_CString.c, 50 :: 		
L_memcpy7:
; dd start address is: 20 (R5)
; ss start address is: 0 (R0)
; n start address is: 8 (R2)
; d1 start address is: 4 (R1)
0x0262	0xB214    SXTH	R4, R2
0x0264	0x1E53    SUBS	R3, R2, #1
0x0266	0xB21A    SXTH	R2, R3
; n end address is: 8 (R2)
0x0268	0xB124    CBZ	R4, L_memcpy8
; n end address is: 8 (R2)
;__Lib_CString.c, 51 :: 		
; n start address is: 8 (R2)
0x026A	0x7803    LDRB	R3, [R0, #0]
0x026C	0x702B    STRB	R3, [R5, #0]
0x026E	0x1C6D    ADDS	R5, R5, #1
0x0270	0x1C40    ADDS	R0, R0, #1
; n end address is: 8 (R2)
; dd end address is: 20 (R5)
; ss end address is: 0 (R0)
0x0272	0xE7F6    B	L_memcpy7
L_memcpy8:
;__Lib_CString.c, 53 :: 		
0x0274	0x4608    MOV	R0, R1
; d1 end address is: 4 (R1)
;__Lib_CString.c, 54 :: 		
L_end_memcpy:
0x0276	0xB001    ADD	SP, SP, #4
0x0278	0x4770    BX	LR
; end of _memcpy
hal_aci_tl_m_aci_reqn_enable:
;hal_aci_tl.c, 207 :: 		static inline void m_aci_reqn_enable (void)
0x04EC	0xB081    SUB	SP, SP, #4
0x04EE	0xF8CDE000  STR	LR, [SP, #0]
;hal_aci_tl.c, 209 :: 		digitalWrite(a_pins_local_ptr->reqn_pin, 0);
0x04F2	0x4805    LDR	R0, [PC, #20]
0x04F4	0x6800    LDR	R0, [R0, #0]
0x04F6	0x1C40    ADDS	R0, R0, #1
0x04F8	0x7800    LDRB	R0, [R0, #0]
0x04FA	0x2100    MOVS	R1, #0
0x04FC	0xF000F930  BL	_digitalWrite+0
;hal_aci_tl.c, 210 :: 		}
L_end_m_aci_reqn_enable:
0x0500	0xF8DDE000  LDR	LR, [SP, #0]
0x0504	0xB001    ADD	SP, SP, #4
0x0506	0x4770    BX	LR
0x0508	0x036C2000  	hal_aci_tl_a_pins_local_ptr+0
; end of hal_aci_tl_m_aci_reqn_enable
_m_aci_data_print:
;hal_aci_tl.c, 65 :: 		void m_aci_data_print(hal_aci_data_t *p_data)
;hal_aci_tl.c, 78 :: 		}
L_end_m_aci_data_print:
0x0644	0x4770    BX	LR
; end of _m_aci_data_print
_lib_aci_event_get:
;lib_aci.c, 565 :: 		bool lib_aci_event_get(aci_state_t *aci_stat, hal_aci_evt_t *p_aci_evt_data)
; p_aci_evt_data start address is: 4 (R1)
; aci_stat start address is: 0 (R0)
0x093C	0xB083    SUB	SP, SP, #12
0x093E	0xF8CDE000  STR	LR, [SP, #0]
0x0942	0x4605    MOV	R5, R0
0x0944	0x460B    MOV	R3, R1
; p_aci_evt_data end address is: 4 (R1)
; aci_stat end address is: 0 (R0)
; aci_stat start address is: 20 (R5)
; p_aci_evt_data start address is: 12 (R3)
;lib_aci.c, 567 :: 		bool status = false;
;lib_aci.c, 569 :: 		status = hal_aci_tl_event_get((hal_aci_data_t *)p_aci_evt_data);
0x0946	0x9301    STR	R3, [SP, #4]
0x0948	0x9502    STR	R5, [SP, #8]
0x094A	0x4618    MOV	R0, R3
0x094C	0xF7FFFED0  BL	_hal_aci_tl_event_get+0
0x0950	0x9D02    LDR	R5, [SP, #8]
0x0952	0x9B01    LDR	R3, [SP, #4]
; status start address is: 4 (R1)
0x0954	0xB2C1    UXTB	R1, R0
;lib_aci.c, 575 :: 		if (true == status)
0x0956	0x2801    CMP	R0, #1
0x0958	0xF0408074  BNE	L__lib_aci_event_get65
;lib_aci.c, 579 :: 		aci_evt = &p_aci_evt_data->evt;
0x095C	0x1C5A    ADDS	R2, R3, #1
; p_aci_evt_data end address is: 12 (R3)
; aci_evt start address is: 24 (R6)
0x095E	0x4616    MOV	R6, R2
;lib_aci.c, 581 :: 		switch(aci_evt->evt_opcode)
0x0960	0x1C54    ADDS	R4, R2, #1
0x0962	0xE061    B	L_lib_aci_event_get45
;lib_aci.c, 583 :: 		case ACI_EVT_PIPE_STATUS:
L_lib_aci_event_get47:
;lib_aci.c, 585 :: 		uint8_t i=0;
;lib_aci.c, 587 :: 		for (i=0; i < PIPES_ARRAY_SIZE; i++)
; i start address is: 0 (R0)
0x0964	0x2000    MOVS	R0, #0
; aci_evt end address is: 24 (R6)
; aci_stat end address is: 20 (R5)
; i end address is: 0 (R0)
; status end address is: 4 (R1)
0x0966	0xF88D0004  STRB	R0, [SP, #4]
0x096A	0x4630    MOV	R0, R6
0x096C	0x462E    MOV	R6, R5
0x096E	0xF89D5004  LDRB	R5, [SP, #4]
L_lib_aci_event_get48:
; i start address is: 20 (R5)
; aci_stat start address is: 24 (R6)
; aci_evt start address is: 0 (R0)
; aci_evt start address is: 0 (R0)
; aci_evt end address is: 0 (R0)
; status start address is: 4 (R1)
; aci_stat start address is: 24 (R6)
; aci_stat end address is: 24 (R6)
0x0972	0x2D08    CMP	R5, #8
0x0974	0xD211    BCS	L_lib_aci_event_get49
; aci_evt end address is: 0 (R0)
; aci_stat end address is: 24 (R6)
;lib_aci.c, 589 :: 		aci_stat->pipes_open_bitmap[i]   = aci_evt->params.pipe_status.pipes_open_bitmap[i];
; aci_stat start address is: 24 (R6)
; aci_evt start address is: 0 (R0)
0x0976	0xF2060226  ADDW	R2, R6, #38
0x097A	0x1953    ADDS	R3, R2, R5
0x097C	0x1C82    ADDS	R2, R0, #2
0x097E	0x1952    ADDS	R2, R2, R5
0x0980	0x7812    LDRB	R2, [R2, #0]
0x0982	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 590 :: 		aci_stat->pipes_closed_bitmap[i] = aci_evt->params.pipe_status.pipes_closed_bitmap[i];
0x0984	0xF206022E  ADDW	R2, R6, #46
0x0988	0x1953    ADDS	R3, R2, R5
0x098A	0x1C82    ADDS	R2, R0, #2
0x098C	0x3208    ADDS	R2, #8
0x098E	0x1952    ADDS	R2, R2, R5
0x0990	0x7812    LDRB	R2, [R2, #0]
0x0992	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 587 :: 		for (i=0; i < PIPES_ARRAY_SIZE; i++)
0x0994	0x1C6D    ADDS	R5, R5, #1
0x0996	0xB2ED    UXTB	R5, R5
;lib_aci.c, 591 :: 		}
; aci_evt end address is: 0 (R0)
; aci_stat end address is: 24 (R6)
; i end address is: 20 (R5)
0x0998	0xE7EB    B	L_lib_aci_event_get48
L_lib_aci_event_get49:
;lib_aci.c, 593 :: 		break;
0x099A	0xB2C8    UXTB	R0, R1
0x099C	0xE051    B	L_lib_aci_event_get46
;lib_aci.c, 595 :: 		case ACI_EVT_DISCONNECTED:
L_lib_aci_event_get51:
;lib_aci.c, 597 :: 		uint8_t i=0;
; aci_stat start address is: 20 (R5)
;lib_aci.c, 599 :: 		for (i=0; i < PIPES_ARRAY_SIZE; i++)
; i start address is: 0 (R0)
0x099E	0x2000    MOVS	R0, #0
; aci_stat end address is: 20 (R5)
; i end address is: 0 (R0)
; status end address is: 4 (R1)
L_lib_aci_event_get52:
; i start address is: 0 (R0)
; status start address is: 4 (R1)
; aci_stat start address is: 20 (R5)
0x09A0	0x2808    CMP	R0, #8
0x09A2	0xD20C    BCS	L_lib_aci_event_get53
;lib_aci.c, 601 :: 		aci_stat->pipes_open_bitmap[i] = 0;
0x09A4	0xF2050226  ADDW	R2, R5, #38
0x09A8	0x1813    ADDS	R3, R2, R0
0x09AA	0x2200    MOVS	R2, #0
0x09AC	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 602 :: 		aci_stat->pipes_closed_bitmap[i] = 0;
0x09AE	0xF205022E  ADDW	R2, R5, #46
0x09B2	0x1813    ADDS	R3, R2, R0
0x09B4	0x2200    MOVS	R2, #0
0x09B6	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 599 :: 		for (i=0; i < PIPES_ARRAY_SIZE; i++)
0x09B8	0x1C40    ADDS	R0, R0, #1
0x09BA	0xB2C0    UXTB	R0, R0
;lib_aci.c, 603 :: 		}
; i end address is: 0 (R0)
0x09BC	0xE7F0    B	L_lib_aci_event_get52
L_lib_aci_event_get53:
;lib_aci.c, 604 :: 		aci_stat->confirmation_pending = false;
0x09BE	0xF2050336  ADDW	R3, R5, #54
0x09C2	0x2200    MOVS	R2, #0
0x09C4	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 605 :: 		aci_stat->data_credit_available = aci_stat->data_credit_total;
0x09C6	0xF205031F  ADDW	R3, R5, #31
0x09CA	0xF205021D  ADDW	R2, R5, #29
; aci_stat end address is: 20 (R5)
0x09CE	0x7812    LDRB	R2, [R2, #0]
0x09D0	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 608 :: 		break;
0x09D2	0xB2C8    UXTB	R0, R1
0x09D4	0xE035    B	L_lib_aci_event_get46
;lib_aci.c, 610 :: 		case ACI_EVT_TIMING:
L_lib_aci_event_get55:
;lib_aci.c, 611 :: 		aci_stat->connection_interval = aci_evt->params.timing.conn_rf_interval;
; aci_stat start address is: 20 (R5)
; aci_evt start address is: 24 (R6)
0x09D6	0xF2050320  ADDW	R3, R5, #32
0x09DA	0x1CB2    ADDS	R2, R6, #2
0x09DC	0x8812    LDRH	R2, [R2, #0]
0x09DE	0x801A    STRH	R2, [R3, #0]
;lib_aci.c, 612 :: 		aci_stat->slave_latency       = aci_evt->params.timing.conn_slave_rf_latency;
0x09E0	0xF2050322  ADDW	R3, R5, #34
0x09E4	0x1CB2    ADDS	R2, R6, #2
0x09E6	0x1C92    ADDS	R2, R2, #2
0x09E8	0x8812    LDRH	R2, [R2, #0]
0x09EA	0x801A    STRH	R2, [R3, #0]
;lib_aci.c, 613 :: 		aci_stat->supervision_timeout = aci_evt->params.timing.conn_rf_timeout;
0x09EC	0xF2050324  ADDW	R3, R5, #36
; aci_stat end address is: 20 (R5)
0x09F0	0x1CB2    ADDS	R2, R6, #2
; aci_evt end address is: 24 (R6)
0x09F2	0x1D12    ADDS	R2, R2, #4
0x09F4	0x8812    LDRH	R2, [R2, #0]
0x09F6	0x801A    STRH	R2, [R3, #0]
;lib_aci.c, 614 :: 		break;
0x09F8	0xB2C8    UXTB	R0, R1
0x09FA	0xE022    B	L_lib_aci_event_get46
;lib_aci.c, 616 :: 		case ACI_EVT_CONNECTED:
L_lib_aci_event_get56:
;lib_aci.c, 617 :: 		aci_stat->connection_interval = aci_evt->params.connected.conn_rf_interval;
; aci_stat start address is: 20 (R5)
; aci_evt start address is: 24 (R6)
0x09FC	0xF2050320  ADDW	R3, R5, #32
0x0A00	0x1CB2    ADDS	R2, R6, #2
0x0A02	0x1DD2    ADDS	R2, R2, #7
0x0A04	0x8812    LDRH	R2, [R2, #0]
0x0A06	0x801A    STRH	R2, [R3, #0]
;lib_aci.c, 618 :: 		aci_stat->slave_latency       = aci_evt->params.connected.conn_slave_rf_latency;
0x0A08	0xF2050322  ADDW	R3, R5, #34
0x0A0C	0x1CB2    ADDS	R2, R6, #2
0x0A0E	0x3209    ADDS	R2, #9
0x0A10	0x8812    LDRH	R2, [R2, #0]
0x0A12	0x801A    STRH	R2, [R3, #0]
;lib_aci.c, 619 :: 		aci_stat->supervision_timeout = aci_evt->params.connected.conn_rf_timeout;
0x0A14	0xF2050324  ADDW	R3, R5, #36
; aci_stat end address is: 20 (R5)
0x0A18	0x1CB2    ADDS	R2, R6, #2
; aci_evt end address is: 24 (R6)
0x0A1A	0x320B    ADDS	R2, #11
0x0A1C	0x8812    LDRH	R2, [R2, #0]
0x0A1E	0x801A    STRH	R2, [R3, #0]
;lib_aci.c, 620 :: 		break;
0x0A20	0xB2C8    UXTB	R0, R1
0x0A22	0xE00E    B	L_lib_aci_event_get46
;lib_aci.c, 622 :: 		default:
L_lib_aci_event_get57:
;lib_aci.c, 626 :: 		break;
0x0A24	0xB2C8    UXTB	R0, R1
0x0A26	0xE00C    B	L_lib_aci_event_get46
;lib_aci.c, 630 :: 		}
L_lib_aci_event_get45:
; aci_stat start address is: 20 (R5)
; aci_evt start address is: 24 (R6)
0x0A28	0x7822    LDRB	R2, [R4, #0]
0x0A2A	0x2A88    CMP	R2, #136
0x0A2C	0xD09A    BEQ	L_lib_aci_event_get47
0x0A2E	0x7822    LDRB	R2, [R4, #0]
0x0A30	0x2A86    CMP	R2, #134
0x0A32	0xD0B4    BEQ	L_lib_aci_event_get51
0x0A34	0x7822    LDRB	R2, [R4, #0]
0x0A36	0x2A89    CMP	R2, #137
0x0A38	0xD0CD    BEQ	L_lib_aci_event_get55
0x0A3A	0x7822    LDRB	R2, [R4, #0]
0x0A3C	0x2A85    CMP	R2, #133
0x0A3E	0xD0DD    BEQ	L_lib_aci_event_get56
; aci_evt end address is: 24 (R6)
; aci_stat end address is: 20 (R5)
0x0A40	0xE7F0    B	L_lib_aci_event_get57
; status end address is: 4 (R1)
L_lib_aci_event_get46:
;lib_aci.c, 631 :: 		}
; status start address is: 0 (R0)
; status end address is: 0 (R0)
0x0A42	0xE000    B	L_lib_aci_event_get44
L__lib_aci_event_get65:
;lib_aci.c, 575 :: 		if (true == status)
0x0A44	0xB2C8    UXTB	R0, R1
;lib_aci.c, 631 :: 		}
L_lib_aci_event_get44:
;lib_aci.c, 632 :: 		return status;
; status start address is: 0 (R0)
; status end address is: 0 (R0)
;lib_aci.c, 633 :: 		}
L_end_lib_aci_event_get:
0x0A46	0xF8DDE000  LDR	LR, [SP, #0]
0x0A4A	0xB003    ADD	SP, SP, #12
0x0A4C	0x4770    BX	LR
; end of _lib_aci_event_get
_hal_aci_tl_event_get:
;hal_aci_tl.c, 308 :: 		bool hal_aci_tl_event_get(hal_aci_data_t *p_aci_data)
0x06F0	0xB083    SUB	SP, SP, #12
0x06F2	0xF8CDE000  STR	LR, [SP, #0]
0x06F6	0x9002    STR	R0, [SP, #8]
;hal_aci_tl.c, 312 :: 		if (!a_pins_local_ptr->interface_is_interrupt && !aci_queue_is_full(&aci_rx_q))
0x06F8	0x4916    LDR	R1, [PC, #88]
0x06FA	0x6809    LDR	R1, [R1, #0]
0x06FC	0x310A    ADDS	R1, #10
0x06FE	0x7809    LDRB	R1, [R1, #0]
0x0700	0xB929    CBNZ	R1, L__hal_aci_tl_event_get68
0x0702	0x4815    LDR	R0, [PC, #84]
0x0704	0xF7FFFDBA  BL	_aci_queue_is_full+0
0x0708	0xB908    CBNZ	R0, L__hal_aci_tl_event_get67
L__hal_aci_tl_event_get66:
;hal_aci_tl.c, 314 :: 		m_aci_event_check();
0x070A	0xF7FFFF4F  BL	hal_aci_tl_m_aci_event_check+0
;hal_aci_tl.c, 312 :: 		if (!a_pins_local_ptr->interface_is_interrupt && !aci_queue_is_full(&aci_rx_q))
L__hal_aci_tl_event_get68:
L__hal_aci_tl_event_get67:
;hal_aci_tl.c, 317 :: 		was_full = aci_queue_is_full(&aci_rx_q);
0x070E	0x4812    LDR	R0, [PC, #72]
0x0710	0xF7FFFDB4  BL	_aci_queue_is_full+0
0x0714	0xF88D0004  STRB	R0, [SP, #4]
;hal_aci_tl.c, 319 :: 		if (aci_queue_dequeue(&aci_rx_q, p_aci_data))
0x0718	0x9902    LDR	R1, [SP, #8]
0x071A	0x480F    LDR	R0, [PC, #60]
0x071C	0xF7FFFDD6  BL	_aci_queue_dequeue+0
0x0720	0xB190    CBZ	R0, L_hal_aci_tl_event_get40
;hal_aci_tl.c, 327 :: 		if (was_full && a_pins_local_ptr->interface_is_interrupt)
0x0722	0xF89D1004  LDRB	R1, [SP, #4]
0x0726	0xB119    CBZ	R1, L__hal_aci_tl_event_get70
0x0728	0x490A    LDR	R1, [PC, #40]
0x072A	0x6809    LDR	R1, [R1, #0]
0x072C	0x310A    ADDS	R1, #10
0x072E	0x7809    LDRB	R1, [R1, #0]
L__hal_aci_tl_event_get65:
L__hal_aci_tl_event_get70:
L__hal_aci_tl_event_get69:
;hal_aci_tl.c, 335 :: 		if (!aci_queue_is_full(&aci_rx_q) && !aci_queue_is_empty(&aci_tx_q))
0x0730	0x4809    LDR	R0, [PC, #36]
0x0732	0xF7FFFDA3  BL	_aci_queue_is_full+0
0x0736	0xB928    CBNZ	R0, L__hal_aci_tl_event_get72
0x0738	0x4808    LDR	R0, [PC, #32]
0x073A	0xF7FFFEB1  BL	_aci_queue_is_empty+0
0x073E	0xB908    CBNZ	R0, L__hal_aci_tl_event_get71
L__hal_aci_tl_event_get64:
;hal_aci_tl.c, 337 :: 		m_aci_reqn_enable();
0x0740	0xF7FFFED4  BL	hal_aci_tl_m_aci_reqn_enable+0
;hal_aci_tl.c, 335 :: 		if (!aci_queue_is_full(&aci_rx_q) && !aci_queue_is_empty(&aci_tx_q))
L__hal_aci_tl_event_get72:
L__hal_aci_tl_event_get71:
;hal_aci_tl.c, 340 :: 		return true;
0x0744	0x2001    MOVS	R0, #1
0x0746	0xE000    B	L_end_hal_aci_tl_event_get
;hal_aci_tl.c, 341 :: 		}
L_hal_aci_tl_event_get40:
;hal_aci_tl.c, 343 :: 		return false;
0x0748	0x2000    MOVS	R0, #0
;hal_aci_tl.c, 344 :: 		}
L_end_hal_aci_tl_event_get:
0x074A	0xF8DDE000  LDR	LR, [SP, #0]
0x074E	0xB003    ADD	SP, SP, #12
0x0750	0x4770    BX	LR
0x0752	0xBF00    NOP
0x0754	0x036C2000  	hal_aci_tl_a_pins_local_ptr+0
0x0758	0x03702000  	_aci_rx_q+0
0x075C	0x03F62000  	_aci_tx_q+0
; end of _hal_aci_tl_event_get
hal_aci_tl_m_aci_event_check:
;hal_aci_tl.c, 131 :: 		static void m_aci_event_check(void)
0x05AC	0xB092    SUB	SP, SP, #72
0x05AE	0xF8CDE000  STR	LR, [SP, #0]
;hal_aci_tl.c, 137 :: 		if (aci_queue_is_full(&aci_rx_q))
0x05B2	0x4821    LDR	R0, [PC, #132]
0x05B4	0xF7FFFE62  BL	_aci_queue_is_full+0
0x05B8	0xB100    CBZ	R0, L_hal_aci_tl_m_aci_event_check9
;hal_aci_tl.c, 139 :: 		return;
0x05BA	0xE038    B	L_end_m_aci_event_check
;hal_aci_tl.c, 140 :: 		}
L_hal_aci_tl_m_aci_event_check9:
;hal_aci_tl.c, 143 :: 		if (HIGH == digitalRead(a_pins_local_ptr->rdyn_pin))
0x05BC	0x481F    LDR	R0, [PC, #124]
0x05BE	0x6800    LDR	R0, [R0, #0]
0x05C0	0x1C80    ADDS	R0, R0, #2
0x05C2	0x7800    LDRB	R0, [R0, #0]
0x05C4	0xF7FFFF42  BL	_digitalRead+0
0x05C8	0x2801    CMP	R0, #1
0x05CA	0xD107    BNE	L_hal_aci_tl_m_aci_event_check10
;hal_aci_tl.c, 145 :: 		if (!aci_queue_is_empty(&aci_tx_q))
0x05CC	0x481C    LDR	R0, [PC, #112]
0x05CE	0xF7FFFF67  BL	_aci_queue_is_empty+0
0x05D2	0x2800    CMP	R0, #0
0x05D4	0xD101    BNE	L_hal_aci_tl_m_aci_event_check11
;hal_aci_tl.c, 147 :: 		m_aci_reqn_enable();
0x05D6	0xF7FFFF89  BL	hal_aci_tl_m_aci_reqn_enable+0
;hal_aci_tl.c, 148 :: 		}
L_hal_aci_tl_m_aci_event_check11:
;hal_aci_tl.c, 150 :: 		return;
0x05DA	0xE028    B	L_end_m_aci_event_check
;hal_aci_tl.c, 151 :: 		}
L_hal_aci_tl_m_aci_event_check10:
;hal_aci_tl.c, 154 :: 		if (!aci_queue_dequeue(&aci_tx_q, &data_to_send))
0x05DC	0xA801    ADD	R0, SP, #4
0x05DE	0x4601    MOV	R1, R0
0x05E0	0x4817    LDR	R0, [PC, #92]
0x05E2	0xF7FFFE73  BL	_aci_queue_dequeue+0
0x05E6	0xB930    CBNZ	R0, L_hal_aci_tl_m_aci_event_check12
;hal_aci_tl.c, 157 :: 		data_to_send.status_byte = 0;
0x05E8	0x2000    MOVS	R0, #0
0x05EA	0xF88D0004  STRB	R0, [SP, #4]
;hal_aci_tl.c, 158 :: 		data_to_send.buffer[0] = 0;
0x05EE	0xF10D0105  ADD	R1, SP, #5
0x05F2	0x2000    MOVS	R0, #0
0x05F4	0x7008    STRB	R0, [R1, #0]
;hal_aci_tl.c, 159 :: 		}
L_hal_aci_tl_m_aci_event_check12:
;hal_aci_tl.c, 162 :: 		m_aci_spi_transfer(&data_to_send, &received_data);
0x05F6	0xF10D0125  ADD	R1, SP, #37
0x05FA	0xA801    ADD	R0, SP, #4
0x05FC	0xF7FFFEA0  BL	hal_aci_tl_m_aci_spi_transfer+0
;hal_aci_tl.c, 165 :: 		if (!aci_queue_is_full(&aci_rx_q) && !aci_queue_is_empty(&aci_tx_q))
0x0600	0x480D    LDR	R0, [PC, #52]
0x0602	0xF7FFFE3B  BL	_aci_queue_is_full+0
0x0606	0xB928    CBNZ	R0, L_hal_aci_tl_m_aci_event_check60
0x0608	0x480D    LDR	R0, [PC, #52]
0x060A	0xF7FFFF49  BL	_aci_queue_is_empty+0
0x060E	0xB908    CBNZ	R0, L_hal_aci_tl_m_aci_event_check59
L_hal_aci_tl_m_aci_event_check58:
;hal_aci_tl.c, 167 :: 		m_aci_reqn_enable();
0x0610	0xF7FFFF6C  BL	hal_aci_tl_m_aci_reqn_enable+0
;hal_aci_tl.c, 165 :: 		if (!aci_queue_is_full(&aci_rx_q) && !aci_queue_is_empty(&aci_tx_q))
L_hal_aci_tl_m_aci_event_check60:
L_hal_aci_tl_m_aci_event_check59:
;hal_aci_tl.c, 171 :: 		if (received_data.buffer[0] > 0)
0x0614	0xF10D0026  ADD	R0, SP, #38
0x0618	0x7800    LDRB	R0, [R0, #0]
0x061A	0x2800    CMP	R0, #0
0x061C	0xD907    BLS	L_hal_aci_tl_m_aci_event_check16
;hal_aci_tl.c, 173 :: 		if (!aci_queue_enqueue(&aci_rx_q, &received_data))
0x061E	0xF10D0025  ADD	R0, SP, #37
0x0622	0x4601    MOV	R1, R0
0x0624	0x4804    LDR	R0, [PC, #16]
0x0626	0xF7FFFF71  BL	_aci_queue_enqueue+0
0x062A	0xB900    CBNZ	R0, L_hal_aci_tl_m_aci_event_check17
;hal_aci_tl.c, 179 :: 		while(1);
L_hal_aci_tl_m_aci_event_check18:
0x062C	0xE7FE    B	L_hal_aci_tl_m_aci_event_check18
;hal_aci_tl.c, 180 :: 		}
L_hal_aci_tl_m_aci_event_check17:
;hal_aci_tl.c, 181 :: 		}
L_hal_aci_tl_m_aci_event_check16:
;hal_aci_tl.c, 183 :: 		return;
;hal_aci_tl.c, 184 :: 		}
L_end_m_aci_event_check:
0x062E	0xF8DDE000  LDR	LR, [SP, #0]
0x0632	0xB012    ADD	SP, SP, #72
0x0634	0x4770    BX	LR
0x0636	0xBF00    NOP
0x0638	0x03702000  	_aci_rx_q+0
0x063C	0x036C2000  	hal_aci_tl_a_pins_local_ptr+0
0x0640	0x03F62000  	_aci_tx_q+0
; end of hal_aci_tl_m_aci_event_check
_digitalRead:
;blep_hal.c, 131 :: 		uint8_t digitalRead(uint8_t pin_num)
; pin_num start address is: 0 (R0)
0x044C	0xB081    SUB	SP, SP, #4
; pin_num end address is: 0 (R0)
; pin_num start address is: 0 (R0)
;blep_hal.c, 134 :: 		switch ( pin_num)
0x044E	0xE013    B	L_digitalRead6
; pin_num end address is: 0 (R0)
;blep_hal.c, 136 :: 		case REQN_PIN:
L_digitalRead8:
;blep_hal.c, 137 :: 		temp = (uint8_t)CS;
0x0450	0x4A0F    LDR	R2, [PC, #60]
0x0452	0x6811    LDR	R1, [R2, #0]
0x0454	0xF88D1000  STRB	R1, [SP, #0]
;blep_hal.c, 138 :: 		break;
0x0458	0xE016    B	L_digitalRead7
;blep_hal.c, 139 :: 		case RDYN_PIN:
L_digitalRead9:
;blep_hal.c, 140 :: 		temp = (uint8_t)RDYN;
0x045A	0x4A0E    LDR	R2, [PC, #56]
0x045C	0x6811    LDR	R1, [R2, #0]
0x045E	0xF88D1000  STRB	R1, [SP, #0]
;blep_hal.c, 141 :: 		break;
0x0462	0xE011    B	L_digitalRead7
;blep_hal.c, 142 :: 		case RESET_PIN:
L_digitalRead10:
;blep_hal.c, 143 :: 		temp = (uint8_t)RST;
0x0464	0x4A0C    LDR	R2, [PC, #48]
0x0466	0x6811    LDR	R1, [R2, #0]
0x0468	0xF88D1000  STRB	R1, [SP, #0]
;blep_hal.c, 144 :: 		break;
0x046C	0xE00C    B	L_digitalRead7
;blep_hal.c, 145 :: 		case ACTIVE_PIN:
L_digitalRead11:
;blep_hal.c, 146 :: 		temp = (uint8_t)ACT;
0x046E	0x4A0B    LDR	R2, [PC, #44]
0x0470	0x6811    LDR	R1, [R2, #0]
0x0472	0xF88D1000  STRB	R1, [SP, #0]
;blep_hal.c, 147 :: 		break;
0x0476	0xE007    B	L_digitalRead7
;blep_hal.c, 148 :: 		}
L_digitalRead6:
; pin_num start address is: 0 (R0)
0x0478	0x2800    CMP	R0, #0
0x047A	0xD0E9    BEQ	L_digitalRead8
0x047C	0x2801    CMP	R0, #1
0x047E	0xD0EC    BEQ	L_digitalRead9
0x0480	0x2805    CMP	R0, #5
0x0482	0xD0EF    BEQ	L_digitalRead10
0x0484	0x2806    CMP	R0, #6
0x0486	0xD0F2    BEQ	L_digitalRead11
; pin_num end address is: 0 (R0)
L_digitalRead7:
;blep_hal.c, 149 :: 		return temp;
0x0488	0xF89D0000  LDRB	R0, [SP, #0]
;blep_hal.c, 150 :: 		}
L_end_digitalRead:
0x048C	0xB001    ADD	SP, SP, #4
0x048E	0x4770    BX	LR
0x0490	0x82B44241  	CS+0
0x0494	0x82284241  	RDYN+0
0x0498	0x02884241  	RST+0
0x049C	0x02104240  	ACT+0
; end of _digitalRead
_aci_queue_is_empty:
;aci_queue.c, 118 :: 		bool aci_queue_is_empty(aci_queue_t *aci_q)
0x04A0	0xB083    SUB	SP, SP, #12
0x04A2	0xF8CDE000  STR	LR, [SP, #0]
0x04A6	0x9002    STR	R0, [SP, #8]
;aci_queue.c, 120 :: 		bool state = false;
0x04A8	0x2100    MOVS	R1, #0
0x04AA	0xF88D1005  STRB	R1, [SP, #5]
;aci_queue.c, 122 :: 		ble_assert(NULL != aci_q);
0x04AE	0x9902    LDR	R1, [SP, #8]
0x04B0	0xB101    CBZ	R1, L_aci_queue_is_empty25
0x04B2	0xE004    B	L_aci_queue_is_empty26
L_aci_queue_is_empty25:
0x04B4	0x490C    LDR	R1, [PC, #48]
0x04B6	0x4608    MOV	R0, R1
0x04B8	0x217A    MOVS	R1, #122
0x04BA	0xF000F96F  BL	___ble_assert+0
L_aci_queue_is_empty26:
;aci_queue.c, 125 :: 		noInterrupts();
0x04BE	0xF7FFFEAD  BL	_noInterrupts+0
;aci_queue.c, 126 :: 		if (aci_q->head == aci_q->tail)
0x04C2	0x9902    LDR	R1, [SP, #8]
0x04C4	0x3184    ADDS	R1, #132
0x04C6	0x780A    LDRB	R2, [R1, #0]
0x04C8	0x9902    LDR	R1, [SP, #8]
0x04CA	0x3185    ADDS	R1, #133
0x04CC	0x7809    LDRB	R1, [R1, #0]
0x04CE	0x428A    CMP	R2, R1
0x04D0	0xD102    BNE	L_aci_queue_is_empty27
;aci_queue.c, 128 :: 		state = true;
0x04D2	0x2101    MOVS	R1, #1
0x04D4	0xF88D1005  STRB	R1, [SP, #5]
;aci_queue.c, 129 :: 		}
L_aci_queue_is_empty27:
;aci_queue.c, 130 :: 		interrupts();
0x04D8	0xF7FFFEA2  BL	_interrupts+0
;aci_queue.c, 132 :: 		return state;
0x04DC	0xF89D0005  LDRB	R0, [SP, #5]
;aci_queue.c, 133 :: 		}
L_end_aci_queue_is_empty:
0x04E0	0xF8DDE000  LDR	LR, [SP, #0]
0x04E4	0xB003    ADD	SP, SP, #12
0x04E6	0x4770    BX	LR
0x04E8	0x3A7D0000  	?lstr_10_aci_queue+0
; end of _aci_queue_is_empty
_aci_queue_dequeue:
;aci_queue.c, 48 :: 		bool aci_queue_dequeue(aci_queue_t *aci_q, hal_aci_data_t *p_data)
0x02CC	0xB085    SUB	SP, SP, #20
0x02CE	0xF8CDE000  STR	LR, [SP, #0]
0x02D2	0x9003    STR	R0, [SP, #12]
0x02D4	0x9104    STR	R1, [SP, #16]
;aci_queue.c, 50 :: 		ble_assert(NULL != aci_q);
0x02D6	0x9A03    LDR	R2, [SP, #12]
0x02D8	0xB102    CBZ	R2, L_aci_queue_dequeue5
0x02DA	0xE004    B	L_aci_queue_dequeue6
L_aci_queue_dequeue5:
0x02DC	0x4A16    LDR	R2, [PC, #88]
0x02DE	0x2132    MOVS	R1, #50
0x02E0	0x4610    MOV	R0, R2
0x02E2	0xF000FA5B  BL	___ble_assert+0
L_aci_queue_dequeue6:
;aci_queue.c, 51 :: 		ble_assert(NULL != p_data);
0x02E6	0x9A04    LDR	R2, [SP, #16]
0x02E8	0xB102    CBZ	R2, L_aci_queue_dequeue7
0x02EA	0xE004    B	L_aci_queue_dequeue8
L_aci_queue_dequeue7:
0x02EC	0x4A13    LDR	R2, [PC, #76]
0x02EE	0x2133    MOVS	R1, #51
0x02F0	0x4610    MOV	R0, R2
0x02F2	0xF000FA53  BL	___ble_assert+0
L_aci_queue_dequeue8:
;aci_queue.c, 53 :: 		if (aci_queue_is_empty(aci_q))
0x02F6	0x9803    LDR	R0, [SP, #12]
0x02F8	0xF000F8D2  BL	_aci_queue_is_empty+0
0x02FC	0xB108    CBZ	R0, L_aci_queue_dequeue9
;aci_queue.c, 55 :: 		return false;
0x02FE	0x2000    MOVS	R0, #0
0x0300	0xE016    B	L_end_aci_queue_dequeue
;aci_queue.c, 56 :: 		}
L_aci_queue_dequeue9:
;aci_queue.c, 58 :: 		memcpy((uint8_t *)p_data, (uint8_t *)&(aci_q->aci_data[aci_q->head % ACI_QUEUE_SIZE]), sizeof(hal_aci_data_t));
0x0302	0x9A03    LDR	R2, [SP, #12]
0x0304	0x3284    ADDS	R2, #132
0x0306	0x7812    LDRB	R2, [R2, #0]
0x0308	0xF0020303  AND	R3, R2, #3
0x030C	0xB2DB    UXTB	R3, R3
0x030E	0x2221    MOVS	R2, #33
0x0310	0x4353    MULS	R3, R2, R3
0x0312	0x9A03    LDR	R2, [SP, #12]
0x0314	0x18D2    ADDS	R2, R2, R3
0x0316	0x4611    MOV	R1, R2
0x0318	0x2221    MOVS	R2, #33
0x031A	0xB212    SXTH	R2, R2
0x031C	0x9804    LDR	R0, [SP, #16]
0x031E	0xF7FFFF9B  BL	_memcpy+0
;aci_queue.c, 59 :: 		++aci_q->head;
0x0322	0x9A03    LDR	R2, [SP, #12]
0x0324	0xF2020384  ADDW	R3, R2, #132
0x0328	0x781A    LDRB	R2, [R3, #0]
0x032A	0x1C52    ADDS	R2, R2, #1
0x032C	0x701A    STRB	R2, [R3, #0]
;aci_queue.c, 61 :: 		return true;
0x032E	0x2001    MOVS	R0, #1
;aci_queue.c, 62 :: 		}
L_end_aci_queue_dequeue:
0x0330	0xF8DDE000  LDR	LR, [SP, #0]
0x0334	0xB005    ADD	SP, SP, #20
0x0336	0x4770    BX	LR
0x0338	0x3B280000  	?lstr_2_aci_queue+0
0x033C	0x3AEF0000  	?lstr_3_aci_queue+0
; end of _aci_queue_dequeue
hal_aci_tl_m_aci_spi_transfer:
;hal_aci_tl.c, 221 :: 		static bool m_aci_spi_transfer(hal_aci_data_t * data_to_send, hal_aci_data_t * received_data)
0x0340	0xB087    SUB	SP, SP, #28
0x0342	0xF8CDE000  STR	LR, [SP, #0]
0x0346	0x9003    STR	R0, [SP, #12]
0x0348	0x9104    STR	R1, [SP, #16]
;hal_aci_tl.c, 227 :: 		m_aci_reqn_enable();
0x034A	0xF000F8CF  BL	hal_aci_tl_m_aci_reqn_enable+0
;hal_aci_tl.c, 230 :: 		byte_sent_cnt = 0;
0x034E	0x2200    MOVS	R2, #0
0x0350	0xF88D2008  STRB	R2, [SP, #8]
;hal_aci_tl.c, 231 :: 		received_data->status_byte = spi_readwrite(data_to_send->buffer[byte_sent_cnt++]);
0x0354	0x9A04    LDR	R2, [SP, #16]
0x0356	0x9206    STR	R2, [SP, #24]
0x0358	0x9A03    LDR	R2, [SP, #12]
0x035A	0x1C52    ADDS	R2, R2, #1
0x035C	0x7812    LDRB	R2, [R2, #0]
0x035E	0xB2D0    UXTB	R0, R2
0x0360	0xF7FFFF70  BL	hal_aci_tl_spi_readwrite+0
0x0364	0x9A06    LDR	R2, [SP, #24]
0x0366	0x7010    STRB	R0, [R2, #0]
0x0368	0xF89D2008  LDRB	R2, [SP, #8]
0x036C	0x1C53    ADDS	R3, R2, #1
0x036E	0xB2DB    UXTB	R3, R3
0x0370	0xF88D3008  STRB	R3, [SP, #8]
;hal_aci_tl.c, 233 :: 		received_data->buffer[0] = spi_readwrite(data_to_send->buffer[byte_sent_cnt++]);
0x0374	0x9A04    LDR	R2, [SP, #16]
0x0376	0x1C52    ADDS	R2, R2, #1
0x0378	0x9206    STR	R2, [SP, #24]
0x037A	0x9A03    LDR	R2, [SP, #12]
0x037C	0x1C52    ADDS	R2, R2, #1
0x037E	0x18D2    ADDS	R2, R2, R3
0x0380	0x7812    LDRB	R2, [R2, #0]
0x0382	0xB2D0    UXTB	R0, R2
0x0384	0xF7FFFF5E  BL	hal_aci_tl_spi_readwrite+0
0x0388	0x9A06    LDR	R2, [SP, #24]
0x038A	0x7010    STRB	R0, [R2, #0]
0x038C	0xF89D2008  LDRB	R2, [SP, #8]
0x0390	0x1C52    ADDS	R2, R2, #1
0x0392	0xF88D2008  STRB	R2, [SP, #8]
;hal_aci_tl.c, 234 :: 		if (0 == data_to_send->buffer[0])
0x0396	0x9A03    LDR	R2, [SP, #12]
0x0398	0x1C52    ADDS	R2, R2, #1
0x039A	0x7812    LDRB	R2, [R2, #0]
0x039C	0xB92A    CBNZ	R2, L_hal_aci_tl_m_aci_spi_transfer20
;hal_aci_tl.c, 236 :: 		max_bytes = received_data->buffer[0];
0x039E	0x9A04    LDR	R2, [SP, #16]
0x03A0	0x1C52    ADDS	R2, R2, #1
0x03A2	0x7812    LDRB	R2, [R2, #0]
0x03A4	0xF88D2009  STRB	R2, [SP, #9]
;hal_aci_tl.c, 237 :: 		}
0x03A8	0xE017    B	L_hal_aci_tl_m_aci_spi_transfer21
L_hal_aci_tl_m_aci_spi_transfer20:
;hal_aci_tl.c, 241 :: 		max_bytes = (received_data->buffer[0] > (data_to_send->buffer[0] - 1))
0x03AA	0x9A04    LDR	R2, [SP, #16]
0x03AC	0x1C52    ADDS	R2, R2, #1
0x03AE	0x7813    LDRB	R3, [R2, #0]
0x03B0	0x9A03    LDR	R2, [SP, #12]
0x03B2	0x1C52    ADDS	R2, R2, #1
0x03B4	0x7812    LDRB	R2, [R2, #0]
0x03B6	0x1E52    SUBS	R2, R2, #1
0x03B8	0xB212    SXTH	R2, R2
;hal_aci_tl.c, 242 :: 		? received_data->buffer[0]
0x03BA	0x4293    CMP	R3, R2
0x03BC	0xDD05    BLE	L_hal_aci_tl_m_aci_spi_transfer22
0x03BE	0x9A04    LDR	R2, [SP, #16]
0x03C0	0x1C52    ADDS	R2, R2, #1
0x03C2	0x7813    LDRB	R3, [R2, #0]
; ?FLOC__hal_aci_tl_m_aci_spi_transfer?T170 start address is: 12 (R3)
0x03C4	0xB2DB    UXTB	R3, R3
;hal_aci_tl.c, 243 :: 		: (data_to_send->buffer[0] - 1);
0x03C6	0xB218    SXTH	R0, R3
; ?FLOC__hal_aci_tl_m_aci_spi_transfer?T170 end address is: 12 (R3)
0x03C8	0xE005    B	L_hal_aci_tl_m_aci_spi_transfer23
L_hal_aci_tl_m_aci_spi_transfer22:
0x03CA	0x9A03    LDR	R2, [SP, #12]
0x03CC	0x1C52    ADDS	R2, R2, #1
0x03CE	0x7812    LDRB	R2, [R2, #0]
0x03D0	0x1E52    SUBS	R2, R2, #1
; ?FLOC__hal_aci_tl_m_aci_spi_transfer?T170 start address is: 12 (R3)
0x03D2	0xB213    SXTH	R3, R2
; ?FLOC__hal_aci_tl_m_aci_spi_transfer?T170 end address is: 12 (R3)
0x03D4	0xB218    SXTH	R0, R3
L_hal_aci_tl_m_aci_spi_transfer23:
; ?FLOC__hal_aci_tl_m_aci_spi_transfer?T170 start address is: 0 (R0)
0x03D6	0xF88D0009  STRB	R0, [SP, #9]
; ?FLOC__hal_aci_tl_m_aci_spi_transfer?T170 end address is: 0 (R0)
;hal_aci_tl.c, 244 :: 		}
L_hal_aci_tl_m_aci_spi_transfer21:
;hal_aci_tl.c, 246 :: 		if (max_bytes > HAL_ACI_MAX_LENGTH)
0x03DA	0xF89D2009  LDRB	R2, [SP, #9]
0x03DE	0x2A1F    CMP	R2, #31
0x03E0	0xD902    BLS	L_hal_aci_tl_m_aci_spi_transfer24
;hal_aci_tl.c, 248 :: 		max_bytes = HAL_ACI_MAX_LENGTH;
0x03E2	0x221F    MOVS	R2, #31
0x03E4	0xF88D2009  STRB	R2, [SP, #9]
;hal_aci_tl.c, 249 :: 		}
L_hal_aci_tl_m_aci_spi_transfer24:
;hal_aci_tl.c, 252 :: 		for (byte_cnt = 0; byte_cnt < max_bytes; byte_cnt++)
; byte_cnt start address is: 24 (R6)
0x03E8	0x2600    MOVS	R6, #0
; byte_cnt end address is: 24 (R6)
0x03EA	0xB2F1    UXTB	R1, R6
L_hal_aci_tl_m_aci_spi_transfer25:
; byte_cnt start address is: 4 (R1)
0x03EC	0xF89D2009  LDRB	R2, [SP, #9]
0x03F0	0x4291    CMP	R1, R2
0x03F2	0xD21D    BCS	L_hal_aci_tl_m_aci_spi_transfer26
;hal_aci_tl.c, 254 :: 		received_data->buffer[byte_cnt+1] = spi_readwrite(data_to_send->buffer[byte_sent_cnt++]);
0x03F4	0x9A04    LDR	R2, [SP, #16]
0x03F6	0x1C53    ADDS	R3, R2, #1
0x03F8	0x1C4A    ADDS	R2, R1, #1
0x03FA	0xB212    SXTH	R2, R2
0x03FC	0x189A    ADDS	R2, R3, R2
0x03FE	0x9206    STR	R2, [SP, #24]
0x0400	0x9A03    LDR	R2, [SP, #12]
0x0402	0x1C53    ADDS	R3, R2, #1
0x0404	0xF89D2008  LDRB	R2, [SP, #8]
0x0408	0x189A    ADDS	R2, R3, R2
0x040A	0x7812    LDRB	R2, [R2, #0]
0x040C	0xF88D1004  STRB	R1, [SP, #4]
0x0410	0xB2D0    UXTB	R0, R2
0x0412	0xF7FFFF17  BL	hal_aci_tl_spi_readwrite+0
0x0416	0xF89D1004  LDRB	R1, [SP, #4]
0x041A	0x9A06    LDR	R2, [SP, #24]
0x041C	0x7010    STRB	R0, [R2, #0]
0x041E	0xF89D2008  LDRB	R2, [SP, #8]
0x0422	0x1C52    ADDS	R2, R2, #1
0x0424	0xF88D2008  STRB	R2, [SP, #8]
;hal_aci_tl.c, 252 :: 		for (byte_cnt = 0; byte_cnt < max_bytes; byte_cnt++)
0x0428	0x1C4A    ADDS	R2, R1, #1
; byte_cnt end address is: 4 (R1)
; byte_cnt start address is: 24 (R6)
0x042A	0xB2D6    UXTB	R6, R2
;hal_aci_tl.c, 255 :: 		}
0x042C	0xB2F1    UXTB	R1, R6
; byte_cnt end address is: 24 (R6)
0x042E	0xE7DD    B	L_hal_aci_tl_m_aci_spi_transfer25
L_hal_aci_tl_m_aci_spi_transfer26:
;hal_aci_tl.c, 258 :: 		m_aci_reqn_disable();
0x0430	0xF7FFFEF8  BL	hal_aci_tl_m_aci_reqn_disable+0
;hal_aci_tl.c, 260 :: 		return (max_bytes > 0);
0x0434	0xF89D2009  LDRB	R2, [SP, #9]
0x0438	0x2A00    CMP	R2, #0
0x043A	0xF2400200  MOVW	R2, #0
0x043E	0xD900    BLS	L_hal_aci_tl_m_aci_spi_transfer81
0x0440	0x2201    MOVS	R2, #1
L_hal_aci_tl_m_aci_spi_transfer81:
0x0442	0xB2D0    UXTB	R0, R2
;hal_aci_tl.c, 261 :: 		}
L_end_m_aci_spi_transfer:
0x0444	0xF8DDE000  LDR	LR, [SP, #0]
0x0448	0xB007    ADD	SP, SP, #28
0x044A	0x4770    BX	LR
; end of hal_aci_tl_m_aci_spi_transfer
hal_aci_tl_spi_readwrite:
;hal_aci_tl.c, 433 :: 		static uint8_t spi_readwrite(const uint8_t aci_byte)
; aci_byte start address is: 0 (R0)
0x0244	0xB081    SUB	SP, SP, #4
0x0246	0xF8CDE000  STR	LR, [SP, #0]
; aci_byte end address is: 0 (R0)
; aci_byte start address is: 0 (R0)
;hal_aci_tl.c, 435 :: 		return blep_hal_transfer( aci_byte );
; aci_byte end address is: 0 (R0)
0x024A	0xF7FFFFD9  BL	_blep_hal_transfer+0
;hal_aci_tl.c, 436 :: 		}
L_end_spi_readwrite:
0x024E	0xF8DDE000  LDR	LR, [SP, #0]
0x0252	0xB001    ADD	SP, SP, #4
0x0254	0x4770    BX	LR
; end of hal_aci_tl_spi_readwrite
_blep_hal_transfer:
;blep_hal.c, 106 :: 		uint8_t blep_hal_transfer (uint8_t _payload)
; _payload start address is: 0 (R0)
0x0200	0xB081    SUB	SP, SP, #4
0x0202	0xF8CDE000  STR	LR, [SP, #0]
; _payload end address is: 0 (R0)
; _payload start address is: 0 (R0)
;blep_hal.c, 109 :: 		return read_spi_p(_payload);
; _payload end address is: 0 (R0)
0x0206	0x4C04    LDR	R4, [PC, #16]
0x0208	0x6824    LDR	R4, [R4, #0]
0x020A	0x47A0    BLX	R4
0x020C	0xB2C0    UXTB	R0, R0
;blep_hal.c, 110 :: 		}
L_end_blep_hal_transfer:
0x020E	0xF8DDE000  LDR	LR, [SP, #0]
0x0212	0xB001    ADD	SP, SP, #4
0x0214	0x4770    BX	LR
0x0216	0xBF00    NOP
0x0218	0x030C2000  	blep_hal_read_spi_p+0
; end of _blep_hal_transfer
_SPI1_Read:
;__Lib_SPI_123.c, 74 :: 		
; data_out start address is: 0 (R0)
0x01AC	0xB081    SUB	SP, SP, #4
0x01AE	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 75 :: 		
0x01B2	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x01B4	0x4803    LDR	R0, [PC, #12]
0x01B6	0xF7FFFFE7  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 76 :: 		
L_end_SPI1_Read:
0x01BA	0xF8DDE000  LDR	LR, [SP, #0]
0x01BE	0xB001    ADD	SP, SP, #4
0x01C0	0x4770    BX	LR
0x01C2	0xBF00    NOP
0x01C4	0x30004001  	SPI1_CR1+0
; end of _SPI1_Read
__Lib_SPI_123_SPIx_Read:
;__Lib_SPI_123.c, 67 :: 		
; data_out start address is: 4 (R1)
; base start address is: 0 (R0)
0x0188	0xB081    SUB	SP, SP, #4
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
; base start address is: 0 (R0)
; data_out start address is: 4 (R1)
;__Lib_SPI_123.c, 68 :: 		
0x018A	0xF200020C  ADDW	R2, R0, #12
0x018E	0x6011    STR	R1, [R2, #0]
; data_out end address is: 4 (R1)
; base end address is: 0 (R0)
;__Lib_SPI_123.c, 69 :: 		
L___Lib_SPI_123_SPIx_Read0:
; base start address is: 0 (R0)
0x0190	0xF2000208  ADDW	R2, R0, #8
0x0194	0x6813    LDR	R3, [R2, #0]
0x0196	0xF3C30200  UBFX	R2, R3, #0, #1
0x019A	0xB902    CBNZ	R2, L___Lib_SPI_123_SPIx_Read1
;__Lib_SPI_123.c, 70 :: 		
0x019C	0xE7F8    B	L___Lib_SPI_123_SPIx_Read0
L___Lib_SPI_123_SPIx_Read1:
;__Lib_SPI_123.c, 71 :: 		
0x019E	0xF200020C  ADDW	R2, R0, #12
; base end address is: 0 (R0)
0x01A2	0x6812    LDR	R2, [R2, #0]
0x01A4	0xB290    UXTH	R0, R2
;__Lib_SPI_123.c, 72 :: 		
L_end_SPIx_Read:
0x01A6	0xB001    ADD	SP, SP, #4
0x01A8	0x4770    BX	LR
; end of __Lib_SPI_123_SPIx_Read
_SPI2_Read:
;__Lib_SPI_123.c, 99 :: 		
; data_out start address is: 0 (R0)
0x01E4	0xB081    SUB	SP, SP, #4
0x01E6	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 100 :: 		
0x01EA	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x01EC	0x4803    LDR	R0, [PC, #12]
0x01EE	0xF7FFFFCB  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 101 :: 		
L_end_SPI2_Read:
0x01F2	0xF8DDE000  LDR	LR, [SP, #0]
0x01F6	0xB001    ADD	SP, SP, #4
0x01F8	0x4770    BX	LR
0x01FA	0xBF00    NOP
0x01FC	0x38004000  	SPI2_CR1+0
; end of _SPI2_Read
_SPI3_Read:
;__Lib_SPI_123.c, 125 :: 		
; data_out start address is: 0 (R0)
0x01C8	0xB081    SUB	SP, SP, #4
0x01CA	0xF8CDE000  STR	LR, [SP, #0]
; data_out end address is: 0 (R0)
; data_out start address is: 0 (R0)
;__Lib_SPI_123.c, 126 :: 		
0x01CE	0xB281    UXTH	R1, R0
; data_out end address is: 0 (R0)
0x01D0	0x4803    LDR	R0, [PC, #12]
0x01D2	0xF7FFFFD9  BL	__Lib_SPI_123_SPIx_Read+0
;__Lib_SPI_123.c, 127 :: 		
L_end_SPI3_Read:
0x01D6	0xF8DDE000  LDR	LR, [SP, #0]
0x01DA	0xB001    ADD	SP, SP, #4
0x01DC	0x4770    BX	LR
0x01DE	0xBF00    NOP
0x01E0	0x3C004000  	SPI3_CR1+0
; end of _SPI3_Read
hal_aci_tl_m_aci_reqn_disable:
;hal_aci_tl.c, 202 :: 		static inline void m_aci_reqn_disable (void)
0x0224	0xB081    SUB	SP, SP, #4
0x0226	0xF8CDE000  STR	LR, [SP, #0]
;hal_aci_tl.c, 204 :: 		digitalWrite(a_pins_local_ptr->reqn_pin, 1);
0x022A	0x4805    LDR	R0, [PC, #20]
0x022C	0x6800    LDR	R0, [R0, #0]
0x022E	0x1C40    ADDS	R0, R0, #1
0x0230	0x7800    LDRB	R0, [R0, #0]
0x0232	0x2101    MOVS	R1, #1
0x0234	0xF000FA94  BL	_digitalWrite+0
;hal_aci_tl.c, 205 :: 		}
L_end_m_aci_reqn_disable:
0x0238	0xF8DDE000  LDR	LR, [SP, #0]
0x023C	0xB001    ADD	SP, SP, #4
0x023E	0x4770    BX	LR
0x0240	0x036C2000  	hal_aci_tl_a_pins_local_ptr+0
; end of hal_aci_tl_m_aci_reqn_disable
ble_p_click_clear_serial_buffer:
;ble_p_click.c, 22 :: 		static void clear_serial_buffer()
;ble_p_click.c, 24 :: 		for (i = 0; i < SERIAL_BUFFER_LENGTH; ++i)
; i start address is: 8 (R2)
0x2350	0x2200    MOVS	R2, #0
; i end address is: 8 (R2)
L_ble_p_click_clear_serial_buffer0:
; i start address is: 8 (R2)
0x2352	0x2A20    CMP	R2, #32
0x2354	0xD206    BCS	L_ble_p_click_clear_serial_buffer1
;ble_p_click.c, 26 :: 		serial_buffer[i] = ' ';
0x2356	0x4804    LDR	R0, [PC, #16]
0x2358	0x1881    ADDS	R1, R0, R2
0x235A	0x2020    MOVS	R0, #32
0x235C	0x7008    STRB	R0, [R1, #0]
;ble_p_click.c, 24 :: 		for (i = 0; i < SERIAL_BUFFER_LENGTH; ++i)
0x235E	0x1C52    ADDS	R2, R2, #1
0x2360	0xB2D2    UXTB	R2, R2
;ble_p_click.c, 27 :: 		}
; i end address is: 8 (R2)
0x2362	0xE7F6    B	L_ble_p_click_clear_serial_buffer0
L_ble_p_click_clear_serial_buffer1:
;ble_p_click.c, 28 :: 		}
L_end_clear_serial_buffer:
0x2364	0x4770    BX	LR
0x2366	0xBF00    NOP
0x2368	0x03142000  	ble_p_click_serial_buffer+0
; end of ble_p_click_clear_serial_buffer
_ble_uart_loop:
;ble_uart.c, 173 :: 		void ble_uart_loop() {
0x2BE8	0xB081    SUB	SP, SP, #4
0x2BEA	0xF8CDE000  STR	LR, [SP, #0]
;ble_uart.c, 176 :: 		aci_loop();
0x2BEE	0xF7FFFD2F  BL	_aci_loop+0
;ble_uart.c, 177 :: 		}
L_end_ble_uart_loop:
0x2BF2	0xF8DDE000  LDR	LR, [SP, #0]
0x2BF6	0xB001    ADD	SP, SP, #4
0x2BF8	0x4770    BX	LR
; end of _ble_uart_loop
_aci_loop:
;uart_aci.c, 150 :: 		void aci_loop()
0x2650	0xB088    SUB	SP, SP, #32
0x2652	0xF8CDE000  STR	LR, [SP, #0]
;uart_aci.c, 155 :: 		if (lib_aci_event_get(&aci_state, &aci_data))
0x2656	0x498E    LDR	R1, [PC, #568]
0x2658	0x488E    LDR	R0, [PC, #568]
0x265A	0xF7FEF96F  BL	_lib_aci_event_get+0
0x265E	0x2800    CMP	R0, #0
0x2660	0xF00081A5  BEQ	L_aci_loop9
;uart_aci.c, 158 :: 		aci_evt = &aci_data.evt;
; aci_evt start address is: 12 (R3)
0x2664	0x4B8C    LDR	R3, [PC, #560]
;uart_aci.c, 159 :: 		switch(aci_evt->evt_opcode)
0x2666	0x1C58    ADDS	R0, R3, #1
0x2668	0x9007    STR	R0, [SP, #28]
0x266A	0xE176    B	L_aci_loop10
;uart_aci.c, 164 :: 		case ACI_EVT_DEVICE_STARTED:
L_aci_loop12:
;uart_aci.c, 166 :: 		aci_state.data_credit_total = aci_evt->params.device_started.credit_available;
0x266C	0x1C9A    ADDS	R2, R3, #2
0x266E	0x1C90    ADDS	R0, R2, #2
0x2670	0x7801    LDRB	R1, [R0, #0]
0x2672	0x488A    LDR	R0, [PC, #552]
0x2674	0x7001    STRB	R1, [R0, #0]
;uart_aci.c, 167 :: 		switch(aci_evt->params.device_started.device_mode)
0x2676	0x4610    MOV	R0, R2
0x2678	0x9006    STR	R0, [SP, #24]
0x267A	0xE025    B	L_aci_loop13
; aci_evt end address is: 12 (R3)
;uart_aci.c, 169 :: 		case ACI_DEVICE_SETUP:
L_aci_loop15:
;uart_aci.c, 173 :: 		UART1_Write_Text(" Event device started: Setup ");
0x267C	0x4888    LDR	R0, [PC, #544]
0x267E	0xF000FA7F  BL	_UART1_Write_Text+0
;uart_aci.c, 174 :: 		setup_required = true;
0x2682	0x2101    MOVS	R1, #1
0x2684	0x4887    LDR	R0, [PC, #540]
0x2686	0x7001    STRB	R1, [R0, #0]
;uart_aci.c, 175 :: 		break;
0x2688	0xE026    B	L_aci_loop14
;uart_aci.c, 177 :: 		case ACI_DEVICE_STANDBY:
L_aci_loop16:
;uart_aci.c, 178 :: 		UART1_Write_Text(" Evt Device Started: Standby ");
; aci_evt start address is: 12 (R3)
0x268A	0x4887    LDR	R0, [PC, #540]
0x268C	0x9301    STR	R3, [SP, #4]
0x268E	0xF000FA77  BL	_UART1_Write_Text+0
0x2692	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 181 :: 		if (aci_evt->params.device_started.hw_error)
0x2694	0x1C98    ADDS	R0, R3, #2
; aci_evt end address is: 12 (R3)
0x2696	0x1C40    ADDS	R0, R0, #1
0x2698	0x7800    LDRB	R0, [R0, #0]
0x269A	0xB160    CBZ	R0, L_aci_loop17
;uart_aci.c, 183 :: 		Delay_ms(20); //Handle the HW error event correctly.
0x269C	0xF64357D3  MOVW	R7, #15827
0x26A0	0xF2C0070E  MOVT	R7, #14
0x26A4	0xBF00    NOP
0x26A6	0xBF00    NOP
L_aci_loop18:
0x26A8	0x1E7F    SUBS	R7, R7, #1
0x26AA	0xD1FD    BNE	L_aci_loop18
0x26AC	0xBF00    NOP
0x26AE	0xBF00    NOP
0x26B0	0xBF00    NOP
0x26B2	0xBF00    NOP
;uart_aci.c, 184 :: 		}
0x26B4	0xE006    B	L_aci_loop20
L_aci_loop17:
;uart_aci.c, 187 :: 		lib_aci_connect(0/* in seconds : 0 means forever */, 0x0050 /* advertising interval 50ms*/);
0x26B6	0x2150    MOVS	R1, #80
0x26B8	0x2000    MOVS	R0, #0
0x26BA	0xF7FFFCBD  BL	_lib_aci_connect+0
;uart_aci.c, 188 :: 		UART1_Write_Text(" Advertising started : Tap Connect on the nRF UART app ");
0x26BE	0x487B    LDR	R0, [PC, #492]
0x26C0	0xF000FA5E  BL	_UART1_Write_Text+0
;uart_aci.c, 189 :: 		}
L_aci_loop20:
;uart_aci.c, 191 :: 		break;
0x26C4	0xE008    B	L_aci_loop14
;uart_aci.c, 192 :: 		default:
L_aci_loop21:
;uart_aci.c, 193 :: 		break;
0x26C6	0xE007    B	L_aci_loop14
;uart_aci.c, 194 :: 		}
L_aci_loop13:
; aci_evt start address is: 12 (R3)
0x26C8	0x9906    LDR	R1, [SP, #24]
0x26CA	0x7808    LDRB	R0, [R1, #0]
0x26CC	0x2802    CMP	R0, #2
0x26CE	0xD0D5    BEQ	L_aci_loop15
0x26D0	0x7808    LDRB	R0, [R1, #0]
0x26D2	0x2803    CMP	R0, #3
0x26D4	0xD0D9    BEQ	L_aci_loop16
; aci_evt end address is: 12 (R3)
0x26D6	0xE7F6    B	L_aci_loop21
L_aci_loop14:
;uart_aci.c, 196 :: 		break; //ACI Device Started Event
0x26D8	0xE168    B	L_aci_loop11
;uart_aci.c, 198 :: 		case ACI_EVT_CMD_RSP:
L_aci_loop22:
;uart_aci.c, 200 :: 		if (ACI_STATUS_SUCCESS != aci_evt->params.cmd_rsp.cmd_status)
; aci_evt start address is: 12 (R3)
0x26DA	0x1C98    ADDS	R0, R3, #2
0x26DC	0x1C40    ADDS	R0, R0, #1
0x26DE	0x7800    LDRB	R0, [R0, #0]
0x26E0	0xB340    CBZ	R0, L_aci_loop23
;uart_aci.c, 205 :: 		UART1_Write_Text("ACI Command ");
0x26E2	0x4873    LDR	R0, [PC, #460]
0x26E4	0x9301    STR	R3, [SP, #4]
0x26E6	0xF000FA4B  BL	_UART1_Write_Text+0
0x26EA	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 206 :: 		sprinti(txt,"%d",aci_evt->params.cmd_rsp.cmd_opcode);
0x26EC	0x1C98    ADDS	R0, R3, #2
0x26EE	0x7800    LDRB	R0, [R0, #0]
0x26F0	0xB2C2    UXTB	R2, R0
0x26F2	0x4970    LDR	R1, [PC, #448]
0x26F4	0x4870    LDR	R0, [PC, #448]
0x26F6	0x9301    STR	R3, [SP, #4]
0x26F8	0xB404    PUSH	(R2)
0x26FA	0xB402    PUSH	(R1)
0x26FC	0xB401    PUSH	(R0)
0x26FE	0xF7FFFCB3  BL	_sprinti+0
0x2702	0xB003    ADD	SP, SP, #12
;uart_aci.c, 207 :: 		UART1_Write_Text(txt);
0x2704	0x486C    LDR	R0, [PC, #432]
0x2706	0xF000FA3B  BL	_UART1_Write_Text+0
;uart_aci.c, 208 :: 		UART1_Write_Text("Evt Cmd respone: Status ");
0x270A	0x486C    LDR	R0, [PC, #432]
0x270C	0xF000FA38  BL	_UART1_Write_Text+0
0x2710	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 209 :: 		sprinti(txt,"%d",aci_evt->params.cmd_rsp.cmd_status);
0x2712	0x1C98    ADDS	R0, R3, #2
0x2714	0x1C40    ADDS	R0, R0, #1
0x2716	0x7800    LDRB	R0, [R0, #0]
0x2718	0xB2C2    UXTB	R2, R0
0x271A	0x4969    LDR	R1, [PC, #420]
0x271C	0x4866    LDR	R0, [PC, #408]
0x271E	0x9301    STR	R3, [SP, #4]
0x2720	0xB404    PUSH	(R2)
0x2722	0xB402    PUSH	(R1)
0x2724	0xB401    PUSH	(R0)
0x2726	0xF7FFFC9F  BL	_sprinti+0
0x272A	0xB003    ADD	SP, SP, #12
;uart_aci.c, 210 :: 		UART1_Write_Text(txt);
0x272C	0x4862    LDR	R0, [PC, #392]
0x272E	0xF000FA27  BL	_UART1_Write_Text+0
0x2732	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 211 :: 		}
L_aci_loop23:
;uart_aci.c, 212 :: 		if (ACI_CMD_GET_DEVICE_VERSION == aci_evt->params.cmd_rsp.cmd_opcode)
0x2734	0x1C98    ADDS	R0, R3, #2
0x2736	0x7800    LDRB	R0, [R0, #0]
0x2738	0x2809    CMP	R0, #9
0x273A	0xD107    BNE	L_aci_loop24
;uart_aci.c, 216 :: 		(uint8_t *)&(aci_evt->params.cmd_rsp.params.get_device_version), sizeof(aci_evt_cmd_rsp_params_get_device_version_t));
0x273C	0x1C98    ADDS	R0, R3, #2
; aci_evt end address is: 12 (R3)
0x273E	0x1C80    ADDS	R0, R0, #2
0x2740	0x2309    MOVS	R3, #9
0x2742	0x4602    MOV	R2, R0
;uart_aci.c, 215 :: 		lib_aci_set_local_data(&aci_state, PIPE_DEVICE_INFORMATION_HARDWARE_REVISION_STRING_SET,
0x2744	0x2103    MOVS	R1, #3
0x2746	0x4853    LDR	R0, [PC, #332]
;uart_aci.c, 216 :: 		(uint8_t *)&(aci_evt->params.cmd_rsp.params.get_device_version), sizeof(aci_evt_cmd_rsp_params_get_device_version_t));
0x2748	0xF7FFFAA6  BL	_lib_aci_set_local_data+0
;uart_aci.c, 217 :: 		}
L_aci_loop24:
;uart_aci.c, 218 :: 		break;
0x274C	0xE12E    B	L_aci_loop11
;uart_aci.c, 220 :: 		case ACI_EVT_CONNECTED:
L_aci_loop25:
;uart_aci.c, 221 :: 		UART1_Write_Text(" Evt Connected ");
0x274E	0x485D    LDR	R0, [PC, #372]
0x2750	0xF000FA16  BL	_UART1_Write_Text+0
;uart_aci.c, 223 :: 		timing_change_done              = false;
0x2754	0x2100    MOVS	R1, #0
0x2756	0x485C    LDR	R0, [PC, #368]
0x2758	0x7001    STRB	R1, [R0, #0]
;uart_aci.c, 224 :: 		aci_state.data_credit_available = aci_state.data_credit_total;
0x275A	0x4850    LDR	R0, [PC, #320]
0x275C	0x7801    LDRB	R1, [R0, #0]
0x275E	0x485B    LDR	R0, [PC, #364]
0x2760	0x7001    STRB	R1, [R0, #0]
;uart_aci.c, 229 :: 		lib_aci_device_version();
0x2762	0xF7FFFBA5  BL	_lib_aci_device_version+0
;uart_aci.c, 230 :: 		break;
0x2766	0xE121    B	L_aci_loop11
;uart_aci.c, 232 :: 		case ACI_EVT_PIPE_STATUS:
L_aci_loop26:
;uart_aci.c, 233 :: 		UART1_Write_Text(" Evt Pipe Status ");
0x2768	0x4859    LDR	R0, [PC, #356]
0x276A	0xF000FA09  BL	_UART1_Write_Text+0
;uart_aci.c, 234 :: 		if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_TX_TX) && (false == timing_change_done))
0x276E	0x2109    MOVS	R1, #9
0x2770	0x4848    LDR	R0, [PC, #288]
0x2772	0xF7FFFB75  BL	_lib_aci_is_pipe_available+0
0x2776	0xB1F0    CBZ	R0, L__aci_loop49
0x2778	0x4853    LDR	R0, [PC, #332]
0x277A	0x7800    LDRB	R0, [R0, #0]
0x277C	0xB9D8    CBNZ	R0, L__aci_loop48
L__aci_loop47:
;uart_aci.c, 236 :: 		char hello[]="hello android!";
0x277E	0xF10D0B08  ADD	R11, SP, #8
0x2782	0xF10B0A0F  ADD	R10, R11, #15
0x2786	0xF8DFC14C  LDR	R12, [PC, #332]
0x278A	0xF000FA23  BL	___CC2DW+0
;uart_aci.c, 237 :: 		lib_aci_change_timing_GAP_PPCP(); // change the timing on the link as specified in the nRFgo studio -> nRF8001 conf. -> GAP.
0x278E	0xF7FFFB7D  BL	_lib_aci_change_timing_GAP_PPCP+0
;uart_aci.c, 239 :: 		timing_change_done = true;
0x2792	0x2101    MOVS	R1, #1
0x2794	0x484C    LDR	R0, [PC, #304]
0x2796	0x7001    STRB	R1, [R0, #0]
;uart_aci.c, 242 :: 		ble_uart_tx((uint8_t *)&hello[0], strlen(hello));
0x2798	0xA802    ADD	R0, SP, #8
0x279A	0xF7FFFB53  BL	_strlen+0
0x279E	0xA902    ADD	R1, SP, #8
0x27A0	0x9101    STR	R1, [SP, #4]
0x27A2	0xB2C1    UXTB	R1, R0
0x27A4	0x9801    LDR	R0, [SP, #4]
0x27A6	0xF7FFFB95  BL	_ble_uart_tx+0
;uart_aci.c, 243 :: 		UART1_Write_Text(" Sending: ");
0x27AA	0x484B    LDR	R0, [PC, #300]
0x27AC	0xF000F9E8  BL	_UART1_Write_Text+0
;uart_aci.c, 244 :: 		UART1_Write_Text(hello);
0x27B0	0xA802    ADD	R0, SP, #8
0x27B2	0xF000F9E5  BL	_UART1_Write_Text+0
;uart_aci.c, 234 :: 		if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_TX_TX) && (false == timing_change_done))
L__aci_loop49:
L__aci_loop48:
;uart_aci.c, 246 :: 		break;
0x27B6	0xE0F9    B	L_aci_loop11
;uart_aci.c, 248 :: 		case ACI_EVT_TIMING:
L_aci_loop30:
;uart_aci.c, 249 :: 		UART1_Write_Text(" Evt link connection interval changed ");
; aci_evt start address is: 12 (R3)
0x27B8	0x4848    LDR	R0, [PC, #288]
0x27BA	0x9301    STR	R3, [SP, #4]
0x27BC	0xF000F9E0  BL	_UART1_Write_Text+0
0x27C0	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 252 :: 		(uint8_t *)&(aci_evt->params.timing.conn_rf_interval), /* Byte aligned */
0x27C2	0x1C98    ADDS	R0, R3, #2
; aci_evt end address is: 12 (R3)
;uart_aci.c, 253 :: 		PIPE_UART_OVER_BTLE_UART_LINK_TIMING_CURRENT_SET_MAX_SIZE);
0x27C4	0x2306    MOVS	R3, #6
;uart_aci.c, 252 :: 		(uint8_t *)&(aci_evt->params.timing.conn_rf_interval), /* Byte aligned */
0x27C6	0x4602    MOV	R2, R0
;uart_aci.c, 251 :: 		PIPE_UART_OVER_BTLE_UART_LINK_TIMING_CURRENT_SET,
0x27C8	0x210C    MOVS	R1, #12
;uart_aci.c, 250 :: 		lib_aci_set_local_data(&aci_state,
0x27CA	0x4832    LDR	R0, [PC, #200]
;uart_aci.c, 253 :: 		PIPE_UART_OVER_BTLE_UART_LINK_TIMING_CURRENT_SET_MAX_SIZE);
0x27CC	0xF7FFFA64  BL	_lib_aci_set_local_data+0
;uart_aci.c, 254 :: 		break;
0x27D0	0xE0EC    B	L_aci_loop11
;uart_aci.c, 256 :: 		case ACI_EVT_DISCONNECTED:
L_aci_loop31:
;uart_aci.c, 257 :: 		UART1_Write_Text(" Evt Disconnected/Advertising timed out ");
0x27D2	0x4843    LDR	R0, [PC, #268]
0x27D4	0xF000F9D4  BL	_UART1_Write_Text+0
;uart_aci.c, 258 :: 		lib_aci_connect(0/* in seconds  : 0 means forever */, 0x0050 /* advertising interval 50ms*/);
0x27D8	0x2150    MOVS	R1, #80
0x27DA	0x2000    MOVS	R0, #0
0x27DC	0xF7FFFC2C  BL	_lib_aci_connect+0
;uart_aci.c, 259 :: 		UART1_Write_Text(" Advertising started. Tap Connect on the nRF UART app ");
0x27E0	0x4840    LDR	R0, [PC, #256]
0x27E2	0xF000F9CD  BL	_UART1_Write_Text+0
;uart_aci.c, 260 :: 		break;
0x27E6	0xE0E1    B	L_aci_loop11
;uart_aci.c, 262 :: 		case ACI_EVT_DATA_RECEIVED:
L_aci_loop32:
;uart_aci.c, 263 :: 		if (PIPE_UART_OVER_BTLE_UART_RX_RX == aci_evt->params.data_received.rx_data.pipe_number)
; aci_evt start address is: 12 (R3)
0x27E8	0x1C98    ADDS	R0, R3, #2
0x27EA	0x7800    LDRB	R0, [R0, #0]
0x27EC	0x2808    CMP	R0, #8
0x27EE	0xD108    BNE	L_aci_loop33
;uart_aci.c, 266 :: 		ble_uart_rx(&aci_evt->params.data_received.rx_data.aci_data[0], aci_evt->len - 2);
0x27F0	0x7818    LDRB	R0, [R3, #0]
0x27F2	0x1E81    SUBS	R1, R0, #2
0x27F4	0x1C98    ADDS	R0, R3, #2
0x27F6	0x1C40    ADDS	R0, R0, #1
0x27F8	0x9301    STR	R3, [SP, #4]
0x27FA	0xB2C9    UXTB	R1, R1
0x27FC	0xF7FFFA2E  BL	_ble_uart_rx+0
0x2800	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 267 :: 		}
L_aci_loop33:
;uart_aci.c, 268 :: 		if (PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_RX == aci_evt->params.data_received.rx_data.pipe_number)
0x2802	0x1C98    ADDS	R0, R3, #2
0x2804	0x7800    LDRB	R0, [R0, #0]
0x2806	0x280B    CMP	R0, #11
0x2808	0xD106    BNE	L_aci_loop34
;uart_aci.c, 270 :: 		uart_process_control_point_rx(&aci_evt->params.data_received.rx_data.aci_data[0], aci_evt->len - 2); //Subtract for Opcode and Pipe number
0x280A	0x7818    LDRB	R0, [R3, #0]
0x280C	0x1E81    SUBS	R1, R0, #2
0x280E	0x1C98    ADDS	R0, R3, #2
; aci_evt end address is: 12 (R3)
0x2810	0x1C40    ADDS	R0, R0, #1
0x2812	0xB2C9    UXTB	R1, R1
0x2814	0xF7FFFACA  BL	_uart_process_control_point_rx+0
;uart_aci.c, 271 :: 		}
L_aci_loop34:
;uart_aci.c, 272 :: 		break;
0x2818	0xE0C8    B	L_aci_loop11
;uart_aci.c, 274 :: 		case ACI_EVT_DATA_CREDIT:
L_aci_loop35:
;uart_aci.c, 275 :: 		aci_state.data_credit_available = aci_state.data_credit_available + aci_evt->params.data_credit.credit;
; aci_evt start address is: 12 (R3)
0x281A	0x1C98    ADDS	R0, R3, #2
; aci_evt end address is: 12 (R3)
0x281C	0x7802    LDRB	R2, [R0, #0]
0x281E	0x492B    LDR	R1, [PC, #172]
0x2820	0x7808    LDRB	R0, [R1, #0]
0x2822	0x1880    ADDS	R0, R0, R2
0x2824	0x7008    STRB	R0, [R1, #0]
;uart_aci.c, 276 :: 		break;
0x2826	0xE0C1    B	L_aci_loop11
;uart_aci.c, 278 :: 		case ACI_EVT_PIPE_ERROR:
L_aci_loop36:
;uart_aci.c, 280 :: 		UART1_Write_Text(" ACI Evt Pipe Error: Pipe #: ");
; aci_evt start address is: 12 (R3)
0x2828	0x482F    LDR	R0, [PC, #188]
0x282A	0x9301    STR	R3, [SP, #4]
0x282C	0xF000F9A8  BL	_UART1_Write_Text+0
0x2830	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 281 :: 		sprinti(txt,"%d",aci_evt->params.pipe_error.pipe_number);
0x2832	0x1C98    ADDS	R0, R3, #2
0x2834	0x7800    LDRB	R0, [R0, #0]
0x2836	0xB2C2    UXTB	R2, R0
0x2838	0x492C    LDR	R1, [PC, #176]
0x283A	0x481F    LDR	R0, [PC, #124]
0x283C	0x9301    STR	R3, [SP, #4]
0x283E	0xB404    PUSH	(R2)
0x2840	0xB402    PUSH	(R1)
0x2842	0xB401    PUSH	(R0)
0x2844	0xF7FFFC10  BL	_sprinti+0
0x2848	0xB003    ADD	SP, SP, #12
;uart_aci.c, 282 :: 		UART1_Write_Text(txt);
0x284A	0x481B    LDR	R0, [PC, #108]
0x284C	0xF000F998  BL	_UART1_Write_Text+0
;uart_aci.c, 283 :: 		UART1_Write_Text("  Pipe Error Code: 0x");
0x2850	0x4827    LDR	R0, [PC, #156]
0x2852	0xF000F995  BL	_UART1_Write_Text+0
0x2856	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 284 :: 		sprinti(txt,"%d",aci_evt->params.pipe_error.error_code);
0x2858	0x1C98    ADDS	R0, R3, #2
0x285A	0x1C40    ADDS	R0, R0, #1
0x285C	0x7800    LDRB	R0, [R0, #0]
0x285E	0xB2C2    UXTB	R2, R0
0x2860	0x4924    LDR	R1, [PC, #144]
0x2862	0x4815    LDR	R0, [PC, #84]
0x2864	0x9301    STR	R3, [SP, #4]
0x2866	0xB404    PUSH	(R2)
0x2868	0xB402    PUSH	(R1)
0x286A	0xB401    PUSH	(R0)
0x286C	0xF7FFFBFC  BL	_sprinti+0
0x2870	0xB003    ADD	SP, SP, #12
;uart_aci.c, 285 :: 		UART1_Write_Text(txt);
0x2872	0x4811    LDR	R0, [PC, #68]
0x2874	0xF000F984  BL	_UART1_Write_Text+0
0x2878	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 290 :: 		if (ACI_STATUS_ERROR_PEER_ATT_ERROR != aci_evt->params.pipe_error.error_code)
0x287A	0x1C98    ADDS	R0, R3, #2
; aci_evt end address is: 12 (R3)
0x287C	0x1C40    ADDS	R0, R0, #1
0x287E	0x7800    LDRB	R0, [R0, #0]
0x2880	0x2892    CMP	R0, #146
0x2882	0xD003    BEQ	L_aci_loop37
;uart_aci.c, 292 :: 		aci_state.data_credit_available++;
0x2884	0x4911    LDR	R1, [PC, #68]
0x2886	0x7808    LDRB	R0, [R1, #0]
0x2888	0x1C40    ADDS	R0, R0, #1
0x288A	0x7008    STRB	R0, [R1, #0]
;uart_aci.c, 293 :: 		}
L_aci_loop37:
;uart_aci.c, 294 :: 		break;
0x288C	0xE08E    B	L_aci_loop11
0x288E	0xE033    B	#102
0x2890	0x04902000  	uart_aci_aci_data+0
0x2894	0x03342000  	_aci_state+0
0x2898	0x04912000  	uart_aci_aci_data+1
0x289C	0x03512000  	_aci_state+29
0x28A0	0x00E12000  	?lstr4_uart_aci+0
0x28A4	0x02DF2000  	aci_loop_setup_required_L0+0
0x28A8	0x00FF2000  	?lstr5_uart_aci+0
0x28AC	0x011D2000  	?lstr6_uart_aci+0
0x28B0	0x01552000  	?lstr7_uart_aci+0
0x28B4	0x3BD00000  	?lstr_8_uart_aci+0
0x28B8	0x04B22000  	_txt+0
0x28BC	0x01622000  	?lstr9_uart_aci+0
0x28C0	0x264D0000  	?lstr_10_uart_aci+0
0x28C4	0x017B2000  	?lstr11_uart_aci+0
0x28C8	0x018B2000  	uart_aci_timing_change_done+0
0x28CC	0x03532000  	_aci_state+31
0x28D0	0x018C2000  	?lstr12_uart_aci+0
0x28D4	0x3B930000  	?ICSaci_loop_hello_L3+0
0x28D8	0x019E2000  	?lstr13_uart_aci+0
0x28DC	0x01A92000  	?lstr14_uart_aci+0
0x28E0	0x01D02000  	?lstr15_uart_aci+0
0x28E4	0x01F92000  	?lstr16_uart_aci+0
0x28E8	0x02302000  	?lstr17_uart_aci+0
0x28EC	0x264A0000  	?lstr_18_uart_aci+0
0x28F0	0x024E2000  	?lstr19_uart_aci+0
0x28F4	0x3BD30000  	?lstr_20_uart_aci+0
;uart_aci.c, 296 :: 		case ACI_EVT_HW_ERROR:
L_aci_loop38:
;uart_aci.c, 297 :: 		UART1_Write_Text(" HW error: ");
; aci_evt start address is: 12 (R3)
0x28F8	0x4834    LDR	R0, [PC, #208]
0x28FA	0x9301    STR	R3, [SP, #4]
0x28FC	0xF000F940  BL	_UART1_Write_Text+0
0x2900	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 298 :: 		sprinti(txt,"%d",aci_evt->params.hw_error.line_num);
0x2902	0x1C98    ADDS	R0, R3, #2
0x2904	0x8800    LDRH	R0, [R0, #0]
0x2906	0xB282    UXTH	R2, R0
0x2908	0x4931    LDR	R1, [PC, #196]
0x290A	0x4832    LDR	R0, [PC, #200]
0x290C	0x9301    STR	R3, [SP, #4]
0x290E	0xB404    PUSH	(R2)
0x2910	0xB402    PUSH	(R1)
0x2912	0xB401    PUSH	(R0)
0x2914	0xF7FFFBA8  BL	_sprinti+0
0x2918	0xB003    ADD	SP, SP, #12
;uart_aci.c, 299 :: 		UART1_Write_Text(txt);
0x291A	0x482E    LDR	R0, [PC, #184]
0x291C	0xF000F930  BL	_UART1_Write_Text+0
0x2920	0x9B01    LDR	R3, [SP, #4]
;uart_aci.c, 301 :: 		for(counter = 0; counter <= (aci_evt->len - 3); counter++)
; counter start address is: 16 (R4)
0x2922	0x2400    MOVS	R4, #0
; aci_evt end address is: 12 (R3)
; counter end address is: 16 (R4)
0x2924	0x461D    MOV	R5, R3
L_aci_loop39:
; counter start address is: 16 (R4)
; aci_evt start address is: 20 (R5)
0x2926	0x7828    LDRB	R0, [R5, #0]
0x2928	0x1EC0    SUBS	R0, R0, #3
0x292A	0xB200    SXTH	R0, R0
0x292C	0x4284    CMP	R4, R0
0x292E	0xDC08    BGT	L_aci_loop40
;uart_aci.c, 303 :: 		PRINT(aci_evt->params.hw_error.file_name[counter]); //uint8_t file_name[20];
0x2930	0x1CA8    ADDS	R0, R5, #2
0x2932	0x1C80    ADDS	R0, R0, #2
0x2934	0x1900    ADDS	R0, R0, R4
0x2936	0x7800    LDRB	R0, [R0, #0]
0x2938	0xF000F930  BL	_UART1_Write+0
;uart_aci.c, 301 :: 		for(counter = 0; counter <= (aci_evt->len - 3); counter++)
0x293C	0x1C64    ADDS	R4, R4, #1
0x293E	0xB2E4    UXTB	R4, R4
;uart_aci.c, 304 :: 		}
; aci_evt end address is: 20 (R5)
; counter end address is: 16 (R4)
0x2940	0xE7F1    B	L_aci_loop39
L_aci_loop40:
;uart_aci.c, 305 :: 		UART1_Write_Text("\n");
0x2942	0x4825    LDR	R0, [PC, #148]
0x2944	0xF000F91C  BL	_UART1_Write_Text+0
;uart_aci.c, 306 :: 		lib_aci_connect(0/* in seconds, 0 means forever */, 0x0050 /* advertising interval 50ms*/);
0x2948	0x2150    MOVS	R1, #80
0x294A	0x2000    MOVS	R0, #0
0x294C	0xF7FFFB74  BL	_lib_aci_connect+0
;uart_aci.c, 307 :: 		UART1_Write_Text(" Advertising started. Tap Connect on the nRF UART app ");
0x2950	0x4822    LDR	R0, [PC, #136]
0x2952	0xF000F915  BL	_UART1_Write_Text+0
;uart_aci.c, 308 :: 		break;
0x2956	0xE029    B	L_aci_loop11
;uart_aci.c, 309 :: 		default:
L_aci_loop42:
;uart_aci.c, 310 :: 		break;
0x2958	0xE028    B	L_aci_loop11
;uart_aci.c, 311 :: 		}
L_aci_loop10:
; aci_evt start address is: 12 (R3)
0x295A	0x9907    LDR	R1, [SP, #28]
0x295C	0x7808    LDRB	R0, [R1, #0]
0x295E	0x2881    CMP	R0, #129
0x2960	0xF43FAE84  BEQ	L_aci_loop12
0x2964	0x7808    LDRB	R0, [R1, #0]
0x2966	0x2884    CMP	R0, #132
0x2968	0xF43FAEB7  BEQ	L_aci_loop22
0x296C	0x7808    LDRB	R0, [R1, #0]
0x296E	0x2885    CMP	R0, #133
0x2970	0xF43FAEED  BEQ	L_aci_loop25
0x2974	0x7808    LDRB	R0, [R1, #0]
0x2976	0x2888    CMP	R0, #136
0x2978	0xF43FAEF6  BEQ	L_aci_loop26
0x297C	0x7808    LDRB	R0, [R1, #0]
0x297E	0x2889    CMP	R0, #137
0x2980	0xF43FAF1A  BEQ	L_aci_loop30
0x2984	0x7808    LDRB	R0, [R1, #0]
0x2986	0x2886    CMP	R0, #134
0x2988	0xF43FAF23  BEQ	L_aci_loop31
0x298C	0x7808    LDRB	R0, [R1, #0]
0x298E	0x288C    CMP	R0, #140
0x2990	0xF43FAF2A  BEQ	L_aci_loop32
0x2994	0x7808    LDRB	R0, [R1, #0]
0x2996	0x288A    CMP	R0, #138
0x2998	0xF43FAF3F  BEQ	L_aci_loop35
0x299C	0x7808    LDRB	R0, [R1, #0]
0x299E	0x288D    CMP	R0, #141
0x29A0	0xF43FAF42  BEQ	L_aci_loop36
0x29A4	0x7808    LDRB	R0, [R1, #0]
0x29A6	0x2883    CMP	R0, #131
0x29A8	0xD0A6    BEQ	L_aci_loop38
; aci_evt end address is: 12 (R3)
0x29AA	0xE7D5    B	L_aci_loop42
L_aci_loop11:
;uart_aci.c, 312 :: 		}
0x29AC	0xE7FF    B	L_aci_loop43
L_aci_loop9:
;uart_aci.c, 319 :: 		}
L_aci_loop43:
;uart_aci.c, 325 :: 		if(setup_required)
0x29AE	0x480C    LDR	R0, [PC, #48]
0x29B0	0x7800    LDRB	R0, [R0, #0]
0x29B2	0xB130    CBZ	R0, L_aci_loop44
;uart_aci.c, 327 :: 		if (SETUP_SUCCESS == do_aci_setup(&aci_state))
0x29B4	0x480B    LDR	R0, [PC, #44]
0x29B6	0xF7FFF99D  BL	_do_aci_setup+0
0x29BA	0xB910    CBNZ	R0, L_aci_loop45
;uart_aci.c, 329 :: 		setup_required = false;
0x29BC	0x2100    MOVS	R1, #0
0x29BE	0x4808    LDR	R0, [PC, #32]
0x29C0	0x7001    STRB	R1, [R0, #0]
;uart_aci.c, 330 :: 		}
L_aci_loop45:
;uart_aci.c, 331 :: 		}
L_aci_loop44:
;uart_aci.c, 332 :: 		}
L_end_aci_loop:
0x29C2	0xF8DDE000  LDR	LR, [SP, #0]
0x29C6	0xB008    ADD	SP, SP, #32
0x29C8	0x4770    BX	LR
0x29CA	0xBF00    NOP
0x29CC	0x02642000  	?lstr21_uart_aci+0
0x29D0	0x3BD90000  	?lstr_22_uart_aci+0
0x29D4	0x04B22000  	_txt+0
0x29D8	0x02702000  	?lstr23_uart_aci+0
0x29DC	0x02722000  	?lstr24_uart_aci+0
0x29E0	0x02DF2000  	aci_loop_setup_required_L0+0
0x29E4	0x03342000  	_aci_state+0
; end of _aci_loop
_lib_aci_connect:
;lib_aci.c, 315 :: 		bool lib_aci_connect(uint16_t run_timeout, uint16_t adv_interval)
; adv_interval start address is: 4 (R1)
; run_timeout start address is: 0 (R0)
0x2038	0xB082    SUB	SP, SP, #8
0x203A	0xF8CDE000  STR	LR, [SP, #0]
; adv_interval end address is: 4 (R1)
; run_timeout end address is: 0 (R0)
; run_timeout start address is: 0 (R0)
; adv_interval start address is: 4 (R1)
;lib_aci.c, 318 :: 		aci_cmd_params_connect.timeout      = run_timeout;
0x203E	0xF8AD0004  STRH	R0, [SP, #4]
; run_timeout end address is: 0 (R0)
;lib_aci.c, 319 :: 		aci_cmd_params_connect.adv_interval = adv_interval;
0x2042	0xF8AD1006  STRH	R1, [SP, #6]
; adv_interval end address is: 4 (R1)
;lib_aci.c, 320 :: 		acil_encode_cmd_connect(&(msg_to_send.buffer[0]), &aci_cmd_params_connect);
0x2046	0xAA01    ADD	R2, SP, #4
0x2048	0x4611    MOV	R1, R2
0x204A	0x4805    LDR	R0, [PC, #20]
0x204C	0xF7FEFF4C  BL	_acil_encode_cmd_connect+0
;lib_aci.c, 321 :: 		return hal_aci_tl_send(&msg_to_send);
0x2050	0x4804    LDR	R0, [PC, #16]
0x2052	0xF7FEFBC9  BL	_hal_aci_tl_send+0
;lib_aci.c, 322 :: 		}
L_end_lib_aci_connect:
0x2056	0xF8DDE000  LDR	LR, [SP, #0]
0x205A	0xB002    ADD	SP, SP, #8
0x205C	0x4770    BX	LR
0x205E	0xBF00    NOP
0x2060	0x02E22000  	_msg_to_send+1
0x2064	0x02E12000  	_msg_to_send+0
; end of _lib_aci_connect
_acil_encode_cmd_connect:
;acilib.c, 72 :: 		void acil_encode_cmd_connect(uint8_t *buffer, aci_cmd_params_connect_t *p_aci_cmd_params_connect)
; p_aci_cmd_params_connect start address is: 4 (R1)
; buffer start address is: 0 (R0)
; p_aci_cmd_params_connect end address is: 4 (R1)
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
; p_aci_cmd_params_connect start address is: 4 (R1)
;acilib.c, 74 :: 		*(buffer + OFFSET_ACI_CMD_T_LEN) = MSG_CONNECT_LEN;
0x0EE8	0x2205    MOVS	R2, #5
0x0EEA	0x7002    STRB	R2, [R0, #0]
;acilib.c, 75 :: 		*(buffer + OFFSET_ACI_CMD_T_CMD_OPCODE) = ACI_CMD_CONNECT;
0x0EEC	0x1C43    ADDS	R3, R0, #1
0x0EEE	0x220F    MOVS	R2, #15
0x0EF0	0x701A    STRB	R2, [R3, #0]
;acilib.c, 76 :: 		*(buffer + OFFSET_ACI_CMD_T_CONNECT + OFFSET_ACI_CMD_PARAMS_CONNECT_T_TIMEOUT_MSB) = (uint8_t)(p_aci_cmd_params_connect->timeout >> 8);
0x0EF2	0x1C82    ADDS	R2, R0, #2
0x0EF4	0x1C53    ADDS	R3, R2, #1
0x0EF6	0x880A    LDRH	R2, [R1, #0]
0x0EF8	0x0A12    LSRS	R2, R2, #8
0x0EFA	0xB2D2    UXTB	R2, R2
0x0EFC	0x701A    STRB	R2, [R3, #0]
;acilib.c, 77 :: 		*(buffer + OFFSET_ACI_CMD_T_CONNECT + OFFSET_ACI_CMD_PARAMS_CONNECT_T_TIMEOUT_LSB) = (uint8_t)(p_aci_cmd_params_connect->timeout);
0x0EFE	0x1C83    ADDS	R3, R0, #2
0x0F00	0x880A    LDRH	R2, [R1, #0]
0x0F02	0xB2D2    UXTB	R2, R2
0x0F04	0x701A    STRB	R2, [R3, #0]
;acilib.c, 78 :: 		*(buffer + OFFSET_ACI_CMD_T_CONNECT + OFFSET_ACI_CMD_PARAMS_CONNECT_T_ADV_INTERVAL_MSB) = (uint8_t)(p_aci_cmd_params_connect->adv_interval >> 8);
0x0F06	0x1C82    ADDS	R2, R0, #2
0x0F08	0x1CD3    ADDS	R3, R2, #3
0x0F0A	0x1C8A    ADDS	R2, R1, #2
0x0F0C	0x8812    LDRH	R2, [R2, #0]
0x0F0E	0x0A12    LSRS	R2, R2, #8
0x0F10	0xB2D2    UXTB	R2, R2
0x0F12	0x701A    STRB	R2, [R3, #0]
;acilib.c, 79 :: 		*(buffer + OFFSET_ACI_CMD_T_CONNECT + OFFSET_ACI_CMD_PARAMS_CONNECT_T_ADV_INTERVAL_LSB) = (uint8_t)(p_aci_cmd_params_connect->adv_interval);
0x0F14	0x1C82    ADDS	R2, R0, #2
; buffer end address is: 0 (R0)
0x0F16	0x1C93    ADDS	R3, R2, #2
0x0F18	0x1C8A    ADDS	R2, R1, #2
; p_aci_cmd_params_connect end address is: 4 (R1)
0x0F1A	0x8812    LDRH	R2, [R2, #0]
0x0F1C	0xB2D2    UXTB	R2, R2
0x0F1E	0x701A    STRB	R2, [R3, #0]
;acilib.c, 80 :: 		}
L_end_acil_encode_cmd_connect:
0x0F20	0x4770    BX	LR
; end of _acil_encode_cmd_connect
_sprinti:
;__Lib_Sprinti.c, 727 :: 		
0x2068	0xB083    SUB	SP, SP, #12
0x206A	0xF8CDE000  STR	LR, [SP, #0]
; wh start address is: 8 (R2)
0x206E	0x9A03    LDR	R2, [SP, #12]
0x2070	0x9804    LDR	R0, [SP, #16]
0x2072	0x9004    STR	R0, [SP, #16]
;__Lib_Sprinti.c, 732 :: 		
0x2074	0xA902    ADD	R1, SP, #8
0x2076	0xA804    ADD	R0, SP, #16
0x2078	0x1D00    ADDS	R0, R0, #4
0x207A	0x6008    STR	R0, [R1, #0]
;__Lib_Sprinti.c, 733 :: 		
0x207C	0x9201    STR	R2, [SP, #4]
0x207E	0x4610    MOV	R0, R2
0x2080	0x460A    MOV	R2, R1
0x2082	0x9904    LDR	R1, [SP, #16]
0x2084	0xF7FEFF4E  BL	__Lib_Sprinti__doprnti+0
0x2088	0x9A01    LDR	R2, [SP, #4]
; cnt start address is: 12 (R3)
0x208A	0xB203    SXTH	R3, R0
;__Lib_Sprinti.c, 734 :: 		
0x208C	0x1811    ADDS	R1, R2, R0
; wh end address is: 8 (R2)
0x208E	0x2000    MOVS	R0, #0
0x2090	0x7008    STRB	R0, [R1, #0]
;__Lib_Sprinti.c, 735 :: 		
0x2092	0xB218    SXTH	R0, R3
; cnt end address is: 12 (R3)
;__Lib_Sprinti.c, 736 :: 		
L_end_sprinti:
0x2094	0xF8DDE000  LDR	LR, [SP, #0]
0x2098	0xB003    ADD	SP, SP, #12
0x209A	0x4770    BX	LR
; end of _sprinti
__Lib_Sprinti__doprnti:
;__Lib_Sprinti.c, 186 :: 		
; ap start address is: 8 (R2)
; f start address is: 4 (R1)
; pb start address is: 0 (R0)
0x0F24	0xB087    SUB	SP, SP, #28
0x0F26	0xF8CDE000  STR	LR, [SP, #0]
; ap end address is: 8 (R2)
; f end address is: 4 (R1)
; pb end address is: 0 (R0)
; pb start address is: 0 (R0)
; f start address is: 4 (R1)
; ap start address is: 8 (R2)
;__Lib_Sprinti.c, 192 :: 		
; ccnt start address is: 24 (R6)
0x0F2A	0xF2400600  MOVW	R6, #0
0x0F2E	0xB236    SXTH	R6, R6
; ap end address is: 8 (R2)
; pb end address is: 0 (R0)
; ccnt end address is: 24 (R6)
; f end address is: 4 (R1)
0x0F30	0x4615    MOV	R5, R2
0x0F32	0x4602    MOV	R2, R0
0x0F34	0x4608    MOV	R0, R1
;__Lib_Sprinti.c, 222 :: 		
L___Lib_Sprinti__doprnti0:
; f start address is: 28 (R7)
; ap start address is: 20 (R5)
; ccnt start address is: 24 (R6)
; ap start address is: 20 (R5)
; ap end address is: 20 (R5)
; f start address is: 0 (R0)
; pb start address is: 8 (R2)
0x0F36	0x4604    MOV	R4, R0
0x0F38	0x1C47    ADDS	R7, R0, #1
; f end address is: 0 (R0)
; f start address is: 28 (R7)
; f end address is: 28 (R7)
0x0F3A	0x7823    LDRB	R3, [R4, #0]
0x0F3C	0xF88D3010  STRB	R3, [SP, #16]
0x0F40	0x2B00    CMP	R3, #0
0x0F42	0xF0008470  BEQ	L___Lib_Sprinti__doprnti1
; ap end address is: 20 (R5)
; f end address is: 28 (R7)
;__Lib_Sprinti.c, 223 :: 		
; f start address is: 28 (R7)
; ap start address is: 20 (R5)
0x0F46	0xF89D3010  LDRB	R3, [SP, #16]
0x0F4A	0x2B25    CMP	R3, #37
0x0F4C	0xD007    BEQ	L___Lib_Sprinti__doprnti2
;__Lib_Sprinti.c, 224 :: 		
0x0F4E	0xF89D3010  LDRB	R3, [SP, #16]
0x0F52	0x7013    STRB	R3, [R2, #0]
0x0F54	0x1C52    ADDS	R2, R2, #1
0x0F56	0x1C76    ADDS	R6, R6, #1
0x0F58	0xB236    SXTH	R6, R6
;__Lib_Sprinti.c, 225 :: 		
0x0F5A	0x4638    MOV	R0, R7
0x0F5C	0xE7EB    B	L___Lib_Sprinti__doprnti0
;__Lib_Sprinti.c, 226 :: 		
L___Lib_Sprinti__doprnti2:
;__Lib_Sprinti.c, 227 :: 		
; width start address is: 16 (R4)
0x0F5E	0x2400    MOVS	R4, #0
0x0F60	0xB224    SXTH	R4, R4
;__Lib_Sprinti.c, 228 :: 		
; flag start address is: 0 (R0)
0x0F62	0x2000    MOVS	R0, #0
; f end address is: 28 (R7)
; flag end address is: 0 (R0)
;__Lib_Sprinti.c, 229 :: 		
L___Lib_Sprinti__doprnti3:
;__Lib_Sprinti.c, 230 :: 		
; flag start address is: 0 (R0)
; width start address is: 16 (R4)
; width end address is: 16 (R4)
; f start address is: 28 (R7)
; pb start address is: 8 (R2)
; pb end address is: 8 (R2)
; ap start address is: 20 (R5)
; ap end address is: 20 (R5)
; ccnt start address is: 24 (R6)
; ccnt end address is: 24 (R6)
0x0F64	0xE01E    B	L___Lib_Sprinti__doprnti6
; width end address is: 16 (R4)
; ccnt end address is: 24 (R6)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
;__Lib_Sprinti.c, 231 :: 		
L___Lib_Sprinti__doprnti8:
;__Lib_Sprinti.c, 232 :: 		
; pb start address is: 8 (R2)
; ap start address is: 20 (R5)
; ccnt start address is: 24 (R6)
; width start address is: 16 (R4)
0x0F66	0xF0400008  ORR	R0, R0, #8
0x0F6A	0xB280    UXTH	R0, R0
;__Lib_Sprinti.c, 233 :: 		
0x0F6C	0x1C7B    ADDS	R3, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
0x0F6E	0x4619    MOV	R1, R3
;__Lib_Sprinti.c, 234 :: 		
; f end address is: 4 (R1)
0x0F70	0x460F    MOV	R7, R1
0x0F72	0xE027    B	L___Lib_Sprinti__doprnti5
;__Lib_Sprinti.c, 236 :: 		
L___Lib_Sprinti__doprnti9:
;__Lib_Sprinti.c, 237 :: 		
; f start address is: 28 (R7)
0x0F74	0xF0400001  ORR	R0, R0, #1
0x0F78	0xB280    UXTH	R0, R0
;__Lib_Sprinti.c, 238 :: 		
0x0F7A	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
;__Lib_Sprinti.c, 239 :: 		
; f end address is: 4 (R1)
0x0F7C	0x460F    MOV	R7, R1
0x0F7E	0xE021    B	L___Lib_Sprinti__doprnti5
;__Lib_Sprinti.c, 241 :: 		
L___Lib_Sprinti__doprnti10:
;__Lib_Sprinti.c, 242 :: 		
; f start address is: 28 (R7)
0x0F80	0xF0400002  ORR	R0, R0, #2
0x0F84	0xB280    UXTH	R0, R0
;__Lib_Sprinti.c, 243 :: 		
0x0F86	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
;__Lib_Sprinti.c, 244 :: 		
; f end address is: 4 (R1)
0x0F88	0x460F    MOV	R7, R1
0x0F8A	0xE01B    B	L___Lib_Sprinti__doprnti5
;__Lib_Sprinti.c, 246 :: 		
L___Lib_Sprinti__doprnti11:
;__Lib_Sprinti.c, 247 :: 		
; f start address is: 28 (R7)
0x0F8C	0xF4406000  ORR	R0, R0, #2048
0x0F90	0xB280    UXTH	R0, R0
;__Lib_Sprinti.c, 248 :: 		
0x0F92	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
;__Lib_Sprinti.c, 249 :: 		
; f end address is: 4 (R1)
0x0F94	0x460F    MOV	R7, R1
0x0F96	0xE015    B	L___Lib_Sprinti__doprnti5
;__Lib_Sprinti.c, 251 :: 		
L___Lib_Sprinti__doprnti12:
;__Lib_Sprinti.c, 252 :: 		
; f start address is: 28 (R7)
0x0F98	0xF0400004  ORR	R0, R0, #4
0x0F9C	0xB280    UXTH	R0, R0
;__Lib_Sprinti.c, 253 :: 		
0x0F9E	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
;__Lib_Sprinti.c, 254 :: 		
; f end address is: 4 (R1)
0x0FA0	0x460F    MOV	R7, R1
0x0FA2	0xE00F    B	L___Lib_Sprinti__doprnti5
;__Lib_Sprinti.c, 255 :: 		
L___Lib_Sprinti__doprnti6:
; f start address is: 28 (R7)
0x0FA4	0x783B    LDRB	R3, [R7, #0]
0x0FA6	0x2B2D    CMP	R3, #45
0x0FA8	0xD0DD    BEQ	L___Lib_Sprinti__doprnti8
0x0FAA	0x783B    LDRB	R3, [R7, #0]
0x0FAC	0x2B20    CMP	R3, #32
0x0FAE	0xD0E1    BEQ	L___Lib_Sprinti__doprnti9
0x0FB0	0x783B    LDRB	R3, [R7, #0]
0x0FB2	0x2B2B    CMP	R3, #43
0x0FB4	0xD0E4    BEQ	L___Lib_Sprinti__doprnti10
0x0FB6	0x783B    LDRB	R3, [R7, #0]
0x0FB8	0x2B23    CMP	R3, #35
0x0FBA	0xD0E7    BEQ	L___Lib_Sprinti__doprnti11
0x0FBC	0x783B    LDRB	R3, [R7, #0]
0x0FBE	0x2B30    CMP	R3, #48
0x0FC0	0xD0EA    BEQ	L___Lib_Sprinti__doprnti12
;__Lib_Sprinti.c, 256 :: 		
0x0FC2	0xE000    B	L___Lib_Sprinti__doprnti4
; f end address is: 28 (R7)
; flag end address is: 0 (R0)
;__Lib_Sprinti.c, 257 :: 		
L___Lib_Sprinti__doprnti5:
; f start address is: 28 (R7)
; flag start address is: 0 (R0)
0x0FC4	0xE7CE    B	L___Lib_Sprinti__doprnti3
L___Lib_Sprinti__doprnti4:
;__Lib_Sprinti.c, 258 :: 		
0x0FC6	0xF0000302  AND	R3, R0, #2
0x0FCA	0xB29B    UXTH	R3, R3
0x0FCC	0xB133    CBZ	R3, L___Lib_Sprinti__doprnti164
;__Lib_Sprinti.c, 259 :: 		
0x0FCE	0xF64F73FE  MOVW	R3, #65534
0x0FD2	0x4018    ANDS	R0, R3
0x0FD4	0xB280    UXTH	R0, R0
; flag end address is: 0 (R0)
0x0FD6	0xFA1FF880  UXTH	R8, R0
0x0FDA	0xE001    B	L___Lib_Sprinti__doprnti13
L___Lib_Sprinti__doprnti164:
;__Lib_Sprinti.c, 258 :: 		
0x0FDC	0xFA1FF880  UXTH	R8, R0
;__Lib_Sprinti.c, 259 :: 		
L___Lib_Sprinti__doprnti13:
;__Lib_Sprinti.c, 260 :: 		
; flag start address is: 32 (R8)
0x0FE0	0xF0080308  AND	R3, R8, #8
0x0FE4	0xB29B    UXTH	R3, R3
0x0FE6	0xB133    CBZ	R3, L___Lib_Sprinti__doprnti165
;__Lib_Sprinti.c, 261 :: 		
0x0FE8	0xF64F73FB  MOVW	R3, #65531
0x0FEC	0xEA080803  AND	R8, R8, R3, LSL #0
0x0FF0	0xFA1FF888  UXTH	R8, R8
; flag end address is: 32 (R8)
0x0FF4	0xE7FF    B	L___Lib_Sprinti__doprnti14
L___Lib_Sprinti__doprnti165:
;__Lib_Sprinti.c, 260 :: 		
;__Lib_Sprinti.c, 261 :: 		
L___Lib_Sprinti__doprnti14:
;__Lib_Sprinti.c, 262 :: 		
; flag start address is: 32 (R8)
0x0FF6	0x783B    LDRB	R3, [R7, #0]
0x0FF8	0xB2D8    UXTB	R0, R3
0x0FFA	0xF7FFFC93  BL	_isdigit+0
0x0FFE	0xB308    CBZ	R0, L___Lib_Sprinti__doprnti15
; width end address is: 16 (R4)
;__Lib_Sprinti.c, 263 :: 		
; width start address is: 0 (R0)
0x1000	0x2000    MOVS	R0, #0
0x1002	0xB200    SXTH	R0, R0
; width end address is: 0 (R0)
; f end address is: 28 (R7)
0x1004	0x4639    MOV	R1, R7
;__Lib_Sprinti.c, 264 :: 		
0x1006	0xE001    B	L___Lib_Sprinti__doprnti16
L___Lib_Sprinti__doprnti166:
;__Lib_Sprinti.c, 266 :: 		
0x1008	0xB238    SXTH	R0, R7
0x100A	0x4649    MOV	R1, R9
;__Lib_Sprinti.c, 264 :: 		
L___Lib_Sprinti__doprnti16:
;__Lib_Sprinti.c, 265 :: 		
; width start address is: 28 (R7)
; f start address is: 36 (R9)
; width start address is: 0 (R0)
; flag start address is: 32 (R8)
; flag end address is: 32 (R8)
; ccnt start address is: 24 (R6)
; ccnt end address is: 24 (R6)
; ap start address is: 20 (R5)
; ap end address is: 20 (R5)
; pb start address is: 8 (R2)
; pb end address is: 8 (R2)
; f start address is: 4 (R1)
0x100C	0x230A    MOVS	R3, #10
0x100E	0xB21B    SXTH	R3, R3
0x1010	0xFB00F703  MUL	R7, R0, R3
0x1014	0xB23F    SXTH	R7, R7
; width end address is: 0 (R0)
0x1016	0x780B    LDRB	R3, [R1, #0]
0x1018	0x18FF    ADDS	R7, R7, R3
0x101A	0xB23F    SXTH	R7, R7
0x101C	0x3F30    SUBS	R7, #48
0x101E	0xB23F    SXTH	R7, R7
; width start address is: 28 (R7)
; width end address is: 28 (R7)
0x1020	0x1C4B    ADDS	R3, R1, #1
; f end address is: 4 (R1)
; f start address is: 36 (R9)
0x1022	0x4699    MOV	R9, R3
; f end address is: 36 (R9)
;__Lib_Sprinti.c, 266 :: 		
0x1024	0x781B    LDRB	R3, [R3, #0]
0x1026	0xB2D8    UXTB	R0, R3
0x1028	0xF7FFFC7C  BL	_isdigit+0
0x102C	0x2800    CMP	R0, #0
0x102E	0xD1EB    BNE	L___Lib_Sprinti__doprnti166
; f end address is: 36 (R9)
; flag end address is: 32 (R8)
; width end address is: 28 (R7)
; ccnt end address is: 24 (R6)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
;__Lib_Sprinti.c, 267 :: 		
; pb start address is: 8 (R2)
; ap start address is: 20 (R5)
; ccnt start address is: 24 (R6)
; width start address is: 28 (R7)
; flag start address is: 32 (R8)
; f start address is: 36 (R9)
0x1030	0xF8AD7004  STRH	R7, [SP, #4]
; f end address is: 36 (R9)
; width end address is: 28 (R7)
0x1034	0x462F    MOV	R7, R5
0x1036	0xFA1FF588  UXTH	R5, R8
0x103A	0x4690    MOV	R8, R2
0x103C	0x4648    MOV	R0, R9
0x103E	0xF9BD2004  LDRSH	R2, [SP, #4]
0x1042	0xE011    B	L___Lib_Sprinti__doprnti19
L___Lib_Sprinti__doprnti15:
;__Lib_Sprinti.c, 269 :: 		
; f start address is: 28 (R7)
; width start address is: 16 (R4)
0x1044	0x783B    LDRB	R3, [R7, #0]
0x1046	0x2B2A    CMP	R3, #42
0x1048	0xD106    BNE	L___Lib_Sprinti__doprnti167
; width end address is: 16 (R4)
;__Lib_Sprinti.c, 270 :: 		
0x104A	0x682C    LDR	R4, [R5, #0]
0x104C	0x1D23    ADDS	R3, R4, #4
0x104E	0x602B    STR	R3, [R5, #0]
0x1050	0xF9B40000  LDRSH	R0, [R4, #0]
; width start address is: 0 (R0)
;__Lib_Sprinti.c, 271 :: 		
0x1054	0x1C79    ADDS	R1, R7, #1
; f end address is: 28 (R7)
; f start address is: 4 (R1)
; width end address is: 0 (R0)
; f end address is: 4 (R1)
;__Lib_Sprinti.c, 272 :: 		
0x1056	0xE001    B	L___Lib_Sprinti__doprnti20
L___Lib_Sprinti__doprnti167:
;__Lib_Sprinti.c, 269 :: 		
0x1058	0x4639    MOV	R1, R7
0x105A	0xB220    SXTH	R0, R4
;__Lib_Sprinti.c, 272 :: 		
L___Lib_Sprinti__doprnti20:
; f start address is: 4 (R1)
; width start address is: 0 (R0)
0x105C	0x462F    MOV	R7, R5
; width end address is: 0 (R0)
; flag end address is: 32 (R8)
; ccnt end address is: 24 (R6)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
; f end address is: 4 (R1)
0x105E	0xFA1FF588  UXTH	R5, R8
0x1062	0x4690    MOV	R8, R2
0x1064	0xB202    SXTH	R2, R0
0x1066	0x4608    MOV	R0, R1
L___Lib_Sprinti__doprnti19:
;__Lib_Sprinti.c, 273 :: 		
; width start address is: 8 (R2)
; f start address is: 0 (R0)
; flag start address is: 20 (R5)
; ccnt start address is: 24 (R6)
; ap start address is: 28 (R7)
; pb start address is: 32 (R8)
0x1068	0x7803    LDRB	R3, [R0, #0]
0x106A	0x2B2E    CMP	R3, #46
0x106C	0xD13A    BNE	L___Lib_Sprinti__doprnti21
;__Lib_Sprinti.c, 274 :: 		
0x106E	0x1C43    ADDS	R3, R0, #1
; f end address is: 0 (R0)
; f start address is: 36 (R9)
0x1070	0x4699    MOV	R9, R3
0x1072	0x781B    LDRB	R3, [R3, #0]
0x1074	0x2B2A    CMP	R3, #42
0x1076	0xD110    BNE	L___Lib_Sprinti__doprnti22
;__Lib_Sprinti.c, 275 :: 		
0x1078	0x683C    LDR	R4, [R7, #0]
0x107A	0x1D23    ADDS	R3, R4, #4
0x107C	0x603B    STR	R3, [R7, #0]
0x107E	0xF9B40000  LDRSH	R0, [R4, #0]
; prec start address is: 0 (R0)
;__Lib_Sprinti.c, 276 :: 		
0x1082	0xF1090101  ADD	R1, R9, #1
; f end address is: 36 (R9)
; f start address is: 4 (R1)
;__Lib_Sprinti.c, 277 :: 		
0x1086	0xF8AD6004  STRH	R6, [SP, #4]
; prec end address is: 0 (R0)
; f end address is: 4 (R1)
0x108A	0xFA1FF985  UXTH	R9, R5
0x108E	0xB205    SXTH	R5, R0
0x1090	0x4640    MOV	R0, R8
0x1092	0x460E    MOV	R6, R1
0x1094	0xF9BD1004  LDRSH	R1, [SP, #4]
0x1098	0xE023    B	L___Lib_Sprinti__doprnti23
L___Lib_Sprinti__doprnti22:
;__Lib_Sprinti.c, 278 :: 		
; prec start address is: 40 (R10)
; f start address is: 36 (R9)
0x109A	0xF2400A00  MOVW	R10, #0
0x109E	0xFA0FFA8A  SXTH	R10, R10
; flag end address is: 20 (R5)
; f end address is: 36 (R9)
; width end address is: 8 (R2)
; prec end address is: 40 (R10)
; pb end address is: 32 (R8)
; ap end address is: 28 (R7)
; ccnt end address is: 24 (R6)
;__Lib_Sprinti.c, 279 :: 		
L___Lib_Sprinti__doprnti24:
; prec start address is: 40 (R10)
; f start address is: 36 (R9)
; pb start address is: 32 (R8)
; ap start address is: 28 (R7)
; ccnt start address is: 24 (R6)
; flag start address is: 20 (R5)
; width start address is: 8 (R2)
0x10A2	0xF8993000  LDRB	R3, [R9, #0]
0x10A6	0xB2D8    UXTB	R0, R3
0x10A8	0xF7FFFC3C  BL	_isdigit+0
0x10AC	0xB190    CBZ	R0, L___Lib_Sprinti__doprnti25
;__Lib_Sprinti.c, 280 :: 		
0x10AE	0x230A    MOVS	R3, #10
0x10B0	0xB21B    SXTH	R3, R3
0x10B2	0xFB03FA0A  MUL	R10, R3, R10
0x10B6	0xFA0FFA8A  SXTH	R10, R10
; prec end address is: 40 (R10)
0x10BA	0xF8993000  LDRB	R3, [R9, #0]
0x10BE	0xEB0A0A03  ADD	R10, R10, R3, LSL #0
0x10C2	0xFA0FFA8A  SXTH	R10, R10
0x10C6	0xF1AA0A30  SUB	R10, R10, #48
0x10CA	0xFA0FFA8A  SXTH	R10, R10
; prec start address is: 40 (R10)
0x10CE	0xF1090901  ADD	R9, R9, #1
0x10D2	0xE7E6    B	L___Lib_Sprinti__doprnti24
L___Lib_Sprinti__doprnti25:
;__Lib_Sprinti.c, 281 :: 		
0x10D4	0xB231    SXTH	R1, R6
; f end address is: 36 (R9)
; width end address is: 8 (R2)
; prec end address is: 40 (R10)
; pb end address is: 32 (R8)
; ap end address is: 28 (R7)
; ccnt end address is: 24 (R6)
0x10D6	0x464E    MOV	R6, R9
0x10D8	0xFA1FF985  UXTH	R9, R5
0x10DC	0xFA0FF58A  SXTH	R5, R10
0x10E0	0x4640    MOV	R0, R8
L___Lib_Sprinti__doprnti23:
; flag end address is: 20 (R5)
; width start address is: 8 (R2)
; flag start address is: 36 (R9)
; ccnt start address is: 4 (R1)
; ap start address is: 28 (R7)
; pb start address is: 0 (R0)
; f start address is: 24 (R6)
; prec start address is: 20 (R5)
; f end address is: 24 (R6)
; flag end address is: 36 (R9)
; ccnt end address is: 4 (R1)
; prec end address is: 20 (R5)
; pb end address is: 0 (R0)
0x10E2	0xE007    B	L___Lib_Sprinti__doprnti26
L___Lib_Sprinti__doprnti21:
;__Lib_Sprinti.c, 283 :: 		
; ccnt start address is: 24 (R6)
; f start address is: 0 (R0)
; pb start address is: 32 (R8)
; prec start address is: 4 (R1)
; flag start address is: 20 (R5)
0x10E4	0x2100    MOVS	R1, #0
0x10E6	0xB209    SXTH	R1, R1
; flag end address is: 20 (R5)
; prec end address is: 4 (R1)
; width end address is: 8 (R2)
; pb end address is: 32 (R8)
; ap end address is: 28 (R7)
; f end address is: 0 (R0)
; ccnt end address is: 24 (R6)
0x10E8	0xFA1FF985  UXTH	R9, R5
0x10EC	0xB20D    SXTH	R5, R1
0x10EE	0xB231    SXTH	R1, R6
0x10F0	0x4606    MOV	R6, R0
0x10F2	0x4640    MOV	R0, R8
;__Lib_Sprinti.c, 287 :: 		
L___Lib_Sprinti__doprnti26:
;__Lib_Sprinti.c, 291 :: 		
; prec start address is: 20 (R5)
; pb start address is: 0 (R0)
; ap start address is: 28 (R7)
; ccnt start address is: 4 (R1)
; flag start address is: 36 (R9)
; f start address is: 24 (R6)
; width start address is: 8 (R2)
0x10F4	0x4634    MOV	R4, R6
0x10F6	0xF1060801  ADD	R8, R6, #1
; f end address is: 24 (R6)
; f start address is: 32 (R8)
0x10FA	0x7823    LDRB	R3, [R4, #0]
0x10FC	0xF88D3010  STRB	R3, [SP, #16]
0x1100	0xE0B1    B	L___Lib_Sprinti__doprnti27
; flag end address is: 36 (R9)
; f end address is: 32 (R8)
; width end address is: 8 (R2)
; prec end address is: 20 (R5)
; ap end address is: 28 (R7)
; pb end address is: 0 (R0)
;__Lib_Sprinti.c, 292 :: 		
L___Lib_Sprinti__doprnti29:
;__Lib_Sprinti.c, 293 :: 		
0x1102	0xB208    SXTH	R0, R1
; ccnt end address is: 4 (R1)
0x1104	0xF000BB90  B	L_end__doprnti
;__Lib_Sprinti.c, 294 :: 		
L___Lib_Sprinti__doprnti30:
;__Lib_Sprinti.c, 295 :: 		
; pb start address is: 0 (R0)
; ap start address is: 28 (R7)
; prec start address is: 20 (R5)
; ccnt start address is: 4 (R1)
; width start address is: 8 (R2)
; f start address is: 32 (R8)
; flag start address is: 36 (R9)
L___Lib_Sprinti__doprnti31:
;__Lib_Sprinti.c, 300 :: 		
0x1108	0x4BF6    LDR	R3, [PC, #984]
0x110A	0x9305    STR	R3, [SP, #20]
;__Lib_Sprinti.c, 301 :: 		
0x110C	0xB22C    SXTH	R4, R5
; prec end address is: 20 (R5)
0x110E	0xE01B    B	____doprnti_strings
;__Lib_Sprinti.c, 305 :: 		
L___Lib_Sprinti__doprnti32:
;__Lib_Sprinti.c, 306 :: 		
L___Lib_Sprinti__doprnti33:
;__Lib_Sprinti.c, 307 :: 		
L___Lib_Sprinti__doprnti34:
;__Lib_Sprinti.c, 308 :: 		
L___Lib_Sprinti__doprnti35:
;__Lib_Sprinti.c, 309 :: 		
0x1110	0x4BF5    LDR	R3, [PC, #980]
0x1112	0x9305    STR	R3, [SP, #20]
;__Lib_Sprinti.c, 310 :: 		
; prec start address is: 16 (R4)
0x1114	0x2400    MOVS	R4, #0
0x1116	0xB224    SXTH	R4, R4
;__Lib_Sprinti.c, 311 :: 		
; prec end address is: 16 (R4)
0x1118	0xE016    B	____doprnti_strings
;__Lib_Sprinti.c, 326 :: 		
L___Lib_Sprinti__doprnti36:
;__Lib_Sprinti.c, 327 :: 		
; prec start address is: 20 (R5)
0x111A	0xF0490640  ORR	R6, R9, #64
0x111E	0xB2B6    UXTH	R6, R6
; flag end address is: 36 (R9)
; flag start address is: 24 (R6)
;__Lib_Sprinti.c, 328 :: 		
; flag end address is: 24 (R6)
0x1120	0xE0F0    B	L___Lib_Sprinti__doprnti28
;__Lib_Sprinti.c, 330 :: 		
L___Lib_Sprinti__doprnti37:
;__Lib_Sprinti.c, 331 :: 		
; flag start address is: 36 (R9)
L___Lib_Sprinti__doprnti38:
;__Lib_Sprinti.c, 332 :: 		
0x1122	0xFA1FF689  UXTH	R6, R9
0x1126	0xE0ED    B	L___Lib_Sprinti__doprnti28
;__Lib_Sprinti.c, 334 :: 		
L___Lib_Sprinti__doprnti39:
;__Lib_Sprinti.c, 336 :: 		
L___Lib_Sprinti__doprnti40:
;__Lib_Sprinti.c, 337 :: 		
0x1128	0xF0490420  ORR	R4, R9, #32
0x112C	0xB2A4    UXTH	R4, R4
; flag end address is: 36 (R9)
; flag start address is: 16 (R4)
; flag end address is: 16 (R4)
;__Lib_Sprinti.c, 338 :: 		
0x112E	0xE001    B	L___Lib_Sprinti__doprnti41
L___Lib_Sprinti__doprnti168:
;__Lib_Sprinti.c, 380 :: 		
0x1130	0xFA1FF489  UXTH	R4, R9
;__Lib_Sprinti.c, 338 :: 		
L___Lib_Sprinti__doprnti41:
;__Lib_Sprinti.c, 339 :: 		
; flag start address is: 16 (R4)
0x1134	0xF0440680  ORR	R6, R4, #128
0x1138	0xB2B6    UXTH	R6, R6
; flag end address is: 16 (R4)
; flag start address is: 24 (R6)
;__Lib_Sprinti.c, 340 :: 		
; flag end address is: 24 (R6)
0x113A	0xE0E3    B	L___Lib_Sprinti__doprnti28
;__Lib_Sprinti.c, 342 :: 		
L___Lib_Sprinti__doprnti42:
;__Lib_Sprinti.c, 343 :: 		
; flag start address is: 36 (R9)
0x113C	0x683C    LDR	R4, [R7, #0]
0x113E	0x1D23    ADDS	R3, R4, #4
0x1140	0x603B    STR	R3, [R7, #0]
0x1142	0x6823    LDR	R3, [R4, #0]
0x1144	0x9305    STR	R3, [SP, #20]
; prec end address is: 20 (R5)
0x1146	0xB22C    SXTH	R4, R5
;__Lib_Sprinti.c, 345 :: 		
____doprnti_strings:
;__Lib_Sprinti.c, 347 :: 		
; prec start address is: 16 (R4)
0x1148	0x9B05    LDR	R3, [SP, #20]
0x114A	0xB90B    CBNZ	R3, L___Lib_Sprinti__doprnti43
;__Lib_Sprinti.c, 348 :: 		
0x114C	0x4BE7    LDR	R3, [PC, #924]
0x114E	0x9305    STR	R3, [SP, #20]
L___Lib_Sprinti__doprnti43:
;__Lib_Sprinti.c, 349 :: 		
0x1150	0x2300    MOVS	R3, #0
0x1152	0xF8AD3018  STRH	R3, [SP, #24]
; flag end address is: 36 (R9)
; f end address is: 32 (R8)
; width end address is: 8 (R2)
; ccnt end address is: 4 (R1)
; prec end address is: 16 (R4)
; ap end address is: 28 (R7)
; pb end address is: 0 (R0)
0x1156	0x463D    MOV	R5, R7
0x1158	0xB217    SXTH	R7, R2
0x115A	0x4642    MOV	R2, R8
0x115C	0x4680    MOV	R8, R0
0x115E	0xB220    SXTH	R0, R4
0x1160	0xB20E    SXTH	R6, R1
0x1162	0xFA1FF189  UXTH	R1, R9
;__Lib_Sprinti.c, 350 :: 		
L___Lib_Sprinti__doprnti44:
; prec start address is: 0 (R0)
; f start address is: 8 (R2)
; width start address is: 28 (R7)
; flag start address is: 4 (R1)
; ccnt start address is: 24 (R6)
; ap start address is: 20 (R5)
; pb start address is: 32 (R8)
0x1166	0xF8BD4018  LDRH	R4, [SP, #24]
0x116A	0x9B05    LDR	R3, [SP, #20]
0x116C	0x191B    ADDS	R3, R3, R4
0x116E	0x781B    LDRB	R3, [R3, #0]
0x1170	0xB12B    CBZ	R3, L___Lib_Sprinti__doprnti45
;__Lib_Sprinti.c, 351 :: 		
0x1172	0xF8BD3018  LDRH	R3, [SP, #24]
0x1176	0x1C5B    ADDS	R3, R3, #1
0x1178	0xF8AD3018  STRH	R3, [SP, #24]
0x117C	0xE7F3    B	L___Lib_Sprinti__doprnti44
L___Lib_Sprinti__doprnti45:
;__Lib_Sprinti.c, 352 :: 		
0x117E	0x462C    MOV	R4, R5
; pb end address is: 32 (R8)
; f end address is: 8 (R2)
; flag end address is: 4 (R1)
; width end address is: 28 (R7)
; ccnt end address is: 24 (R6)
; ap end address is: 20 (R5)
0x1180	0xB205    SXTH	R5, R0
0x1182	0x4640    MOV	R0, R8
____doprnti_dostring:
; prec end address is: 0 (R0)
;__Lib_Sprinti.c, 353 :: 		
; pb start address is: 0 (R0)
; ap start address is: 16 (R4)
; ccnt start address is: 24 (R6)
; flag start address is: 4 (R1)
; width start address is: 28 (R7)
; f start address is: 8 (R2)
; prec start address is: 20 (R5)
0x1184	0xB12D    CBZ	R5, L___Lib_Sprinti__doprnti155
0x1186	0xF8BD3018  LDRH	R3, [SP, #24]
0x118A	0x429D    CMP	R5, R3
0x118C	0xD201    BCS	L___Lib_Sprinti__doprnti154
L___Lib_Sprinti__doprnti153:
;__Lib_Sprinti.c, 354 :: 		
0x118E	0xF8AD5018  STRH	R5, [SP, #24]
; prec end address is: 20 (R5)
;__Lib_Sprinti.c, 353 :: 		
L___Lib_Sprinti__doprnti155:
L___Lib_Sprinti__doprnti154:
;__Lib_Sprinti.c, 355 :: 		
0x1192	0xF8BD3018  LDRH	R3, [SP, #24]
0x1196	0x429F    CMP	R7, R3
0x1198	0xD904    BLS	L___Lib_Sprinti__doprnti49
;__Lib_Sprinti.c, 356 :: 		
0x119A	0xF8BD3018  LDRH	R3, [SP, #24]
0x119E	0x1AFD    SUB	R5, R7, R3
0x11A0	0xB22D    SXTH	R5, R5
; width end address is: 28 (R7)
; width start address is: 20 (R5)
; width end address is: 20 (R5)
0x11A2	0xE001    B	L___Lib_Sprinti__doprnti50
L___Lib_Sprinti__doprnti49:
;__Lib_Sprinti.c, 358 :: 		
; width start address is: 20 (R5)
0x11A4	0x2500    MOVS	R5, #0
0x11A6	0xB22D    SXTH	R5, R5
; width end address is: 20 (R5)
L___Lib_Sprinti__doprnti50:
;__Lib_Sprinti.c, 359 :: 		
; width start address is: 20 (R5)
0x11A8	0xF0010308  AND	R3, R1, #8
0x11AC	0xB29B    UXTH	R3, R3
0x11AE	0xB9AB    CBNZ	R3, L___Lib_Sprinti__doprnti169
; ap end address is: 16 (R4)
; f end address is: 8 (R2)
; flag end address is: 4 (R1)
; width end address is: 20 (R5)
; pb end address is: 0 (R0)
; ccnt end address is: 24 (R6)
0x11B0	0x4627    MOV	R7, R4
;__Lib_Sprinti.c, 360 :: 		
L___Lib_Sprinti__doprnti52:
; width start address is: 20 (R5)
; f start address is: 8 (R2)
; flag start address is: 4 (R1)
; ccnt start address is: 24 (R6)
; ap start address is: 28 (R7)
; pb start address is: 0 (R0)
0x11B2	0xB22C    SXTH	R4, R5
0x11B4	0x1E6D    SUBS	R5, R5, #1
0x11B6	0xB22D    SXTH	R5, R5
0x11B8	0xB12C    CBZ	R4, L___Lib_Sprinti__doprnti53
;__Lib_Sprinti.c, 361 :: 		
0x11BA	0x2320    MOVS	R3, #32
0x11BC	0x7003    STRB	R3, [R0, #0]
0x11BE	0x1C40    ADDS	R0, R0, #1
0x11C0	0x1C76    ADDS	R6, R6, #1
0x11C2	0xB236    SXTH	R6, R6
0x11C4	0xE7F5    B	L___Lib_Sprinti__doprnti52
L___Lib_Sprinti__doprnti53:
0x11C6	0xF8AD5004  STRH	R5, [SP, #4]
; flag end address is: 4 (R1)
; ap end address is: 28 (R7)
; width end address is: 20 (R5)
; pb end address is: 0 (R0)
; ccnt end address is: 24 (R6)
0x11CA	0x9202    STR	R2, [SP, #8]
0x11CC	0x4602    MOV	R2, R0
0x11CE	0xB235    SXTH	R5, R6
0x11D0	0xB28E    UXTH	R6, R1
0x11D2	0x4639    MOV	R1, R7
0x11D4	0x9802    LDR	R0, [SP, #8]
0x11D6	0xF9BD7004  LDRSH	R7, [SP, #4]
0x11DA	0xE006    B	L___Lib_Sprinti__doprnti51
; f end address is: 8 (R2)
L___Lib_Sprinti__doprnti169:
;__Lib_Sprinti.c, 359 :: 		
0x11DC	0x9001    STR	R0, [SP, #4]
0x11DE	0xB22F    SXTH	R7, R5
0x11E0	0xB235    SXTH	R5, R6
0x11E2	0xB28E    UXTH	R6, R1
0x11E4	0x4621    MOV	R1, R4
0x11E6	0x4610    MOV	R0, R2
0x11E8	0x9A01    LDR	R2, [SP, #4]
;__Lib_Sprinti.c, 361 :: 		
L___Lib_Sprinti__doprnti51:
;__Lib_Sprinti.c, 362 :: 		
; width start address is: 28 (R7)
; f start address is: 0 (R0)
; flag start address is: 24 (R6)
; ccnt start address is: 20 (R5)
; ap start address is: 4 (R1)
; pb start address is: 8 (R2)
; flag end address is: 24 (R6)
; width end address is: 28 (R7)
; ap end address is: 4 (R1)
; ccnt end address is: 20 (R5)
; f end address is: 0 (R0)
; pb end address is: 8 (R2)
L___Lib_Sprinti__doprnti54:
; pb start address is: 8 (R2)
; ap start address is: 4 (R1)
; ccnt start address is: 20 (R5)
; flag start address is: 24 (R6)
; f start address is: 0 (R0)
; width start address is: 28 (R7)
0x11EA	0xF8BD4018  LDRH	R4, [SP, #24]
0x11EE	0xF8BD3018  LDRH	R3, [SP, #24]
0x11F2	0x1E5B    SUBS	R3, R3, #1
0x11F4	0xF8AD3018  STRH	R3, [SP, #24]
0x11F8	0xB14C    CBZ	R4, L___Lib_Sprinti__doprnti55
;__Lib_Sprinti.c, 363 :: 		
0x11FA	0x9B05    LDR	R3, [SP, #20]
0x11FC	0x781B    LDRB	R3, [R3, #0]
0x11FE	0x7013    STRB	R3, [R2, #0]
0x1200	0x1C52    ADDS	R2, R2, #1
0x1202	0x9B05    LDR	R3, [SP, #20]
0x1204	0x1C5B    ADDS	R3, R3, #1
0x1206	0x9305    STR	R3, [SP, #20]
0x1208	0x1C6D    ADDS	R5, R5, #1
0x120A	0xB22D    SXTH	R5, R5
0x120C	0xE7ED    B	L___Lib_Sprinti__doprnti54
L___Lib_Sprinti__doprnti55:
;__Lib_Sprinti.c, 365 :: 		
0x120E	0xF0060308  AND	R3, R6, #8
0x1212	0xB29B    UXTH	R3, R3
; flag end address is: 24 (R6)
0x1214	0xB16B    CBZ	R3, L___Lib_Sprinti__doprnti170
; width end address is: 28 (R7)
; ap end address is: 4 (R1)
; ccnt end address is: 20 (R5)
; f end address is: 0 (R0)
; pb end address is: 8 (R2)
0x1216	0xB23E    SXTH	R6, R7
;__Lib_Sprinti.c, 366 :: 		
L___Lib_Sprinti__doprnti57:
; width start address is: 24 (R6)
; width start address is: 24 (R6)
; f start address is: 0 (R0)
; ccnt start address is: 20 (R5)
; ap start address is: 4 (R1)
; pb start address is: 8 (R2)
0x1218	0xB234    SXTH	R4, R6
0x121A	0x1E73    SUBS	R3, R6, #1
0x121C	0xB21E    SXTH	R6, R3
; width end address is: 24 (R6)
0x121E	0xB12C    CBZ	R4, L___Lib_Sprinti__doprnti58
; width end address is: 24 (R6)
;__Lib_Sprinti.c, 367 :: 		
; width start address is: 24 (R6)
0x1220	0x2320    MOVS	R3, #32
0x1222	0x7013    STRB	R3, [R2, #0]
0x1224	0x1C52    ADDS	R2, R2, #1
0x1226	0x1C6D    ADDS	R5, R5, #1
0x1228	0xB22D    SXTH	R5, R5
; width end address is: 24 (R6)
0x122A	0xE7F5    B	L___Lib_Sprinti__doprnti57
L___Lib_Sprinti__doprnti58:
; ccnt end address is: 20 (R5)
; f end address is: 0 (R0)
; pb end address is: 8 (R2)
0x122C	0xB22E    SXTH	R6, R5
0x122E	0x460D    MOV	R5, R1
0x1230	0xE001    B	L___Lib_Sprinti__doprnti56
; ap end address is: 4 (R1)
L___Lib_Sprinti__doprnti170:
;__Lib_Sprinti.c, 365 :: 		
0x1232	0xB22E    SXTH	R6, R5
0x1234	0x460D    MOV	R5, R1
;__Lib_Sprinti.c, 367 :: 		
L___Lib_Sprinti__doprnti56:
;__Lib_Sprinti.c, 368 :: 		
; f start address is: 0 (R0)
; ccnt start address is: 24 (R6)
; ap start address is: 20 (R5)
; pb start address is: 8 (R2)
; f end address is: 0 (R0)
; ccnt end address is: 24 (R6)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
0x1236	0xE67E    B	L___Lib_Sprinti__doprnti0
;__Lib_Sprinti.c, 369 :: 		
L___Lib_Sprinti__doprnti59:
;__Lib_Sprinti.c, 370 :: 		
; pb start address is: 0 (R0)
; ap start address is: 28 (R7)
; prec start address is: 20 (R5)
; ccnt start address is: 4 (R1)
; width start address is: 8 (R2)
; f start address is: 32 (R8)
; flag start address is: 36 (R9)
0x1238	0x683C    LDR	R4, [R7, #0]
0x123A	0x1D23    ADDS	R3, R4, #4
0x123C	0x603B    STR	R3, [R7, #0]
0x123E	0xF9B43000  LDRSH	R3, [R4, #0]
0x1242	0xF88D3010  STRB	R3, [SP, #16]
;__Lib_Sprinti.c, 371 :: 		
L___Lib_Sprinti__doprnti60:
;__Lib_Sprinti.c, 372 :: 		
0x1246	0xAB04    ADD	R3, SP, #16
0x1248	0x9305    STR	R3, [SP, #20]
;__Lib_Sprinti.c, 373 :: 		
0x124A	0x2301    MOVS	R3, #1
0x124C	0xF8AD3018  STRH	R3, [SP, #24]
;__Lib_Sprinti.c, 374 :: 		
0x1250	0x463C    MOV	R4, R7
0x1252	0xB217    SXTH	R7, R2
0x1254	0x4642    MOV	R2, R8
0x1256	0xB20E    SXTH	R6, R1
0x1258	0xFA1FF189  UXTH	R1, R9
0x125C	0xE792    B	____doprnti_dostring
;__Lib_Sprinti.c, 376 :: 		
L___Lib_Sprinti__doprnti61:
;__Lib_Sprinti.c, 377 :: 		
0x125E	0xF04906C0  ORR	R6, R9, #192
0x1262	0xB2B6    UXTH	R6, R6
; flag end address is: 36 (R9)
; flag start address is: 24 (R6)
;__Lib_Sprinti.c, 378 :: 		
; flag end address is: 24 (R6)
0x1264	0xE04E    B	L___Lib_Sprinti__doprnti28
;__Lib_Sprinti.c, 380 :: 		
L___Lib_Sprinti__doprnti27:
; flag start address is: 36 (R9)
0x1266	0xF89D3010  LDRB	R3, [SP, #16]
0x126A	0x2B00    CMP	R3, #0
0x126C	0xF43FAF49  BEQ	L___Lib_Sprinti__doprnti29
0x1270	0xF89D3010  LDRB	R3, [SP, #16]
0x1274	0x2B6C    CMP	R3, #108
0x1276	0xF43FAF47  BEQ	L___Lib_Sprinti__doprnti30
0x127A	0xF89D3010  LDRB	R3, [SP, #16]
0x127E	0x2B4C    CMP	R3, #76
0x1280	0xF43FAF42  BEQ	L___Lib_Sprinti__doprnti31
0x1284	0xF89D3010  LDRB	R3, [SP, #16]
0x1288	0x2B45    CMP	R3, #69
0x128A	0xF43FAF41  BEQ	L___Lib_Sprinti__doprnti32
0x128E	0xF89D3010  LDRB	R3, [SP, #16]
0x1292	0x2B66    CMP	R3, #102
0x1294	0xF43FAF3C  BEQ	L___Lib_Sprinti__doprnti33
0x1298	0xF89D3010  LDRB	R3, [SP, #16]
0x129C	0x2B65    CMP	R3, #101
0x129E	0xF43FAF37  BEQ	L___Lib_Sprinti__doprnti34
0x12A2	0xF89D3010  LDRB	R3, [SP, #16]
0x12A6	0x2B67    CMP	R3, #103
0x12A8	0xF43FAF32  BEQ	L___Lib_Sprinti__doprnti35
0x12AC	0xF89D3010  LDRB	R3, [SP, #16]
0x12B0	0x2B6F    CMP	R3, #111
0x12B2	0xF43FAF32  BEQ	L___Lib_Sprinti__doprnti36
0x12B6	0xF89D3010  LDRB	R3, [SP, #16]
0x12BA	0x2B64    CMP	R3, #100
0x12BC	0xF43FAF31  BEQ	L___Lib_Sprinti__doprnti37
0x12C0	0xF89D3010  LDRB	R3, [SP, #16]
0x12C4	0x2B69    CMP	R3, #105
0x12C6	0xF43FAF2C  BEQ	L___Lib_Sprinti__doprnti38
0x12CA	0xF89D3010  LDRB	R3, [SP, #16]
0x12CE	0x2B70    CMP	R3, #112
0x12D0	0xF43FAF2A  BEQ	L___Lib_Sprinti__doprnti39
0x12D4	0xF89D3010  LDRB	R3, [SP, #16]
0x12D8	0x2B58    CMP	R3, #88
0x12DA	0xF43FAF25  BEQ	L___Lib_Sprinti__doprnti40
0x12DE	0xF89D3010  LDRB	R3, [SP, #16]
0x12E2	0x2B78    CMP	R3, #120
0x12E4	0xF43FAF24  BEQ	L___Lib_Sprinti__doprnti168
0x12E8	0xF89D3010  LDRB	R3, [SP, #16]
0x12EC	0x2B73    CMP	R3, #115
0x12EE	0xF43FAF25  BEQ	L___Lib_Sprinti__doprnti42
0x12F2	0xF89D3010  LDRB	R3, [SP, #16]
0x12F6	0x2B63    CMP	R3, #99
0x12F8	0xD09E    BEQ	L___Lib_Sprinti__doprnti59
0x12FA	0xF89D3010  LDRB	R3, [SP, #16]
0x12FE	0x2B75    CMP	R3, #117
0x1300	0xD0AD    BEQ	L___Lib_Sprinti__doprnti61
0x1302	0xE7A0    B	L___Lib_Sprinti__doprnti60
; flag end address is: 36 (R9)
L___Lib_Sprinti__doprnti28:
;__Lib_Sprinti.c, 598 :: 		
; flag start address is: 24 (R6)
0x1304	0xF00603C0  AND	R3, R6, #192
0x1308	0xB29B    UXTH	R3, R3
0x130A	0xB9AB    CBNZ	R3, L___Lib_Sprinti__doprnti62
;__Lib_Sprinti.c, 604 :: 		
0x130C	0x683C    LDR	R4, [R7, #0]
0x130E	0x1D23    ADDS	R3, R4, #4
0x1310	0x603B    STR	R3, [R7, #0]
0x1312	0xF9B43000  LDRSH	R3, [R4, #0]
0x1316	0xF8AD3014  STRH	R3, [SP, #20]
;__Lib_Sprinti.c, 605 :: 		
0x131A	0xF9BD3014  LDRSH	R3, [SP, #20]
0x131E	0x2B00    CMP	R3, #0
0x1320	0xDA08    BGE	L___Lib_Sprinti__doprnti171
;__Lib_Sprinti.c, 606 :: 		
0x1322	0xF0460403  ORR	R4, R6, #3
0x1326	0xB2A4    UXTH	R4, R4
; flag end address is: 24 (R6)
; flag start address is: 16 (R4)
;__Lib_Sprinti.c, 607 :: 		
0x1328	0xF8BD3014  LDRH	R3, [SP, #20]
0x132C	0x425B    RSBS	R3, R3, #0
0x132E	0xF8AD3014  STRH	R3, [SP, #20]
; flag end address is: 16 (R4)
;__Lib_Sprinti.c, 608 :: 		
0x1332	0xE000    B	L___Lib_Sprinti__doprnti63
L___Lib_Sprinti__doprnti171:
;__Lib_Sprinti.c, 605 :: 		
0x1334	0xB2B4    UXTH	R4, R6
;__Lib_Sprinti.c, 608 :: 		
L___Lib_Sprinti__doprnti63:
;__Lib_Sprinti.c, 609 :: 		
; flag start address is: 16 (R4)
; flag end address is: 16 (R4)
0x1336	0xE006    B	L___Lib_Sprinti__doprnti64
L___Lib_Sprinti__doprnti62:
;__Lib_Sprinti.c, 616 :: 		
; flag start address is: 24 (R6)
0x1338	0x683C    LDR	R4, [R7, #0]
0x133A	0x1D23    ADDS	R3, R4, #4
0x133C	0x603B    STR	R3, [R7, #0]
0x133E	0x8823    LDRH	R3, [R4, #0]
0x1340	0xF8AD3014  STRH	R3, [SP, #20]
; flag end address is: 24 (R6)
0x1344	0xB2B4    UXTH	R4, R6
;__Lib_Sprinti.c, 617 :: 		
L___Lib_Sprinti__doprnti64:
;__Lib_Sprinti.c, 618 :: 		
; flag start address is: 16 (R4)
0x1346	0xB93D    CBNZ	R5, L___Lib_Sprinti__doprnti172
0x1348	0xF8BD3014  LDRH	R3, [SP, #20]
0x134C	0xB93B    CBNZ	R3, L___Lib_Sprinti__doprnti173
L___Lib_Sprinti__doprnti152:
;__Lib_Sprinti.c, 619 :: 		
0x134E	0x1C6D    ADDS	R5, R5, #1
0x1350	0xB22D    SXTH	R5, R5
; prec end address is: 20 (R5)
0x1352	0xFA0FF985  SXTH	R9, R5
;__Lib_Sprinti.c, 618 :: 		
0x1356	0xE001    B	L___Lib_Sprinti__doprnti157
L___Lib_Sprinti__doprnti172:
0x1358	0xFA0FF985  SXTH	R9, R5
L___Lib_Sprinti__doprnti157:
; prec start address is: 36 (R9)
; prec end address is: 36 (R9)
0x135C	0xE001    B	L___Lib_Sprinti__doprnti156
L___Lib_Sprinti__doprnti173:
0x135E	0xFA0FF985  SXTH	R9, R5
L___Lib_Sprinti__doprnti156:
;__Lib_Sprinti.c, 620 :: 		
; prec start address is: 36 (R9)
0x1362	0xF00403C0  AND	R3, R4, #192
0x1366	0xB2DD    UXTB	R5, R3
0x1368	0xE06E    B	L___Lib_Sprinti__doprnti68
;__Lib_Sprinti.c, 621 :: 		
L___Lib_Sprinti__doprnti70:
;__Lib_Sprinti.c, 622 :: 		
L___Lib_Sprinti__doprnti71:
;__Lib_Sprinti.c, 623 :: 		
0x136A	0x2301    MOVS	R3, #1
0x136C	0xF88D3010  STRB	R3, [SP, #16]
; flag end address is: 16 (R4)
; f end address is: 32 (R8)
; width end address is: 8 (R2)
; prec end address is: 36 (R9)
; ccnt end address is: 4 (R1)
; ap end address is: 28 (R7)
; pb end address is: 0 (R0)
0x1370	0xFA0FF689  SXTH	R6, R9
0x1374	0xFA1FF984  UXTH	R9, R4
L___Lib_Sprinti__doprnti72:
; prec start address is: 24 (R6)
; flag start address is: 36 (R9)
; f start address is: 32 (R8)
; width start address is: 8 (R2)
; ccnt start address is: 4 (R1)
; ap start address is: 28 (R7)
; pb start address is: 0 (R0)
0x1378	0xF89D3010  LDRB	R3, [SP, #16]
0x137C	0x2B05    CMP	R3, #5
0x137E	0xD010    BEQ	L___Lib_Sprinti__doprnti73
;__Lib_Sprinti.c, 624 :: 		
0x1380	0xF89D3010  LDRB	R3, [SP, #16]
0x1384	0x005C    LSLS	R4, R3, #1
0x1386	0x4B5A    LDR	R3, [PC, #360]
0x1388	0x191B    ADDS	R3, R3, R4
0x138A	0x881C    LDRH	R4, [R3, #0]
0x138C	0xF8BD3014  LDRH	R3, [SP, #20]
0x1390	0x42A3    CMP	R3, R4
0x1392	0xD200    BCS	L___Lib_Sprinti__doprnti75
;__Lib_Sprinti.c, 625 :: 		
0x1394	0xE005    B	L___Lib_Sprinti__doprnti73
L___Lib_Sprinti__doprnti75:
;__Lib_Sprinti.c, 623 :: 		
0x1396	0xF89D3010  LDRB	R3, [SP, #16]
0x139A	0x1C5B    ADDS	R3, R3, #1
0x139C	0xF88D3010  STRB	R3, [SP, #16]
;__Lib_Sprinti.c, 625 :: 		
0x13A0	0xE7EA    B	L___Lib_Sprinti__doprnti72
L___Lib_Sprinti__doprnti73:
;__Lib_Sprinti.c, 626 :: 		
0x13A2	0xB234    SXTH	R4, R6
; prec end address is: 24 (R6)
; flag end address is: 36 (R9)
0x13A4	0x4606    MOV	R6, R0
0x13A6	0x4638    MOV	R0, R7
0x13A8	0xB20F    SXTH	R7, R1
0x13AA	0x4641    MOV	R1, R8
0x13AC	0xB215    SXTH	R5, R2
0x13AE	0xFA1FF289  UXTH	R2, R9
0x13B2	0xE059    B	L___Lib_Sprinti__doprnti69
;__Lib_Sprinti.c, 628 :: 		
L___Lib_Sprinti__doprnti76:
;__Lib_Sprinti.c, 629 :: 		
; prec start address is: 36 (R9)
; flag start address is: 16 (R4)
0x13B4	0x2301    MOVS	R3, #1
0x13B6	0xF88D3010  STRB	R3, [SP, #16]
; flag end address is: 16 (R4)
; f end address is: 32 (R8)
; width end address is: 8 (R2)
; prec end address is: 36 (R9)
; ccnt end address is: 4 (R1)
; ap end address is: 28 (R7)
; pb end address is: 0 (R0)
0x13BA	0xFA0FF689  SXTH	R6, R9
0x13BE	0xFA1FF984  UXTH	R9, R4
L___Lib_Sprinti__doprnti77:
; prec start address is: 24 (R6)
; flag start address is: 36 (R9)
; f start address is: 32 (R8)
; width start address is: 8 (R2)
; ccnt start address is: 4 (R1)
; ap start address is: 28 (R7)
; pb start address is: 0 (R0)
0x13C2	0xF89D3010  LDRB	R3, [SP, #16]
0x13C6	0x2B04    CMP	R3, #4
0x13C8	0xD010    BEQ	L___Lib_Sprinti__doprnti78
;__Lib_Sprinti.c, 630 :: 		
0x13CA	0xF89D3010  LDRB	R3, [SP, #16]
0x13CE	0x005C    LSLS	R4, R3, #1
0x13D0	0x4B48    LDR	R3, [PC, #288]
0x13D2	0x191B    ADDS	R3, R3, R4
0x13D4	0x881C    LDRH	R4, [R3, #0]
0x13D6	0xF8BD3014  LDRH	R3, [SP, #20]
0x13DA	0x42A3    CMP	R3, R4
0x13DC	0xD200    BCS	L___Lib_Sprinti__doprnti80
;__Lib_Sprinti.c, 631 :: 		
0x13DE	0xE005    B	L___Lib_Sprinti__doprnti78
L___Lib_Sprinti__doprnti80:
;__Lib_Sprinti.c, 629 :: 		
0x13E0	0xF89D3010  LDRB	R3, [SP, #16]
0x13E4	0x1C5B    ADDS	R3, R3, #1
0x13E6	0xF88D3010  STRB	R3, [SP, #16]
;__Lib_Sprinti.c, 631 :: 		
0x13EA	0xE7EA    B	L___Lib_Sprinti__doprnti77
L___Lib_Sprinti__doprnti78:
;__Lib_Sprinti.c, 632 :: 		
0x13EC	0xB234    SXTH	R4, R6
; prec end address is: 24 (R6)
; flag end address is: 36 (R9)
0x13EE	0x4606    MOV	R6, R0
0x13F0	0x4638    MOV	R0, R7
0x13F2	0xB20F    SXTH	R7, R1
0x13F4	0x4641    MOV	R1, R8
0x13F6	0xB215    SXTH	R5, R2
0x13F8	0xFA1FF289  UXTH	R2, R9
0x13FC	0xE034    B	L___Lib_Sprinti__doprnti69
;__Lib_Sprinti.c, 634 :: 		
L___Lib_Sprinti__doprnti81:
;__Lib_Sprinti.c, 635 :: 		
; prec start address is: 36 (R9)
; flag start address is: 16 (R4)
0x13FE	0x2301    MOVS	R3, #1
0x1400	0xF88D3010  STRB	R3, [SP, #16]
; flag end address is: 16 (R4)
; f end address is: 32 (R8)
; width end address is: 8 (R2)
; prec end address is: 36 (R9)
; ccnt end address is: 4 (R1)
; ap end address is: 28 (R7)
; pb end address is: 0 (R0)
0x1404	0xFA0FF689  SXTH	R6, R9
0x1408	0xFA1FF984  UXTH	R9, R4
L___Lib_Sprinti__doprnti82:
; prec start address is: 24 (R6)
; flag start address is: 36 (R9)
; f start address is: 32 (R8)
; width start address is: 8 (R2)
; ccnt start address is: 4 (R1)
; ap start address is: 28 (R7)
; pb start address is: 0 (R0)
0x140C	0xF89D3010  LDRB	R3, [SP, #16]
0x1410	0x2B06    CMP	R3, #6
0x1412	0xD010    BEQ	L___Lib_Sprinti__doprnti83
;__Lib_Sprinti.c, 636 :: 		
0x1414	0xF89D3010  LDRB	R3, [SP, #16]
0x1418	0x005C    LSLS	R4, R3, #1
0x141A	0x4B37    LDR	R3, [PC, #220]
0x141C	0x191B    ADDS	R3, R3, R4
0x141E	0x881C    LDRH	R4, [R3, #0]
0x1420	0xF8BD3014  LDRH	R3, [SP, #20]
0x1424	0x42A3    CMP	R3, R4
0x1426	0xD200    BCS	L___Lib_Sprinti__doprnti85
;__Lib_Sprinti.c, 637 :: 		
0x1428	0xE005    B	L___Lib_Sprinti__doprnti83
L___Lib_Sprinti__doprnti85:
;__Lib_Sprinti.c, 635 :: 		
0x142A	0xF89D3010  LDRB	R3, [SP, #16]
0x142E	0x1C5B    ADDS	R3, R3, #1
0x1430	0xF88D3010  STRB	R3, [SP, #16]
;__Lib_Sprinti.c, 637 :: 		
0x1434	0xE7EA    B	L___Lib_Sprinti__doprnti82
L___Lib_Sprinti__doprnti83:
;__Lib_Sprinti.c, 638 :: 		
0x1436	0xB234    SXTH	R4, R6
; prec end address is: 24 (R6)
; flag end address is: 36 (R9)
0x1438	0x4606    MOV	R6, R0
0x143A	0x4638    MOV	R0, R7
0x143C	0xB20F    SXTH	R7, R1
0x143E	0x4641    MOV	R1, R8
0x1440	0xB215    SXTH	R5, R2
0x1442	0xFA1FF289  UXTH	R2, R9
0x1446	0xE00F    B	L___Lib_Sprinti__doprnti69
;__Lib_Sprinti.c, 639 :: 		
L___Lib_Sprinti__doprnti68:
; prec start address is: 36 (R9)
; flag start address is: 16 (R4)
0x1448	0x2D00    CMP	R5, #0
0x144A	0xD08E    BEQ	L___Lib_Sprinti__doprnti70
0x144C	0x2DC0    CMP	R5, #192
0x144E	0xD08C    BEQ	L___Lib_Sprinti__doprnti71
0x1450	0x2D80    CMP	R5, #128
0x1452	0xD0AF    BEQ	L___Lib_Sprinti__doprnti76
0x1454	0x2D40    CMP	R5, #64
0x1456	0xD0D2    BEQ	L___Lib_Sprinti__doprnti81
; flag end address is: 16 (R4)
; f end address is: 32 (R8)
; width end address is: 8 (R2)
; prec end address is: 36 (R9)
; ccnt end address is: 4 (R1)
; ap end address is: 28 (R7)
; pb end address is: 0 (R0)
0x1458	0xB215    SXTH	R5, R2
0x145A	0xB2A2    UXTH	R2, R4
0x145C	0xFA0FF489  SXTH	R4, R9
0x1460	0x4606    MOV	R6, R0
0x1462	0x4638    MOV	R0, R7
0x1464	0xB20F    SXTH	R7, R1
0x1466	0x4641    MOV	R1, R8
L___Lib_Sprinti__doprnti69:
;__Lib_Sprinti.c, 640 :: 		
; pb start address is: 24 (R6)
; ap start address is: 0 (R0)
; ccnt start address is: 28 (R7)
; width start address is: 20 (R5)
; f start address is: 4 (R1)
; flag start address is: 8 (R2)
; prec start address is: 16 (R4)
0x1468	0xF89D3010  LDRB	R3, [SP, #16]
0x146C	0x42A3    CMP	R3, R4
0x146E	0xDA02    BGE	L___Lib_Sprinti__doprnti86
;__Lib_Sprinti.c, 641 :: 		
0x1470	0xF88D4010  STRB	R4, [SP, #16]
0x1474	0xE007    B	L___Lib_Sprinti__doprnti87
L___Lib_Sprinti__doprnti86:
;__Lib_Sprinti.c, 643 :: 		
0x1476	0xF89D3010  LDRB	R3, [SP, #16]
0x147A	0x429C    CMP	R4, R3
0x147C	0xDA03    BGE	L___Lib_Sprinti__doprnti174
; prec end address is: 16 (R4)
;__Lib_Sprinti.c, 644 :: 		
; prec start address is: 12 (R3)
0x147E	0xF89D3010  LDRB	R3, [SP, #16]
; prec end address is: 12 (R3)
0x1482	0xB21C    SXTH	R4, R3
0x1484	0xE7FF    B	L___Lib_Sprinti__doprnti88
L___Lib_Sprinti__doprnti174:
;__Lib_Sprinti.c, 643 :: 		
;__Lib_Sprinti.c, 644 :: 		
L___Lib_Sprinti__doprnti88:
; prec start address is: 16 (R4)
; prec end address is: 16 (R4)
L___Lib_Sprinti__doprnti87:
;__Lib_Sprinti.c, 645 :: 		
; prec start address is: 16 (R4)
0x1486	0xB135    CBZ	R5, L___Lib_Sprinti__doprnti175
0x1488	0xF0020303  AND	R3, R2, #3
0x148C	0xB29B    UXTH	R3, R3
0x148E	0xB11B    CBZ	R3, L___Lib_Sprinti__doprnti176
L___Lib_Sprinti__doprnti151:
;__Lib_Sprinti.c, 646 :: 		
0x1490	0x1E6D    SUBS	R5, R5, #1
0x1492	0xB22D    SXTH	R5, R5
; width end address is: 20 (R5)
;__Lib_Sprinti.c, 645 :: 		
0x1494	0xE7FF    B	L___Lib_Sprinti__doprnti159
L___Lib_Sprinti__doprnti175:
L___Lib_Sprinti__doprnti159:
; width start address is: 20 (R5)
; width end address is: 20 (R5)
0x1496	0xE7FF    B	L___Lib_Sprinti__doprnti158
L___Lib_Sprinti__doprnti176:
L___Lib_Sprinti__doprnti158:
;__Lib_Sprinti.c, 647 :: 		
; width start address is: 20 (R5)
0x1498	0x42A5    CMP	R5, R4
0x149A	0xDD02    BLE	L___Lib_Sprinti__doprnti92
;__Lib_Sprinti.c, 648 :: 		
0x149C	0x1B2D    SUB	R5, R5, R4
0x149E	0xB22D    SXTH	R5, R5
; width end address is: 20 (R5)
0x14A0	0xE001    B	L___Lib_Sprinti__doprnti93
L___Lib_Sprinti__doprnti92:
;__Lib_Sprinti.c, 650 :: 		
; width start address is: 20 (R5)
0x14A2	0x2500    MOVS	R5, #0
0x14A4	0xB22D    SXTH	R5, R5
; width end address is: 20 (R5)
L___Lib_Sprinti__doprnti93:
;__Lib_Sprinti.c, 651 :: 		
; width start address is: 20 (R5)
0x14A6	0xF64003C4  MOVW	R3, #2244
0x14AA	0xEA020303  AND	R3, R2, R3, LSL #0
0x14AE	0xB29B    UXTH	R3, R3
0x14B0	0xF5B36F04  CMP	R3, #2112
0x14B4	0xD104    BNE	L___Lib_Sprinti__doprnti94
;__Lib_Sprinti.c, 652 :: 		
0x14B6	0xB115    CBZ	R5, L___Lib_Sprinti__doprnti177
;__Lib_Sprinti.c, 653 :: 		
0x14B8	0x1E6D    SUBS	R5, R5, #1
0x14BA	0xB22D    SXTH	R5, R5
; width end address is: 20 (R5)
0x14BC	0xE7FF    B	L___Lib_Sprinti__doprnti95
L___Lib_Sprinti__doprnti177:
;__Lib_Sprinti.c, 652 :: 		
;__Lib_Sprinti.c, 653 :: 		
L___Lib_Sprinti__doprnti95:
;__Lib_Sprinti.c, 654 :: 		
; width start address is: 20 (R5)
0x14BE	0xE00E    B	L___Lib_Sprinti__doprnti96
L___Lib_Sprinti__doprnti94:
;__Lib_Sprinti.c, 656 :: 		
0x14C0	0xF402630C  AND	R3, R2, #2240
0x14C4	0xB29B    UXTH	R3, R3
0x14C6	0xF5B36F08  CMP	R3, #2176
0x14CA	0xD108    BNE	L___Lib_Sprinti__doprnti178
;__Lib_Sprinti.c, 657 :: 		
0x14CC	0x2D02    CMP	R5, #2
0x14CE	0xDD02    BLE	L___Lib_Sprinti__doprnti98
;__Lib_Sprinti.c, 658 :: 		
0x14D0	0x1EAB    SUBS	R3, R5, #2
0x14D2	0xB21B    SXTH	R3, R3
; width end address is: 20 (R5)
; width start address is: 12 (R3)
; width end address is: 12 (R3)
0x14D4	0xE001    B	L___Lib_Sprinti__doprnti99
L___Lib_Sprinti__doprnti98:
;__Lib_Sprinti.c, 660 :: 		
; width start address is: 12 (R3)
0x14D6	0x2300    MOVS	R3, #0
0x14D8	0xB21B    SXTH	R3, R3
; width end address is: 12 (R3)
L___Lib_Sprinti__doprnti99:
;__Lib_Sprinti.c, 661 :: 		
; width start address is: 12 (R3)
0x14DA	0xB21D    SXTH	R5, R3
; width end address is: 12 (R3)
0x14DC	0xE7FF    B	L___Lib_Sprinti__doprnti97
L___Lib_Sprinti__doprnti178:
;__Lib_Sprinti.c, 656 :: 		
;__Lib_Sprinti.c, 661 :: 		
L___Lib_Sprinti__doprnti97:
; width start address is: 20 (R5)
; width end address is: 20 (R5)
L___Lib_Sprinti__doprnti96:
;__Lib_Sprinti.c, 662 :: 		
; width start address is: 20 (R5)
0x14DE	0xF0020304  AND	R3, R2, #4
0x14E2	0xE00B    B	#22
0x14E4	0x02A92000  	?lstr1___Lib_Sprinti+0
0x14E8	0x02B92000  	?lstr2___Lib_Sprinti+0
0x14EC	0x02CA2000  	?lstr3___Lib_Sprinti+0
0x14F0	0x3BBE0000  	__Lib_Sprinti_dpowers+0
0x14F4	0x3BC80000  	__Lib_Sprinti_hexpowers+0
0x14F8	0x3BB20000  	__Lib_Sprinti_octpowers+0
0x14FC	0xB29B    UXTH	R3, R3
0x14FE	0x2B00    CMP	R3, #0
0x1500	0xF000807A  BEQ	L___Lib_Sprinti__doprnti100
;__Lib_Sprinti.c, 663 :: 		
0x1504	0xF0020302  AND	R3, R2, #2
0x1508	0xB29B    UXTH	R3, R3
0x150A	0xB1A3    CBZ	R3, L___Lib_Sprinti__doprnti101
;__Lib_Sprinti.c, 664 :: 		
0x150C	0xF0020301  AND	R3, R2, #1
0x1510	0xB29B    UXTH	R3, R3
0x1512	0xB11B    CBZ	R3, L___Lib_Sprinti__doprnti102
0x1514	0x232D    MOVS	R3, #45
0x1516	0xF88D300C  STRB	R3, [SP, #12]
0x151A	0xE002    B	L___Lib_Sprinti__doprnti103
L___Lib_Sprinti__doprnti102:
0x151C	0x232B    MOVS	R3, #43
0x151E	0xF88D300C  STRB	R3, [SP, #12]
L___Lib_Sprinti__doprnti103:
0x1522	0xF89D300C  LDRB	R3, [SP, #12]
0x1526	0x7033    STRB	R3, [R6, #0]
0x1528	0x1C76    ADDS	R6, R6, #1
0x152A	0xF1070A01  ADD	R10, R7, #1
0x152E	0xFA0FFA8A  SXTH	R10, R10
; ccnt end address is: 28 (R7)
; ccnt start address is: 40 (R10)
0x1532	0x4633    MOV	R3, R6
; ccnt end address is: 40 (R10)
0x1534	0xE02F    B	L___Lib_Sprinti__doprnti104
L___Lib_Sprinti__doprnti101:
;__Lib_Sprinti.c, 666 :: 		
; ccnt start address is: 28 (R7)
0x1536	0xF0020301  AND	R3, R2, #1
0x153A	0xB29B    UXTH	R3, R3
0x153C	0xB12B    CBZ	R3, L___Lib_Sprinti__doprnti105
;__Lib_Sprinti.c, 667 :: 		
0x153E	0x2320    MOVS	R3, #32
0x1540	0x7033    STRB	R3, [R6, #0]
0x1542	0x1C76    ADDS	R6, R6, #1
0x1544	0x1C7B    ADDS	R3, R7, #1
0x1546	0xB21B    SXTH	R3, R3
; ccnt end address is: 28 (R7)
; ccnt start address is: 12 (R3)
; ccnt end address is: 12 (R3)
0x1548	0xE022    B	L___Lib_Sprinti__doprnti106
L___Lib_Sprinti__doprnti105:
;__Lib_Sprinti.c, 669 :: 		
; ccnt start address is: 28 (R7)
0x154A	0xF402630C  AND	R3, R2, #2240
0x154E	0xB29B    UXTH	R3, R3
0x1550	0xF5B36F08  CMP	R3, #2176
0x1554	0xD11B    BNE	L___Lib_Sprinti__doprnti179
;__Lib_Sprinti.c, 670 :: 		
0x1556	0x2330    MOVS	R3, #48
0x1558	0x7033    STRB	R3, [R6, #0]
0x155A	0xF1060801  ADD	R8, R6, #1
; pb end address is: 24 (R6)
; pb start address is: 32 (R8)
0x155E	0x1C7E    ADDS	R6, R7, #1
0x1560	0xB236    SXTH	R6, R6
; ccnt end address is: 28 (R7)
; ccnt start address is: 24 (R6)
;__Lib_Sprinti.c, 671 :: 		
0x1562	0xF0020320  AND	R3, R2, #32
0x1566	0xB29B    UXTH	R3, R3
0x1568	0xB11B    CBZ	R3, L___Lib_Sprinti__doprnti108
0x156A	0x2358    MOVS	R3, #88
0x156C	0xF88D300D  STRB	R3, [SP, #13]
0x1570	0xE002    B	L___Lib_Sprinti__doprnti109
L___Lib_Sprinti__doprnti108:
0x1572	0x2378    MOVS	R3, #120
0x1574	0xF88D300D  STRB	R3, [SP, #13]
L___Lib_Sprinti__doprnti109:
0x1578	0xF89D300D  LDRB	R3, [SP, #13]
0x157C	0xF8883000  STRB	R3, [R8, #0]
0x1580	0xF1080701  ADD	R7, R8, #1
; pb end address is: 32 (R8)
; pb start address is: 28 (R7)
0x1584	0x1C76    ADDS	R6, R6, #1
0x1586	0xB236    SXTH	R6, R6
; pb end address is: 28 (R7)
; ccnt end address is: 24 (R6)
0x1588	0xB233    SXTH	R3, R6
0x158A	0x463E    MOV	R6, R7
;__Lib_Sprinti.c, 672 :: 		
0x158C	0xE000    B	L___Lib_Sprinti__doprnti107
L___Lib_Sprinti__doprnti179:
;__Lib_Sprinti.c, 669 :: 		
0x158E	0xB23B    SXTH	R3, R7
;__Lib_Sprinti.c, 672 :: 		
L___Lib_Sprinti__doprnti107:
; ccnt start address is: 12 (R3)
; pb start address is: 24 (R6)
; pb end address is: 24 (R6)
; ccnt end address is: 12 (R3)
L___Lib_Sprinti__doprnti106:
; pb start address is: 24 (R6)
; ccnt start address is: 12 (R3)
0x1590	0xFA0FFA83  SXTH	R10, R3
; pb end address is: 24 (R6)
; ccnt end address is: 12 (R3)
0x1594	0x4633    MOV	R3, R6
L___Lib_Sprinti__doprnti104:
;__Lib_Sprinti.c, 673 :: 		
; ccnt start address is: 40 (R10)
; pb start address is: 12 (R3)
0x1596	0xB325    CBZ	R5, L___Lib_Sprinti__doprnti181
; flag end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 12 (R3)
; prec end address is: 16 (R4)
; width end address is: 20 (R5)
; f end address is: 4 (R1)
0x1598	0x4606    MOV	R6, R0
0x159A	0x460F    MOV	R7, R1
0x159C	0xFA1FF882  UXTH	R8, R2
0x15A0	0xFA0FF984  SXTH	R9, R4
0x15A4	0x469B    MOV	R11, R3
;__Lib_Sprinti.c, 674 :: 		
0x15A6	0xE002    B	L___Lib_Sprinti__doprnti111
L___Lib_Sprinti__doprnti180:
;__Lib_Sprinti.c, 676 :: 		
0x15A8	0xFA0FF58B  SXTH	R5, R11
0x15AC	0x46E3    MOV	R11, R12
;__Lib_Sprinti.c, 674 :: 		
L___Lib_Sprinti__doprnti111:
;__Lib_Sprinti.c, 675 :: 		
; f start address is: 28 (R7)
; flag start address is: 32 (R8)
; width start address is: 44 (R11)
; pb start address is: 48 (R12)
; ap start address is: 24 (R6)
; prec start address is: 36 (R9)
; pb start address is: 44 (R11)
; ccnt start address is: 40 (R10)
; width start address is: 20 (R5)
; prec start address is: 36 (R9)
; prec end address is: 36 (R9)
; flag start address is: 32 (R8)
; flag end address is: 32 (R8)
; f start address is: 28 (R7)
; f end address is: 28 (R7)
; ap start address is: 24 (R6)
; ap end address is: 24 (R6)
0x15AE	0x2330    MOVS	R3, #48
0x15B0	0xF88B3000  STRB	R3, [R11, #0]
0x15B4	0xF10B0301  ADD	R3, R11, #1
; pb end address is: 44 (R11)
; pb start address is: 48 (R12)
0x15B8	0x469C    MOV	R12, R3
; pb end address is: 48 (R12)
0x15BA	0xF10A0A01  ADD	R10, R10, #1
0x15BE	0xFA0FFA8A  SXTH	R10, R10
; ccnt end address is: 40 (R10)
;__Lib_Sprinti.c, 676 :: 		
0x15C2	0x1E6B    SUBS	R3, R5, #1
0x15C4	0xB21B    SXTH	R3, R3
; width end address is: 20 (R5)
; width start address is: 44 (R11)
0x15C6	0xFA0FFB83  SXTH	R11, R3
; width end address is: 44 (R11)
0x15CA	0x2B00    CMP	R3, #0
0x15CC	0xD1EC    BNE	L___Lib_Sprinti__doprnti180
; prec end address is: 36 (R9)
; ap end address is: 24 (R6)
; pb end address is: 48 (R12)
; width end address is: 44 (R11)
; ccnt end address is: 40 (R10)
; flag end address is: 32 (R8)
; f end address is: 28 (R7)
0x15CE	0x4630    MOV	R0, R6
0x15D0	0x4639    MOV	R1, R7
0x15D2	0xFA1FF288  UXTH	R2, R8
0x15D6	0xFA0FF489  SXTH	R4, R9
0x15DA	0xFA0FF58B  SXTH	R5, R11
0x15DE	0x4663    MOV	R3, R12
0x15E0	0xE7FF    B	L___Lib_Sprinti__doprnti110
L___Lib_Sprinti__doprnti181:
;__Lib_Sprinti.c, 673 :: 		
;__Lib_Sprinti.c, 676 :: 		
L___Lib_Sprinti__doprnti110:
;__Lib_Sprinti.c, 677 :: 		
; pb start address is: 12 (R3)
; ccnt start address is: 40 (R10)
; width start address is: 20 (R5)
; prec start address is: 16 (R4)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; ap start address is: 0 (R0)
0x15E2	0xFA0FF985  SXTH	R9, R5
; ccnt end address is: 40 (R10)
; pb end address is: 12 (R3)
0x15E6	0xFA1FF882  UXTH	R8, R2
0x15EA	0x4602    MOV	R2, R0
0x15EC	0xB220    SXTH	R0, R4
0x15EE	0x461C    MOV	R4, R3
0x15F0	0x460F    MOV	R7, R1
0x15F2	0xFA0FF18A  SXTH	R1, R10
0x15F6	0xE07B    B	L___Lib_Sprinti__doprnti114
L___Lib_Sprinti__doprnti100:
;__Lib_Sprinti.c, 679 :: 		
; pb start address is: 24 (R6)
; ccnt start address is: 28 (R7)
0x15F8	0xB1AD    CBZ	R5, L___Lib_Sprinti__doprnti183
0x15FA	0xF0020308  AND	R3, R2, #8
0x15FE	0xB29B    UXTH	R3, R3
0x1600	0xB9A3    CBNZ	R3, L___Lib_Sprinti__doprnti184
L___Lib_Sprinti__doprnti150:
;__Lib_Sprinti.c, 680 :: 		
0x1602	0xE001    B	L___Lib_Sprinti__doprnti118
; width end address is: 20 (R5)
L___Lib_Sprinti__doprnti182:
;__Lib_Sprinti.c, 682 :: 		
0x1604	0xFA0FF588  SXTH	R5, R8
;__Lib_Sprinti.c, 680 :: 		
L___Lib_Sprinti__doprnti118:
;__Lib_Sprinti.c, 681 :: 		
; width start address is: 20 (R5)
; width start address is: 32 (R8)
; prec start address is: 16 (R4)
; prec end address is: 16 (R4)
; flag start address is: 8 (R2)
; flag end address is: 8 (R2)
; f start address is: 4 (R1)
; f end address is: 4 (R1)
; ccnt start address is: 28 (R7)
; ap start address is: 0 (R0)
; ap end address is: 0 (R0)
; pb start address is: 24 (R6)
0x1608	0x2320    MOVS	R3, #32
0x160A	0x7033    STRB	R3, [R6, #0]
0x160C	0x1C76    ADDS	R6, R6, #1
; pb end address is: 24 (R6)
0x160E	0x1C7F    ADDS	R7, R7, #1
0x1610	0xB23F    SXTH	R7, R7
; ccnt end address is: 28 (R7)
;__Lib_Sprinti.c, 682 :: 		
0x1612	0x1E6B    SUBS	R3, R5, #1
0x1614	0xB21B    SXTH	R3, R3
; width end address is: 20 (R5)
; width start address is: 32 (R8)
0x1616	0xFA0FF883  SXTH	R8, R3
; width end address is: 32 (R8)
0x161A	0x2B00    CMP	R3, #0
0x161C	0xD1F2    BNE	L___Lib_Sprinti__doprnti182
; width end address is: 32 (R8)
; flag end address is: 8 (R2)
; ap end address is: 0 (R0)
; ccnt end address is: 28 (R7)
; pb end address is: 24 (R6)
; prec end address is: 16 (R4)
; f end address is: 4 (R1)
0x161E	0x4633    MOV	R3, R6
0x1620	0xFA0FF588  SXTH	R5, R8
;__Lib_Sprinti.c, 679 :: 		
0x1624	0xE000    B	L___Lib_Sprinti__doprnti161
L___Lib_Sprinti__doprnti183:
0x1626	0x4633    MOV	R3, R6
L___Lib_Sprinti__doprnti161:
; width start address is: 20 (R5)
; prec start address is: 16 (R4)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; ccnt start address is: 28 (R7)
; ap start address is: 0 (R0)
; pb start address is: 12 (R3)
0x1628	0x461E    MOV	R6, R3
; flag end address is: 8 (R2)
; ap end address is: 0 (R0)
; ccnt end address is: 28 (R7)
; pb end address is: 12 (R3)
; prec end address is: 16 (R4)
; width end address is: 20 (R5)
; f end address is: 4 (R1)
0x162A	0xE7FF    B	L___Lib_Sprinti__doprnti160
L___Lib_Sprinti__doprnti184:
L___Lib_Sprinti__doprnti160:
;__Lib_Sprinti.c, 683 :: 		
; width start address is: 20 (R5)
; prec start address is: 16 (R4)
; flag start address is: 8 (R2)
; f start address is: 4 (R1)
; ccnt start address is: 28 (R7)
; ap start address is: 0 (R0)
; pb start address is: 24 (R6)
0x162C	0xF0020302  AND	R3, R2, #2
0x1630	0xB29B    UXTH	R3, R3
0x1632	0xB19B    CBZ	R3, L___Lib_Sprinti__doprnti121
;__Lib_Sprinti.c, 684 :: 		
0x1634	0xF0020301  AND	R3, R2, #1
0x1638	0xB29B    UXTH	R3, R3
0x163A	0xB11B    CBZ	R3, L___Lib_Sprinti__doprnti122
0x163C	0x232D    MOVS	R3, #45
0x163E	0xF88D300E  STRB	R3, [SP, #14]
0x1642	0xE002    B	L___Lib_Sprinti__doprnti123
L___Lib_Sprinti__doprnti122:
0x1644	0x232B    MOVS	R3, #43
0x1646	0xF88D300E  STRB	R3, [SP, #14]
L___Lib_Sprinti__doprnti123:
0x164A	0xF89D300E  LDRB	R3, [SP, #14]
0x164E	0x7033    STRB	R3, [R6, #0]
0x1650	0x1C76    ADDS	R6, R6, #1
0x1652	0x1C7B    ADDS	R3, R7, #1
0x1654	0xB21B    SXTH	R3, R3
; ccnt end address is: 28 (R7)
; ccnt start address is: 12 (R3)
0x1656	0x4637    MOV	R7, R6
; ccnt end address is: 12 (R3)
0x1658	0xB21E    SXTH	R6, R3
0x165A	0xE011    B	L___Lib_Sprinti__doprnti124
L___Lib_Sprinti__doprnti121:
;__Lib_Sprinti.c, 686 :: 		
; ccnt start address is: 28 (R7)
0x165C	0xF0020301  AND	R3, R2, #1
0x1660	0xB29B    UXTH	R3, R3
0x1662	0xB153    CBZ	R3, L___Lib_Sprinti__doprnti185
;__Lib_Sprinti.c, 687 :: 		
0x1664	0x2320    MOVS	R3, #32
0x1666	0x7033    STRB	R3, [R6, #0]
0x1668	0x1C76    ADDS	R6, R6, #1
0x166A	0x1C7B    ADDS	R3, R7, #1
0x166C	0xB21F    SXTH	R7, R3
; ccnt end address is: 28 (R7)
; pb end address is: 24 (R6)
0x166E	0xF8AD7004  STRH	R7, [SP, #4]
0x1672	0x4637    MOV	R7, R6
0x1674	0xF9BD6004  LDRSH	R6, [SP, #4]
0x1678	0xE002    B	L___Lib_Sprinti__doprnti125
L___Lib_Sprinti__doprnti185:
;__Lib_Sprinti.c, 686 :: 		
0x167A	0x9601    STR	R6, [SP, #4]
0x167C	0xB23E    SXTH	R6, R7
0x167E	0x9F01    LDR	R7, [SP, #4]
;__Lib_Sprinti.c, 687 :: 		
L___Lib_Sprinti__doprnti125:
; ccnt start address is: 24 (R6)
; pb start address is: 28 (R7)
; pb end address is: 28 (R7)
; ccnt end address is: 24 (R6)
L___Lib_Sprinti__doprnti124:
;__Lib_Sprinti.c, 688 :: 		
; pb start address is: 28 (R7)
; ccnt start address is: 24 (R6)
0x1680	0xF402630C  AND	R3, R2, #2240
0x1684	0xB29B    UXTH	R3, R3
0x1686	0xF5B36F04  CMP	R3, #2112
0x168A	0xD106    BNE	L___Lib_Sprinti__doprnti126
;__Lib_Sprinti.c, 689 :: 		
0x168C	0x2330    MOVS	R3, #48
0x168E	0x703B    STRB	R3, [R7, #0]
0x1690	0x1C7F    ADDS	R7, R7, #1
0x1692	0x1C73    ADDS	R3, R6, #1
0x1694	0xB21B    SXTH	R3, R3
; ccnt end address is: 24 (R6)
; ccnt start address is: 12 (R3)
; ccnt end address is: 12 (R3)
0x1696	0x463E    MOV	R6, R7
0x1698	0xE021    B	L___Lib_Sprinti__doprnti127
L___Lib_Sprinti__doprnti126:
;__Lib_Sprinti.c, 691 :: 		
; ccnt start address is: 24 (R6)
0x169A	0xF402630C  AND	R3, R2, #2240
0x169E	0xB29B    UXTH	R3, R3
0x16A0	0xF5B36F08  CMP	R3, #2176
0x16A4	0xD117    BNE	L___Lib_Sprinti__doprnti186
;__Lib_Sprinti.c, 692 :: 		
0x16A6	0x2330    MOVS	R3, #48
0x16A8	0x703B    STRB	R3, [R7, #0]
0x16AA	0x1C7F    ADDS	R7, R7, #1
0x16AC	0x1C76    ADDS	R6, R6, #1
0x16AE	0xB236    SXTH	R6, R6
;__Lib_Sprinti.c, 693 :: 		
0x16B0	0xF0020320  AND	R3, R2, #32
0x16B4	0xB29B    UXTH	R3, R3
0x16B6	0xB11B    CBZ	R3, L___Lib_Sprinti__doprnti129
0x16B8	0x2358    MOVS	R3, #88
0x16BA	0xF88D300F  STRB	R3, [SP, #15]
0x16BE	0xE002    B	L___Lib_Sprinti__doprnti130
L___Lib_Sprinti__doprnti129:
0x16C0	0x2378    MOVS	R3, #120
0x16C2	0xF88D300F  STRB	R3, [SP, #15]
L___Lib_Sprinti__doprnti130:
0x16C6	0xF89D300F  LDRB	R3, [SP, #15]
0x16CA	0x703B    STRB	R3, [R7, #0]
0x16CC	0x1C7F    ADDS	R7, R7, #1
0x16CE	0x1C76    ADDS	R6, R6, #1
0x16D0	0xB236    SXTH	R6, R6
; pb end address is: 28 (R7)
; ccnt end address is: 24 (R6)
0x16D2	0x463B    MOV	R3, R7
;__Lib_Sprinti.c, 694 :: 		
0x16D4	0xE000    B	L___Lib_Sprinti__doprnti128
L___Lib_Sprinti__doprnti186:
;__Lib_Sprinti.c, 691 :: 		
0x16D6	0x463B    MOV	R3, R7
;__Lib_Sprinti.c, 694 :: 		
L___Lib_Sprinti__doprnti128:
; ccnt start address is: 24 (R6)
; pb start address is: 12 (R3)
0x16D8	0x9301    STR	R3, [SP, #4]
; pb end address is: 12 (R3)
; ccnt end address is: 24 (R6)
0x16DA	0xB233    SXTH	R3, R6
0x16DC	0x9E01    LDR	R6, [SP, #4]
L___Lib_Sprinti__doprnti127:
;__Lib_Sprinti.c, 695 :: 		
; pb start address is: 24 (R6)
; ccnt start address is: 12 (R3)
0x16DE	0xFA0FF985  SXTH	R9, R5
; flag end address is: 8 (R2)
; ap end address is: 0 (R0)
; pb end address is: 24 (R6)
; ccnt end address is: 12 (R3)
; prec end address is: 16 (R4)
; width end address is: 20 (R5)
; f end address is: 4 (R1)
0x16E2	0xFA1FF882  UXTH	R8, R2
0x16E6	0x4602    MOV	R2, R0
0x16E8	0xB220    SXTH	R0, R4
0x16EA	0x4634    MOV	R4, R6
0x16EC	0x460F    MOV	R7, R1
0x16EE	0xB219    SXTH	R1, R3
L___Lib_Sprinti__doprnti114:
;__Lib_Sprinti.c, 696 :: 		
; ccnt start address is: 4 (R1)
; pb start address is: 16 (R4)
; ap start address is: 8 (R2)
; f start address is: 28 (R7)
; flag start address is: 32 (R8)
; prec start address is: 0 (R0)
; width start address is: 36 (R9)
; pb end address is: 16 (R4)
; ccnt end address is: 4 (R1)
; flag end address is: 32 (R8)
; width end address is: 36 (R9)
; ap end address is: 8 (R2)
; prec end address is: 0 (R0)
; f end address is: 28 (R7)
L___Lib_Sprinti__doprnti131:
; width start address is: 36 (R9)
; prec start address is: 0 (R0)
; flag start address is: 32 (R8)
; f start address is: 28 (R7)
; ap start address is: 8 (R2)
; pb start address is: 16 (R4)
; ccnt start address is: 4 (R1)
0x16F0	0xF89D3010  LDRB	R3, [SP, #16]
0x16F4	0x4298    CMP	R0, R3
0x16F6	0xDD05    BLE	L___Lib_Sprinti__doprnti132
;__Lib_Sprinti.c, 697 :: 		
0x16F8	0x2330    MOVS	R3, #48
0x16FA	0x7023    STRB	R3, [R4, #0]
0x16FC	0x1C64    ADDS	R4, R4, #1
0x16FE	0x1C49    ADDS	R1, R1, #1
0x1700	0xB209    SXTH	R1, R1
0x1702	0xE7F5    B	L___Lib_Sprinti__doprnti131
L___Lib_Sprinti__doprnti132:
;__Lib_Sprinti.c, 698 :: 		
; ccnt end address is: 4 (R1)
; flag end address is: 32 (R8)
; width end address is: 36 (R9)
; ap end address is: 8 (R2)
; prec end address is: 0 (R0)
; f end address is: 28 (R7)
0x1704	0xB205    SXTH	R5, R0
0x1706	0xB208    SXTH	R0, R1
0x1708	0x4621    MOV	R1, R4
L___Lib_Sprinti__doprnti133:
; pb end address is: 16 (R4)
; ccnt start address is: 0 (R0)
; prec start address is: 40 (R10)
; pb start address is: 4 (R1)
; ap start address is: 8 (R2)
; f start address is: 28 (R7)
; flag start address is: 32 (R8)
; prec start address is: 20 (R5)
; width start address is: 36 (R9)
0x170A	0xB22C    SXTH	R4, R5
0x170C	0x1E6B    SUBS	R3, R5, #1
; prec end address is: 20 (R5)
; prec start address is: 40 (R10)
0x170E	0xFA0FFA83  SXTH	R10, R3
; prec end address is: 40 (R10)
0x1712	0x2C00    CMP	R4, #0
0x1714	0xF0008064  BEQ	L___Lib_Sprinti__doprnti134
; prec end address is: 40 (R10)
;__Lib_Sprinti.c, 699 :: 		
; prec start address is: 40 (R10)
0x1718	0xF00803C0  AND	R3, R8, #192
0x171C	0xB2DE    UXTB	R6, R3
0x171E	0xE04E    B	L___Lib_Sprinti__doprnti135
;__Lib_Sprinti.c, 700 :: 		
L___Lib_Sprinti__doprnti137:
;__Lib_Sprinti.c, 701 :: 		
L___Lib_Sprinti__doprnti138:
;__Lib_Sprinti.c, 702 :: 		
0x1720	0xEA4F044A  LSL	R4, R10, #1
0x1724	0x4B42    LDR	R3, [PC, #264]
0x1726	0x191B    ADDS	R3, R3, R4
0x1728	0x881C    LDRH	R4, [R3, #0]
0x172A	0xF8BD3014  LDRH	R3, [SP, #20]
0x172E	0xFBB3F5F4  UDIV	R5, R3, R4
0x1732	0xB2AD    UXTH	R5, R5
0x1734	0x240A    MOVS	R4, #10
0x1736	0xFBB5F3F4  UDIV	R3, R5, R4
0x173A	0xFB045313  MLS	R3, R4, R3, R5
0x173E	0xB29B    UXTH	R3, R3
0x1740	0x3330    ADDS	R3, #48
0x1742	0xF88D3010  STRB	R3, [SP, #16]
;__Lib_Sprinti.c, 703 :: 		
0x1746	0xE042    B	L___Lib_Sprinti__doprnti136
;__Lib_Sprinti.c, 705 :: 		
L___Lib_Sprinti__doprnti139:
;__Lib_Sprinti.c, 706 :: 		
0x1748	0xF0080320  AND	R3, R8, #32
0x174C	0xB29B    UXTH	R3, R3
0x174E	0xB193    CBZ	R3, L___Lib_Sprinti__doprnti140
;__Lib_Sprinti.c, 707 :: 		
0x1750	0xEA4F044A  LSL	R4, R10, #1
0x1754	0x4B37    LDR	R3, [PC, #220]
0x1756	0x191B    ADDS	R3, R3, R4
0x1758	0x881C    LDRH	R4, [R3, #0]
0x175A	0xF8BD3014  LDRH	R3, [SP, #20]
0x175E	0xFBB3F3F4  UDIV	R3, R3, R4
0x1762	0xB29B    UXTH	R3, R3
0x1764	0xF003040F  AND	R4, R3, #15
0x1768	0xB2A4    UXTH	R4, R4
0x176A	0x4B33    LDR	R3, [PC, #204]
0x176C	0x191B    ADDS	R3, R3, R4
0x176E	0x781B    LDRB	R3, [R3, #0]
0x1770	0xF88D3010  STRB	R3, [SP, #16]
0x1774	0xE011    B	L___Lib_Sprinti__doprnti141
L___Lib_Sprinti__doprnti140:
;__Lib_Sprinti.c, 709 :: 		
0x1776	0xEA4F044A  LSL	R4, R10, #1
0x177A	0x4B2E    LDR	R3, [PC, #184]
0x177C	0x191B    ADDS	R3, R3, R4
0x177E	0x881C    LDRH	R4, [R3, #0]
0x1780	0xF8BD3014  LDRH	R3, [SP, #20]
0x1784	0xFBB3F3F4  UDIV	R3, R3, R4
0x1788	0xB29B    UXTH	R3, R3
0x178A	0xF003040F  AND	R4, R3, #15
0x178E	0xB2A4    UXTH	R4, R4
0x1790	0x4B2A    LDR	R3, [PC, #168]
0x1792	0x191B    ADDS	R3, R3, R4
0x1794	0x781B    LDRB	R3, [R3, #0]
0x1796	0xF88D3010  STRB	R3, [SP, #16]
L___Lib_Sprinti__doprnti141:
;__Lib_Sprinti.c, 710 :: 		
0x179A	0xE018    B	L___Lib_Sprinti__doprnti136
;__Lib_Sprinti.c, 712 :: 		
L___Lib_Sprinti__doprnti142:
;__Lib_Sprinti.c, 713 :: 		
0x179C	0xEA4F044A  LSL	R4, R10, #1
0x17A0	0x4B27    LDR	R3, [PC, #156]
0x17A2	0x191B    ADDS	R3, R3, R4
0x17A4	0x881C    LDRH	R4, [R3, #0]
0x17A6	0xF8BD3014  LDRH	R3, [SP, #20]
0x17AA	0xFBB3F3F4  UDIV	R3, R3, R4
0x17AE	0xB29B    UXTH	R3, R3
0x17B0	0xF0030307  AND	R3, R3, #7
0x17B4	0xB29B    UXTH	R3, R3
0x17B6	0x3330    ADDS	R3, #48
0x17B8	0xF88D3010  STRB	R3, [SP, #16]
;__Lib_Sprinti.c, 714 :: 		
0x17BC	0xE007    B	L___Lib_Sprinti__doprnti136
;__Lib_Sprinti.c, 715 :: 		
L___Lib_Sprinti__doprnti135:
0x17BE	0x2E00    CMP	R6, #0
0x17C0	0xD0AE    BEQ	L___Lib_Sprinti__doprnti137
0x17C2	0x2EC0    CMP	R6, #192
0x17C4	0xD0AC    BEQ	L___Lib_Sprinti__doprnti138
0x17C6	0x2E80    CMP	R6, #128
0x17C8	0xD0BE    BEQ	L___Lib_Sprinti__doprnti139
0x17CA	0x2E40    CMP	R6, #64
0x17CC	0xD0E6    BEQ	L___Lib_Sprinti__doprnti142
L___Lib_Sprinti__doprnti136:
;__Lib_Sprinti.c, 716 :: 		
0x17CE	0xF89D3010  LDRB	R3, [SP, #16]
0x17D2	0x700B    STRB	R3, [R1, #0]
0x17D4	0x1C49    ADDS	R1, R1, #1
0x17D6	0x1C40    ADDS	R0, R0, #1
0x17D8	0xB200    SXTH	R0, R0
;__Lib_Sprinti.c, 717 :: 		
; prec end address is: 40 (R10)
0x17DA	0xFA0FF58A  SXTH	R5, R10
0x17DE	0xE794    B	L___Lib_Sprinti__doprnti133
L___Lib_Sprinti__doprnti134:
;__Lib_Sprinti.c, 718 :: 		
0x17E0	0xF0080308  AND	R3, R8, #8
0x17E4	0xB29B    UXTH	R3, R3
; flag end address is: 32 (R8)
0x17E6	0xB193    CBZ	R3, L___Lib_Sprinti__doprnti188
0x17E8	0xF1B90F00  CMP	R9, #0
0x17EC	0xDD14    BLE	L___Lib_Sprinti__doprnti189
L___Lib_Sprinti__doprnti149:
;__Lib_Sprinti.c, 719 :: 		
; f end address is: 28 (R7)
0x17EE	0x463D    MOV	R5, R7
0x17F0	0xFA0FF489  SXTH	R4, R9
0x17F4	0xE7FF    B	L___Lib_Sprinti__doprnti146
; width end address is: 36 (R9)
L___Lib_Sprinti__doprnti187:
;__Lib_Sprinti.c, 721 :: 		
;__Lib_Sprinti.c, 719 :: 		
L___Lib_Sprinti__doprnti146:
;__Lib_Sprinti.c, 720 :: 		
; width start address is: 16 (R4)
; f start address is: 20 (R5)
; width start address is: 16 (R4)
; f start address is: 20 (R5)
; f end address is: 20 (R5)
; ap start address is: 8 (R2)
; ap end address is: 8 (R2)
; pb start address is: 4 (R1)
; ccnt start address is: 0 (R0)
0x17F6	0x2320    MOVS	R3, #32
0x17F8	0x700B    STRB	R3, [R1, #0]
0x17FA	0x1C49    ADDS	R1, R1, #1
; pb end address is: 4 (R1)
0x17FC	0x1C40    ADDS	R0, R0, #1
0x17FE	0xB200    SXTH	R0, R0
; ccnt end address is: 0 (R0)
;__Lib_Sprinti.c, 721 :: 		
0x1800	0x1E63    SUBS	R3, R4, #1
0x1802	0xB21B    SXTH	R3, R3
0x1804	0xB21C    SXTH	R4, R3
; width end address is: 16 (R4)
0x1806	0x2B00    CMP	R3, #0
0x1808	0xD1F5    BNE	L___Lib_Sprinti__doprnti187
; f end address is: 20 (R5)
; width end address is: 16 (R4)
; ap end address is: 8 (R2)
; pb end address is: 4 (R1)
; ccnt end address is: 0 (R0)
0x180A	0x462B    MOV	R3, R5
;__Lib_Sprinti.c, 718 :: 		
0x180C	0xE000    B	L___Lib_Sprinti__doprnti163
L___Lib_Sprinti__doprnti188:
0x180E	0x463B    MOV	R3, R7
L___Lib_Sprinti__doprnti163:
; f start address is: 12 (R3)
; ap start address is: 8 (R2)
; pb start address is: 4 (R1)
; ccnt start address is: 0 (R0)
0x1810	0xB206    SXTH	R6, R0
; ap end address is: 8 (R2)
; pb end address is: 4 (R1)
; ccnt end address is: 0 (R0)
; f end address is: 12 (R3)
0x1812	0x4615    MOV	R5, R2
0x1814	0x460A    MOV	R2, R1
0x1816	0xE003    B	L___Lib_Sprinti__doprnti162
L___Lib_Sprinti__doprnti189:
0x1818	0x463B    MOV	R3, R7
0x181A	0x4615    MOV	R5, R2
0x181C	0x460A    MOV	R2, R1
0x181E	0xB206    SXTH	R6, R0
L___Lib_Sprinti__doprnti162:
;__Lib_Sprinti.c, 722 :: 		
; f start address is: 12 (R3)
; ap start address is: 20 (R5)
; pb start address is: 8 (R2)
; ccnt start address is: 24 (R6)
; f end address is: 12 (R3)
; ap end address is: 20 (R5)
; pb end address is: 8 (R2)
0x1820	0x4618    MOV	R0, R3
0x1822	0xF7FFBB88  B	L___Lib_Sprinti__doprnti0
L___Lib_Sprinti__doprnti1:
;__Lib_Sprinti.c, 723 :: 		
0x1826	0xB230    SXTH	R0, R6
; ccnt end address is: 24 (R6)
;__Lib_Sprinti.c, 725 :: 		
L_end__doprnti:
0x1828	0xF8DDE000  LDR	LR, [SP, #0]
0x182C	0xB007    ADD	SP, SP, #28
0x182E	0x4770    BX	LR
0x1830	0x3BBE0000  	__Lib_Sprinti_dpowers+0
0x1834	0x3BC80000  	__Lib_Sprinti_hexpowers+0
0x1838	0x3B720000  	__Lib_Sprinti_hexb+0
0x183C	0x3B610000  	__Lib_Sprinti_hexs+0
0x1840	0x3BB20000  	__Lib_Sprinti_octpowers+0
; end of __Lib_Sprinti__doprnti
_isdigit:
;__Lib_CType.c, 23 :: 		
; character start address is: 0 (R0)
0x0924	0xB081    SUB	SP, SP, #4
; character end address is: 0 (R0)
; character start address is: 0 (R0)
;__Lib_CType.c, 24 :: 		
0x0926	0x2839    CMP	R0, #57
0x0928	0xD803    BHI	L_isdigit9
0x092A	0x2830    CMP	R0, #48
0x092C	0xD301    BCC	L_isdigit9
; character end address is: 0 (R0)
0x092E	0x2101    MOVS	R1, #1
0x0930	0xE000    B	L_isdigit8
L_isdigit9:
0x0932	0x2100    MOVS	R1, #0
L_isdigit8:
0x0934	0xB2C8    UXTB	R0, R1
;__Lib_CType.c, 25 :: 		
L_end_isdigit:
0x0936	0xB001    ADD	SP, SP, #4
0x0938	0x4770    BX	LR
; end of _isdigit
_lib_aci_set_local_data:
;lib_aci.c, 298 :: 		bool lib_aci_set_local_data(aci_state_t *aci_stat, uint8_t pipe, uint8_t *p_value, uint8_t size)
; size start address is: 12 (R3)
; p_value start address is: 8 (R2)
; pipe start address is: 4 (R1)
0x1C98	0xB087    SUB	SP, SP, #28
0x1C9A	0xF8CDE000  STR	LR, [SP, #0]
0x1C9E	0xB2DE    UXTB	R6, R3
; size end address is: 12 (R3)
; p_value end address is: 8 (R2)
; pipe end address is: 4 (R1)
; pipe start address is: 4 (R1)
; p_value start address is: 8 (R2)
; size start address is: 24 (R6)
;lib_aci.c, 302 :: 		if ((p_services_pipe_type_map[pipe-1].location != ACI_STORE_LOCAL)
0x1CA0	0x1E4C    SUBS	R4, R1, #1
0x1CA2	0xB224    SXTH	R4, R4
0x1CA4	0x00A5    LSLS	R5, R4, #2
0x1CA6	0x4C10    LDR	R4, [PC, #64]
0x1CA8	0x6824    LDR	R4, [R4, #0]
0x1CAA	0x1964    ADDS	R4, R4, R5
0x1CAC	0x7824    LDRB	R4, [R4, #0]
;lib_aci.c, 304 :: 		(size > ACI_PIPE_TX_DATA_MAX_LEN))
0x1CAE	0x2C01    CMP	R4, #1
0x1CB0	0xD102    BNE	L__lib_aci_set_local_data68
0x1CB2	0x2E14    CMP	R6, #20
0x1CB4	0xD800    BHI	L__lib_aci_set_local_data67
0x1CB6	0xE001    B	L_lib_aci_set_local_data20
; pipe end address is: 4 (R1)
; p_value end address is: 8 (R2)
; size end address is: 24 (R6)
L__lib_aci_set_local_data68:
L__lib_aci_set_local_data67:
;lib_aci.c, 306 :: 		return false;
0x1CB8	0x2000    MOVS	R0, #0
0x1CBA	0xE011    B	L_end_lib_aci_set_local_data
;lib_aci.c, 307 :: 		}
L_lib_aci_set_local_data20:
;lib_aci.c, 309 :: 		aci_cmd_params_set_local_data.tx_data.pipe_number = pipe;
; size start address is: 24 (R6)
; p_value start address is: 8 (R2)
; pipe start address is: 4 (R1)
0x1CBC	0xF88D1004  STRB	R1, [SP, #4]
; pipe end address is: 4 (R1)
;lib_aci.c, 310 :: 		memcpy(&(aci_cmd_params_set_local_data.tx_data.aci_data[0]), p_value, size);
0x1CC0	0xF10D0405  ADD	R4, SP, #5
0x1CC4	0x4611    MOV	R1, R2
0x1CC6	0xB2F2    UXTB	R2, R6
; p_value end address is: 8 (R2)
0x1CC8	0x4620    MOV	R0, R4
0x1CCA	0xF7FEFAC5  BL	_memcpy+0
;lib_aci.c, 311 :: 		acil_encode_cmd_set_local_data(&(msg_to_send.buffer[0]), &aci_cmd_params_set_local_data, size);
0x1CCE	0xAC01    ADD	R4, SP, #4
0x1CD0	0xB2F2    UXTB	R2, R6
; size end address is: 24 (R6)
0x1CD2	0x4621    MOV	R1, R4
0x1CD4	0x4805    LDR	R0, [PC, #20]
0x1CD6	0xF7FFFDB5  BL	_acil_encode_cmd_set_local_data+0
;lib_aci.c, 312 :: 		return hal_aci_tl_send(&msg_to_send);
0x1CDA	0x4805    LDR	R0, [PC, #20]
0x1CDC	0xF7FEFD84  BL	_hal_aci_tl_send+0
;lib_aci.c, 313 :: 		}
L_end_lib_aci_set_local_data:
0x1CE0	0xF8DDE000  LDR	LR, [SP, #0]
0x1CE4	0xB007    ADD	SP, SP, #28
0x1CE6	0x4770    BX	LR
0x1CE8	0x047C2000  	lib_aci_p_services_pipe_type_map+0
0x1CEC	0x02E22000  	_msg_to_send+1
0x1CF0	0x02E12000  	_msg_to_send+0
; end of _lib_aci_set_local_data
_acil_encode_cmd_set_local_data:
;acilib.c, 64 :: 		void acil_encode_cmd_set_local_data(uint8_t *buffer, aci_cmd_params_set_local_data_t *p_aci_cmd_params_set_local_data, uint8_t data_size)
; data_size start address is: 8 (R2)
; p_aci_cmd_params_set_local_data start address is: 4 (R1)
; buffer start address is: 0 (R0)
0x1844	0xB081    SUB	SP, SP, #4
0x1846	0xF8CDE000  STR	LR, [SP, #0]
; data_size end address is: 8 (R2)
; p_aci_cmd_params_set_local_data end address is: 4 (R1)
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
; p_aci_cmd_params_set_local_data start address is: 4 (R1)
; data_size start address is: 8 (R2)
;acilib.c, 66 :: 		*(buffer + OFFSET_ACI_CMD_T_LEN) = MSG_SET_LOCAL_DATA_BASE_LEN + data_size;
0x184A	0x1C93    ADDS	R3, R2, #2
0x184C	0x7003    STRB	R3, [R0, #0]
;acilib.c, 67 :: 		*(buffer + OFFSET_ACI_CMD_T_CMD_OPCODE) = ACI_CMD_SET_LOCAL_DATA;
0x184E	0x1C44    ADDS	R4, R0, #1
0x1850	0x230D    MOVS	R3, #13
0x1852	0x7023    STRB	R3, [R4, #0]
;acilib.c, 68 :: 		*(buffer + OFFSET_ACI_CMD_T_SET_LOCAL_DATA + OFFSET_ACI_CMD_PARAMS_SEND_DATA_T_TX_DATA + OFFSET_ACI_TX_DATA_T_PIPE_NUMBER) = p_aci_cmd_params_set_local_data->tx_data.pipe_number;
0x1854	0x1C84    ADDS	R4, R0, #2
0x1856	0x780B    LDRB	R3, [R1, #0]
0x1858	0x7023    STRB	R3, [R4, #0]
;acilib.c, 69 :: 		memcpy(buffer + OFFSET_ACI_CMD_T_SET_LOCAL_DATA + OFFSET_ACI_CMD_PARAMS_SEND_DATA_T_TX_DATA + OFFSET_ACI_TX_DATA_T_ACI_DATA,  &(p_aci_cmd_params_set_local_data->tx_data.aci_data[0]), data_size);
0x185A	0x1C4C    ADDS	R4, R1, #1
; p_aci_cmd_params_set_local_data end address is: 4 (R1)
0x185C	0x1C83    ADDS	R3, R0, #2
; buffer end address is: 0 (R0)
0x185E	0x1C5B    ADDS	R3, R3, #1
; data_size end address is: 8 (R2)
0x1860	0x4621    MOV	R1, R4
0x1862	0x4618    MOV	R0, R3
0x1864	0xF7FEFCF8  BL	_memcpy+0
;acilib.c, 70 :: 		}
L_end_acil_encode_cmd_set_local_data:
0x1868	0xF8DDE000  LDR	LR, [SP, #0]
0x186C	0xB001    ADD	SP, SP, #4
0x186E	0x4770    BX	LR
; end of _acil_encode_cmd_set_local_data
_lib_aci_device_version:
;lib_aci.c, 291 :: 		bool lib_aci_device_version()
0x1EB0	0xB081    SUB	SP, SP, #4
0x1EB2	0xF8CDE000  STR	LR, [SP, #0]
;lib_aci.c, 293 :: 		acil_encode_cmd_get_device_version(&(msg_to_send.buffer[0]));
0x1EB6	0x4805    LDR	R0, [PC, #20]
0x1EB8	0xF7FFFCDA  BL	_acil_encode_cmd_get_device_version+0
;lib_aci.c, 294 :: 		return hal_aci_tl_send(&msg_to_send);
0x1EBC	0x4804    LDR	R0, [PC, #16]
0x1EBE	0xF7FEFC93  BL	_hal_aci_tl_send+0
;lib_aci.c, 295 :: 		}
L_end_lib_aci_device_version:
0x1EC2	0xF8DDE000  LDR	LR, [SP, #0]
0x1EC6	0xB001    ADD	SP, SP, #4
0x1EC8	0x4770    BX	LR
0x1ECA	0xBF00    NOP
0x1ECC	0x02E22000  	_msg_to_send+1
0x1ED0	0x02E12000  	_msg_to_send+0
; end of _lib_aci_device_version
_acil_encode_cmd_get_device_version:
;acilib.c, 58 :: 		void acil_encode_cmd_get_device_version(uint8_t *buffer)
; buffer start address is: 0 (R0)
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;acilib.c, 60 :: 		*(buffer + OFFSET_ACI_CMD_T_LEN) = 1;
0x1870	0x2101    MOVS	R1, #1
0x1872	0x7001    STRB	R1, [R0, #0]
;acilib.c, 61 :: 		*(buffer + OFFSET_ACI_CMD_T_CMD_OPCODE) = ACI_CMD_GET_DEVICE_VERSION;
0x1874	0x1C42    ADDS	R2, R0, #1
; buffer end address is: 0 (R0)
0x1876	0x2109    MOVS	R1, #9
0x1878	0x7011    STRB	R1, [R2, #0]
;acilib.c, 62 :: 		}
L_end_acil_encode_cmd_get_device_version:
0x187A	0x4770    BX	LR
; end of _acil_encode_cmd_get_device_version
_lib_aci_is_pipe_available:
;lib_aci.c, 72 :: 		bool lib_aci_is_pipe_available(aci_state_t *aci_stat, uint8_t pipe)
; pipe start address is: 4 (R1)
; aci_stat start address is: 0 (R0)
; pipe end address is: 4 (R1)
; aci_stat end address is: 0 (R0)
; aci_stat start address is: 0 (R0)
; pipe start address is: 4 (R1)
;lib_aci.c, 76 :: 		byte_idx = pipe / 8;
0x1E60	0x08CB    LSRS	R3, R1, #3
0x1E62	0xB2DB    UXTB	R3, R3
;lib_aci.c, 77 :: 		if (aci_stat->pipes_open_bitmap[byte_idx] & (0x01 << (pipe % 8)))
0x1E64	0xF2000226  ADDW	R2, R0, #38
; aci_stat end address is: 0 (R0)
0x1E68	0x18D2    ADDS	R2, R2, R3
0x1E6A	0x7814    LDRB	R4, [R2, #0]
0x1E6C	0xF0010307  AND	R3, R1, #7
0x1E70	0xB2DB    UXTB	R3, R3
; pipe end address is: 4 (R1)
0x1E72	0x2201    MOVS	R2, #1
0x1E74	0xB212    SXTH	R2, R2
0x1E76	0x409A    LSLS	R2, R3
0x1E78	0xB212    SXTH	R2, R2
0x1E7A	0xEA040202  AND	R2, R4, R2, LSL #0
0x1E7E	0xB212    SXTH	R2, R2
0x1E80	0xB10A    CBZ	R2, L_lib_aci_is_pipe_available0
;lib_aci.c, 79 :: 		return(true);
0x1E82	0x2001    MOVS	R0, #1
0x1E84	0xE000    B	L_end_lib_aci_is_pipe_available
;lib_aci.c, 80 :: 		}
L_lib_aci_is_pipe_available0:
;lib_aci.c, 81 :: 		return(false);
0x1E86	0x2000    MOVS	R0, #0
;lib_aci.c, 82 :: 		}
L_end_lib_aci_is_pipe_available:
0x1E88	0x4770    BX	LR
; end of _lib_aci_is_pipe_available
_lib_aci_change_timing_GAP_PPCP:
;lib_aci.c, 463 :: 		bool lib_aci_change_timing_GAP_PPCP()
0x1E8C	0xB081    SUB	SP, SP, #4
0x1E8E	0xF8CDE000  STR	LR, [SP, #0]
;lib_aci.c, 465 :: 		acil_encode_cmd_change_timing_req_GAP_PPCP(&(msg_to_send.buffer[0]));
0x1E92	0x4805    LDR	R0, [PC, #20]
0x1E94	0xF7FEFFE8  BL	_acil_encode_cmd_change_timing_req_GAP_PPCP+0
;lib_aci.c, 466 :: 		return hal_aci_tl_send(&msg_to_send);
0x1E98	0x4804    LDR	R0, [PC, #16]
0x1E9A	0xF7FEFCA5  BL	_hal_aci_tl_send+0
;lib_aci.c, 467 :: 		}
L_end_lib_aci_change_timing_GAP_PPCP:
0x1E9E	0xF8DDE000  LDR	LR, [SP, #0]
0x1EA2	0xB001    ADD	SP, SP, #4
0x1EA4	0x4770    BX	LR
0x1EA6	0xBF00    NOP
0x1EA8	0x02E22000  	_msg_to_send+1
0x1EAC	0x02E12000  	_msg_to_send+0
; end of _lib_aci_change_timing_GAP_PPCP
_acil_encode_cmd_change_timing_req_GAP_PPCP:
;acilib.c, 215 :: 		void acil_encode_cmd_change_timing_req_GAP_PPCP(uint8_t *buffer)
; buffer start address is: 0 (R0)
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;acilib.c, 217 :: 		*(buffer + OFFSET_ACI_CMD_T_LEN) = MSG_CHANGE_TIMING_LEN_GAP_PPCP;
0x0E68	0x2101    MOVS	R1, #1
0x0E6A	0x7001    STRB	R1, [R0, #0]
;acilib.c, 218 :: 		*(buffer + OFFSET_ACI_CMD_T_CMD_OPCODE) = ACI_CMD_CHANGE_TIMING;
0x0E6C	0x1C42    ADDS	R2, R0, #1
; buffer end address is: 0 (R0)
0x0E6E	0x2113    MOVS	R1, #19
0x0E70	0x7011    STRB	R1, [R2, #0]
;acilib.c, 219 :: 		}
L_end_acil_encode_cmd_change_timing_req_GAP_PPCP:
0x0E72	0x4770    BX	LR
; end of _acil_encode_cmd_change_timing_req_GAP_PPCP
_ble_uart_tx:
;ble_uart.c, 156 :: 		bool ble_uart_tx(uint8_t *buffer, uint8_t buffer_len)
0x1ED4	0xB084    SUB	SP, SP, #16
0x1ED6	0xF8CDE000  STR	LR, [SP, #0]
0x1EDA	0x9002    STR	R0, [SP, #8]
0x1EDC	0xF88D100C  STRB	R1, [SP, #12]
;ble_uart.c, 158 :: 		bool status = false;
0x1EE0	0x2200    MOVS	R2, #0
0x1EE2	0xF88D2004  STRB	R2, [SP, #4]
;ble_uart.c, 160 :: 		if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_TX_TX) &&
0x1EE6	0x2109    MOVS	R1, #9
0x1EE8	0x480D    LDR	R0, [PC, #52]
0x1EEA	0xF7FFFFB9  BL	_lib_aci_is_pipe_available+0
;ble_uart.c, 161 :: 		(aci_state.data_credit_available >= 1))
0x1EEE	0xB180    CBZ	R0, L__ble_uart_tx16
0x1EF0	0x4A0C    LDR	R2, [PC, #48]
0x1EF2	0x7812    LDRB	R2, [R2, #0]
0x1EF4	0x2A01    CMP	R2, #1
0x1EF6	0xD30C    BCC	L__ble_uart_tx15
L__ble_uart_tx14:
;ble_uart.c, 163 :: 		status = lib_aci_send_data(PIPE_UART_OVER_BTLE_UART_TX_TX, buffer, buffer_len);
0x1EF8	0xF89D200C  LDRB	R2, [SP, #12]
0x1EFC	0x9902    LDR	R1, [SP, #8]
0x1EFE	0x2009    MOVS	R0, #9
0x1F00	0xF7FFFCD8  BL	_lib_aci_send_data+0
0x1F04	0xF88D0004  STRB	R0, [SP, #4]
;ble_uart.c, 164 :: 		if (status)
0x1F08	0xB118    CBZ	R0, L_ble_uart_tx10
;ble_uart.c, 166 :: 		aci_state.data_credit_available--;
0x1F0A	0x4B06    LDR	R3, [PC, #24]
0x1F0C	0x781A    LDRB	R2, [R3, #0]
0x1F0E	0x1E52    SUBS	R2, R2, #1
0x1F10	0x701A    STRB	R2, [R3, #0]
;ble_uart.c, 167 :: 		}
L_ble_uart_tx10:
;ble_uart.c, 161 :: 		(aci_state.data_credit_available >= 1))
L__ble_uart_tx16:
L__ble_uart_tx15:
;ble_uart.c, 170 :: 		return status;
0x1F12	0xF89D0004  LDRB	R0, [SP, #4]
;ble_uart.c, 171 :: 		}
L_end_ble_uart_tx:
0x1F16	0xF8DDE000  LDR	LR, [SP, #0]
0x1F1A	0xB004    ADD	SP, SP, #16
0x1F1C	0x4770    BX	LR
0x1F1E	0xBF00    NOP
0x1F20	0x03342000  	_aci_state+0
0x1F24	0x03532000  	_aci_state+31
; end of _ble_uart_tx
_lib_aci_send_data:
;lib_aci.c, 397 :: 		bool lib_aci_send_data(uint8_t pipe, uint8_t *p_value, uint8_t size)
; size start address is: 8 (R2)
; p_value start address is: 4 (R1)
; pipe start address is: 0 (R0)
0x18B4	0xB087    SUB	SP, SP, #28
0x18B6	0xF8CDE000  STR	LR, [SP, #0]
0x18BA	0xB2D6    UXTB	R6, R2
; size end address is: 8 (R2)
; p_value end address is: 4 (R1)
; pipe end address is: 0 (R0)
; pipe start address is: 0 (R0)
; p_value start address is: 4 (R1)
; size start address is: 24 (R6)
;lib_aci.c, 399 :: 		bool ret_val = false;
;lib_aci.c, 403 :: 		if(!((p_services_pipe_type_map[pipe-1].pipe_type == ACI_TX) ||
0x18BC	0x1E43    SUBS	R3, R0, #1
0x18BE	0xB21B    SXTH	R3, R3
0x18C0	0x009C    LSLS	R4, R3, #2
0x18C2	0x4B19    LDR	R3, [PC, #100]
0x18C4	0x681B    LDR	R3, [R3, #0]
0x18C6	0x191B    ADDS	R3, R3, R4
0x18C8	0x1C9B    ADDS	R3, R3, #2
0x18CA	0xF9B33000  LDRSH	R3, [R3, #0]
;lib_aci.c, 404 :: 		(p_services_pipe_type_map[pipe-1].pipe_type == ACI_TX_ACK)))
0x18CE	0x2B02    CMP	R3, #2
0x18D0	0xD00C    BEQ	L_lib_aci_send_data26
0x18D2	0x1E43    SUBS	R3, R0, #1
0x18D4	0xB21B    SXTH	R3, R3
0x18D6	0x009C    LSLS	R4, R3, #2
0x18D8	0x4B13    LDR	R3, [PC, #76]
0x18DA	0x681B    LDR	R3, [R3, #0]
0x18DC	0x191B    ADDS	R3, R3, R4
0x18DE	0x1C9B    ADDS	R3, R3, #2
0x18E0	0xF9B33000  LDRSH	R3, [R3, #0]
0x18E4	0x2B04    CMP	R3, #4
0x18E6	0xD001    BEQ	L_lib_aci_send_data26
0x18E8	0x2300    MOVS	R3, #0
0x18EA	0xE000    B	L_lib_aci_send_data25
L_lib_aci_send_data26:
0x18EC	0x2301    MOVS	R3, #1
L_lib_aci_send_data25:
0x18EE	0xB90B    CBNZ	R3, L_lib_aci_send_data27
; pipe end address is: 0 (R0)
; p_value end address is: 4 (R1)
; size end address is: 24 (R6)
;lib_aci.c, 406 :: 		return false;
0x18F0	0x2000    MOVS	R0, #0
0x18F2	0xE014    B	L_end_lib_aci_send_data
;lib_aci.c, 407 :: 		}
L_lib_aci_send_data27:
;lib_aci.c, 409 :: 		if (size > ACI_PIPE_TX_DATA_MAX_LEN)
; size start address is: 24 (R6)
; p_value start address is: 4 (R1)
; pipe start address is: 0 (R0)
0x18F4	0x2E14    CMP	R6, #20
0x18F6	0xD901    BLS	L_lib_aci_send_data28
; pipe end address is: 0 (R0)
; p_value end address is: 4 (R1)
; size end address is: 24 (R6)
;lib_aci.c, 411 :: 		return false;
0x18F8	0x2000    MOVS	R0, #0
0x18FA	0xE010    B	L_end_lib_aci_send_data
;lib_aci.c, 412 :: 		}
L_lib_aci_send_data28:
;lib_aci.c, 414 :: 		aci_cmd_params_send_data.tx_data.pipe_number = pipe;
; size start address is: 24 (R6)
; p_value start address is: 4 (R1)
; pipe start address is: 0 (R0)
0x18FC	0xF88D0004  STRB	R0, [SP, #4]
; pipe end address is: 0 (R0)
;lib_aci.c, 415 :: 		memcpy(&(aci_cmd_params_send_data.tx_data.aci_data[0]), p_value, size);
0x1900	0xF10D0305  ADD	R3, SP, #5
0x1904	0xB2F2    UXTB	R2, R6
; p_value end address is: 4 (R1)
0x1906	0x4618    MOV	R0, R3
0x1908	0xF7FEFCA6  BL	_memcpy+0
;lib_aci.c, 416 :: 		acil_encode_cmd_send_data(&(msg_to_send.buffer[0]), &aci_cmd_params_send_data, size);
0x190C	0xAB01    ADD	R3, SP, #4
0x190E	0xB2F2    UXTB	R2, R6
; size end address is: 24 (R6)
0x1910	0x4619    MOV	R1, R3
0x1912	0x4806    LDR	R0, [PC, #24]
0x1914	0xF7FEFFC8  BL	_acil_encode_cmd_send_data+0
;lib_aci.c, 418 :: 		ret_val = hal_aci_tl_send(&msg_to_send);
0x1918	0x4805    LDR	R0, [PC, #20]
0x191A	0xF7FEFF65  BL	_hal_aci_tl_send+0
;lib_aci.c, 420 :: 		return ret_val;
;lib_aci.c, 421 :: 		}
L_end_lib_aci_send_data:
0x191E	0xF8DDE000  LDR	LR, [SP, #0]
0x1922	0xB007    ADD	SP, SP, #28
0x1924	0x4770    BX	LR
0x1926	0xBF00    NOP
0x1928	0x047C2000  	lib_aci_p_services_pipe_type_map+0
0x192C	0x02E22000  	_msg_to_send+1
0x1930	0x02E12000  	_msg_to_send+0
; end of _lib_aci_send_data
_acil_encode_cmd_send_data:
;acilib.c, 130 :: 		void acil_encode_cmd_send_data(uint8_t *buffer, aci_cmd_params_send_data_t *p_aci_cmd_params_send_data_t, uint8_t data_size)
; data_size start address is: 8 (R2)
; p_aci_cmd_params_send_data_t start address is: 4 (R1)
; buffer start address is: 0 (R0)
0x08A8	0xB081    SUB	SP, SP, #4
0x08AA	0xF8CDE000  STR	LR, [SP, #0]
; data_size end address is: 8 (R2)
; p_aci_cmd_params_send_data_t end address is: 4 (R1)
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
; p_aci_cmd_params_send_data_t start address is: 4 (R1)
; data_size start address is: 8 (R2)
;acilib.c, 132 :: 		*(buffer + OFFSET_ACI_CMD_T_LEN) = MSG_SEND_DATA_BASE_LEN + data_size;
0x08AE	0x1C93    ADDS	R3, R2, #2
0x08B0	0x7003    STRB	R3, [R0, #0]
;acilib.c, 133 :: 		*(buffer + OFFSET_ACI_CMD_T_CMD_OPCODE) = ACI_CMD_SEND_DATA;
0x08B2	0x1C44    ADDS	R4, R0, #1
0x08B4	0x2315    MOVS	R3, #21
0x08B6	0x7023    STRB	R3, [R4, #0]
;acilib.c, 134 :: 		*(buffer + OFFSET_ACI_CMD_T_SEND_DATA + OFFSET_ACI_CMD_PARAMS_SEND_DATA_T_TX_DATA + OFFSET_ACI_TX_DATA_T_PIPE_NUMBER) = p_aci_cmd_params_send_data_t->tx_data.pipe_number;
0x08B8	0x1C84    ADDS	R4, R0, #2
0x08BA	0x780B    LDRB	R3, [R1, #0]
0x08BC	0x7023    STRB	R3, [R4, #0]
;acilib.c, 135 :: 		memcpy((buffer + OFFSET_ACI_CMD_T_SEND_DATA + OFFSET_ACI_CMD_PARAMS_SEND_DATA_T_TX_DATA + OFFSET_ACI_TX_DATA_T_ACI_DATA), &(p_aci_cmd_params_send_data_t->tx_data.aci_data[0]), data_size);
0x08BE	0x1C4C    ADDS	R4, R1, #1
; p_aci_cmd_params_send_data_t end address is: 4 (R1)
0x08C0	0x1C83    ADDS	R3, R0, #2
; buffer end address is: 0 (R0)
0x08C2	0x1C5B    ADDS	R3, R3, #1
; data_size end address is: 8 (R2)
0x08C4	0x4621    MOV	R1, R4
0x08C6	0x4618    MOV	R0, R3
0x08C8	0xF7FFFCC6  BL	_memcpy+0
;acilib.c, 136 :: 		}
L_end_acil_encode_cmd_send_data:
0x08CC	0xF8DDE000  LDR	LR, [SP, #0]
0x08D0	0xB001    ADD	SP, SP, #4
0x08D2	0x4770    BX	LR
; end of _acil_encode_cmd_send_data
_strlen:
;__Lib_CString.c, 143 :: 		
; s start address is: 0 (R0)
0x1E44	0xB081    SUB	SP, SP, #4
0x1E46	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__Lib_CString.c, 146 :: 		
; cp start address is: 0 (R0)
0x1E48	0x4608    MOV	R0, R1
; s end address is: 4 (R1)
; cp end address is: 0 (R0)
0x1E4A	0x460B    MOV	R3, R1
;__Lib_CString.c, 147 :: 		
L_strlen36:
; cp start address is: 0 (R0)
; s start address is: 12 (R3)
0x1E4C	0x4602    MOV	R2, R0
0x1E4E	0x1C40    ADDS	R0, R0, #1
0x1E50	0x7811    LDRB	R1, [R2, #0]
0x1E52	0xB101    CBZ	R1, L_strlen37
;__Lib_CString.c, 148 :: 		
0x1E54	0xE7FA    B	L_strlen36
L_strlen37:
;__Lib_CString.c, 149 :: 		
0x1E56	0x1AC1    SUB	R1, R0, R3
; s end address is: 12 (R3)
; cp end address is: 0 (R0)
0x1E58	0x1E49    SUBS	R1, R1, #1
0x1E5A	0xB208    SXTH	R0, R1
;__Lib_CString.c, 150 :: 		
L_end_strlen:
0x1E5C	0xB001    ADD	SP, SP, #4
0x1E5E	0x4770    BX	LR
; end of _strlen
_ble_uart_rx:
;ble_uart.c, 179 :: 		void ble_uart_rx(uint8_t *buffer, uint8_t len)
; len start address is: 4 (R1)
; buffer start address is: 0 (R0)
0x1C5C	0xB081    SUB	SP, SP, #4
0x1C5E	0xF8CDE000  STR	LR, [SP, #0]
0x1C62	0x4607    MOV	R7, R0
0x1C64	0xFA5FF881  UXTB	R8, R1
; len end address is: 4 (R1)
; buffer end address is: 0 (R0)
; buffer start address is: 28 (R7)
; len start address is: 32 (R8)
;ble_uart.c, 182 :: 		UART1_Write_Text("Received data: ");
0x1C68	0x4A0A    LDR	R2, [PC, #40]
0x1C6A	0x4610    MOV	R0, R2
0x1C6C	0xF000FF88  BL	_UART1_Write_Text+0
;ble_uart.c, 184 :: 		for (i = 0; i < len; ++i)
; i start address is: 24 (R6)
0x1C70	0x2600    MOVS	R6, #0
; buffer end address is: 28 (R7)
; len end address is: 32 (R8)
; i end address is: 24 (R6)
0x1C72	0x463D    MOV	R5, R7
0x1C74	0xFA5FF488  UXTB	R4, R8
L_ble_uart_rx11:
; i start address is: 24 (R6)
; buffer start address is: 20 (R5)
; len start address is: 16 (R4)
; buffer start address is: 20 (R5)
; buffer end address is: 20 (R5)
0x1C78	0x42A6    CMP	R6, R4
0x1C7A	0xD206    BCS	L_ble_uart_rx12
; buffer end address is: 20 (R5)
;ble_uart.c, 186 :: 		UART1_Write((char) buffer[i]);
; buffer start address is: 20 (R5)
0x1C7C	0x19AA    ADDS	R2, R5, R6
0x1C7E	0x7810    LDRB	R0, [R2, #0]
0x1C80	0xF000FF8C  BL	_UART1_Write+0
;ble_uart.c, 184 :: 		for (i = 0; i < len; ++i)
0x1C84	0x1C76    ADDS	R6, R6, #1
0x1C86	0xB2F6    UXTB	R6, R6
;ble_uart.c, 187 :: 		}
; len end address is: 16 (R4)
; buffer end address is: 20 (R5)
; i end address is: 24 (R6)
0x1C88	0xE7F6    B	L_ble_uart_rx11
L_ble_uart_rx12:
;ble_uart.c, 188 :: 		}
L_end_ble_uart_rx:
0x1C8A	0xF8DDE000  LDR	LR, [SP, #0]
0x1C8E	0xB001    ADD	SP, SP, #4
0x1C90	0x4770    BX	LR
0x1C92	0xBF00    NOP
0x1C94	0x00CF2000  	?lstr6_ble_uart+0
; end of _ble_uart_rx
_uart_process_control_point_rx:
;uart_aci.c, 75 :: 		bool uart_process_control_point_rx(uint8_t *byte, uint8_t length)
; status start address is: 12 (R3)
; byte start address is: 0 (R0)
0x1DAC	0xB083    SUB	SP, SP, #12
0x1DAE	0xF8CDE000  STR	LR, [SP, #0]
;uart_aci.c, 77 :: 		bool status = false;
;uart_aci.c, 75 :: 		bool uart_process_control_point_rx(uint8_t *byte, uint8_t length)
;uart_aci.c, 77 :: 		bool status = false;
;uart_aci.c, 75 :: 		bool uart_process_control_point_rx(uint8_t *byte, uint8_t length)
0x1DB2	0x4601    MOV	R1, R0
; status end address is: 12 (R3)
; byte end address is: 0 (R0)
; byte start address is: 4 (R1)
;uart_aci.c, 77 :: 		bool status = false;
; status start address is: 12 (R3)
0x1DB4	0x2300    MOVS	R3, #0
;uart_aci.c, 80 :: 		if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_TX) )
0x1DB6	0xF88D3004  STRB	R3, [SP, #4]
0x1DBA	0x9102    STR	R1, [SP, #8]
0x1DBC	0x210A    MOVS	R1, #10
0x1DBE	0x481F    LDR	R0, [PC, #124]
0x1DC0	0xF000F84E  BL	_lib_aci_is_pipe_available+0
0x1DC4	0x9902    LDR	R1, [SP, #8]
0x1DC6	0xF89D3004  LDRB	R3, [SP, #4]
0x1DCA	0x2800    CMP	R0, #0
0x1DCC	0xD031    BEQ	L__uart_process_control_point_rx46
;uart_aci.c, 83 :: 		switch(*byte)
0x1DCE	0xE022    B	L_uart_process_control_point_rx3
; byte end address is: 4 (R1)
; status end address is: 12 (R3)
;uart_aci.c, 89 :: 		case UART_OVER_BLE_DISCONNECT:
L_uart_process_control_point_rx5:
;uart_aci.c, 94 :: 		lib_aci_disconnect(&aci_state, ACI_REASON_TERMINATE);
0x1DD0	0x2101    MOVS	R1, #1
0x1DD2	0x481A    LDR	R0, [PC, #104]
0x1DD4	0xF7FFFF14  BL	_lib_aci_disconnect+0
;uart_aci.c, 95 :: 		status = true;
; status start address is: 0 (R0)
0x1DD8	0x2001    MOVS	R0, #1
;uart_aci.c, 96 :: 		break;
; status end address is: 0 (R0)
0x1DDA	0xE029    B	L_uart_process_control_point_rx4
;uart_aci.c, 102 :: 		case UART_OVER_BLE_LINK_TIMING_REQ:
L_uart_process_control_point_rx6:
;uart_aci.c, 112 :: 		conn_params = (aci_ll_conn_params_t *)(byte+1);
; byte start address is: 4 (R1)
0x1DDC	0x1C4E    ADDS	R6, R1, #1
; byte end address is: 4 (R1)
;uart_aci.c, 116 :: 		conn_params->timeout_mult);
0x1DDE	0x1DB2    ADDS	R2, R6, #6
0x1DE0	0x8812    LDRH	R2, [R2, #0]
0x1DE2	0xB295    UXTH	R5, R2
;uart_aci.c, 115 :: 		conn_params->slave_latency,
0x1DE4	0x1D32    ADDS	R2, R6, #4
0x1DE6	0x8812    LDRH	R2, [R2, #0]
0x1DE8	0xB294    UXTH	R4, R2
;uart_aci.c, 114 :: 		conn_params->max_conn_interval,
0x1DEA	0x1CB2    ADDS	R2, R6, #2
0x1DEC	0x8812    LDRH	R2, [R2, #0]
0x1DEE	0xB293    UXTH	R3, R2
;uart_aci.c, 113 :: 		lib_aci_change_timing( conn_params->min_conn_interval,
0x1DF0	0x8832    LDRH	R2, [R6, #0]
;uart_aci.c, 114 :: 		conn_params->max_conn_interval,
0x1DF2	0xB299    UXTH	R1, R3
;uart_aci.c, 116 :: 		conn_params->timeout_mult);
0x1DF4	0xB2AB    UXTH	R3, R5
;uart_aci.c, 113 :: 		lib_aci_change_timing( conn_params->min_conn_interval,
0x1DF6	0xB290    UXTH	R0, R2
;uart_aci.c, 115 :: 		conn_params->slave_latency,
0x1DF8	0xB2A2    UXTH	R2, R4
;uart_aci.c, 116 :: 		conn_params->timeout_mult);
0x1DFA	0xF7FFFD3F  BL	_lib_aci_change_timing+0
;uart_aci.c, 117 :: 		status = true;
; status start address is: 0 (R0)
0x1DFE	0x2001    MOVS	R0, #1
;uart_aci.c, 118 :: 		break;
; status end address is: 0 (R0)
0x1E00	0xE016    B	L_uart_process_control_point_rx4
;uart_aci.c, 123 :: 		case UART_OVER_BLE_TRANSMIT_STOP:
L_uart_process_control_point_rx7:
;uart_aci.c, 128 :: 		uart_over_ble.uart_rts_local = false;
0x1E02	0x2300    MOVS	R3, #0
0x1E04	0x4A0E    LDR	R2, [PC, #56]
0x1E06	0x7013    STRB	R3, [R2, #0]
;uart_aci.c, 129 :: 		status = true;
; status start address is: 0 (R0)
0x1E08	0x2001    MOVS	R0, #1
;uart_aci.c, 130 :: 		break;
; status end address is: 0 (R0)
0x1E0A	0xE011    B	L_uart_process_control_point_rx4
;uart_aci.c, 136 :: 		case UART_OVER_BLE_TRANSMIT_OK:
L_uart_process_control_point_rx8:
;uart_aci.c, 141 :: 		uart_over_ble.uart_rts_local = true;
0x1E0C	0x2301    MOVS	R3, #1
0x1E0E	0x4A0C    LDR	R2, [PC, #48]
0x1E10	0x7013    STRB	R3, [R2, #0]
;uart_aci.c, 142 :: 		status = true;
; status start address is: 0 (R0)
0x1E12	0x2001    MOVS	R0, #1
;uart_aci.c, 143 :: 		break;
; status end address is: 0 (R0)
0x1E14	0xE00C    B	L_uart_process_control_point_rx4
;uart_aci.c, 144 :: 		}
L_uart_process_control_point_rx3:
; status start address is: 12 (R3)
; byte start address is: 4 (R1)
0x1E16	0x780A    LDRB	R2, [R1, #0]
0x1E18	0x2A01    CMP	R2, #1
0x1E1A	0xD0D9    BEQ	L_uart_process_control_point_rx5
0x1E1C	0x780A    LDRB	R2, [R1, #0]
0x1E1E	0x2A02    CMP	R2, #2
0x1E20	0xD0DC    BEQ	L_uart_process_control_point_rx6
0x1E22	0x780A    LDRB	R2, [R1, #0]
0x1E24	0x2A03    CMP	R2, #3
0x1E26	0xD0EC    BEQ	L_uart_process_control_point_rx7
0x1E28	0x780A    LDRB	R2, [R1, #0]
; byte end address is: 4 (R1)
0x1E2A	0x2A04    CMP	R2, #4
0x1E2C	0xD0EE    BEQ	L_uart_process_control_point_rx8
; status end address is: 12 (R3)
0x1E2E	0xB2D8    UXTB	R0, R3
L_uart_process_control_point_rx4:
;uart_aci.c, 145 :: 		}
; status start address is: 0 (R0)
; status end address is: 0 (R0)
0x1E30	0xE000    B	L_uart_process_control_point_rx2
L__uart_process_control_point_rx46:
;uart_aci.c, 80 :: 		if (lib_aci_is_pipe_available(&aci_state, PIPE_UART_OVER_BTLE_UART_CONTROL_POINT_TX) )
0x1E32	0xB2D8    UXTB	R0, R3
;uart_aci.c, 145 :: 		}
L_uart_process_control_point_rx2:
;uart_aci.c, 147 :: 		return status;
; status start address is: 0 (R0)
; status end address is: 0 (R0)
;uart_aci.c, 148 :: 		}
L_end_uart_process_control_point_rx:
0x1E34	0xF8DDE000  LDR	LR, [SP, #0]
0x1E38	0xB003    ADD	SP, SP, #12
0x1E3A	0x4770    BX	LR
0x1E3C	0x03342000  	_aci_state+0
0x1E40	0x048A2000  	uart_aci_uart_over_ble+0
; end of _uart_process_control_point_rx
_lib_aci_disconnect:
;lib_aci.c, 325 :: 		bool lib_aci_disconnect(aci_state_t *aci_stat, aci_disconnect_reason_t reason)
; reason start address is: 4 (R1)
0x1C00	0xB083    SUB	SP, SP, #12
0x1C02	0xF8CDE000  STR	LR, [SP, #0]
0x1C06	0x9002    STR	R0, [SP, #8]
0x1C08	0xB2C8    UXTB	R0, R1
; reason end address is: 4 (R1)
; reason start address is: 0 (R0)
;lib_aci.c, 330 :: 		aci_cmd_params_disconnect.reason = reason;
0x1C0A	0xF88D0005  STRB	R0, [SP, #5]
; reason end address is: 0 (R0)
;lib_aci.c, 331 :: 		acil_encode_cmd_disconnect(&(msg_to_send.buffer[0]), &aci_cmd_params_disconnect);
0x1C0E	0xF10D0205  ADD	R2, SP, #5
0x1C12	0x4611    MOV	R1, R2
0x1C14	0x480F    LDR	R0, [PC, #60]
0x1C16	0xF7FFF89F  BL	_acil_encode_cmd_disconnect+0
;lib_aci.c, 332 :: 		ret_val = hal_aci_tl_send(&msg_to_send);
0x1C1A	0x480F    LDR	R0, [PC, #60]
0x1C1C	0xF7FEFDE4  BL	_hal_aci_tl_send+0
0x1C20	0xF88D0004  STRB	R0, [SP, #4]
;lib_aci.c, 334 :: 		if (ret_val)
0x1C24	0xB180    CBZ	R0, L_lib_aci_disconnect21
;lib_aci.c, 340 :: 		for (i=0; i < PIPES_ARRAY_SIZE; i++)
; i start address is: 0 (R0)
0x1C26	0x2000    MOVS	R0, #0
; i end address is: 0 (R0)
L_lib_aci_disconnect22:
; i start address is: 0 (R0)
0x1C28	0x2808    CMP	R0, #8
0x1C2A	0xD20D    BCS	L_lib_aci_disconnect23
;lib_aci.c, 342 :: 		aci_stat->pipes_open_bitmap[i] = 0;
0x1C2C	0x9A02    LDR	R2, [SP, #8]
0x1C2E	0x3226    ADDS	R2, #38
0x1C30	0x1813    ADDS	R3, R2, R0
0x1C32	0x2200    MOVS	R2, #0
0x1C34	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 343 :: 		aci_stat->pipes_closed_bitmap[i] = 0;
0x1C36	0x9A02    LDR	R2, [SP, #8]
0x1C38	0x322E    ADDS	R2, #46
0x1C3A	0x1813    ADDS	R3, R2, R0
0x1C3C	0x2200    MOVS	R2, #0
0x1C3E	0x701A    STRB	R2, [R3, #0]
;lib_aci.c, 340 :: 		for (i=0; i < PIPES_ARRAY_SIZE; i++)
0x1C40	0x1C42    ADDS	R2, R0, #1
; i end address is: 0 (R0)
; i start address is: 4 (R1)
0x1C42	0xB2D1    UXTB	R1, R2
;lib_aci.c, 344 :: 		}
0x1C44	0xB2C8    UXTB	R0, R1
; i end address is: 4 (R1)
0x1C46	0xE7EF    B	L_lib_aci_disconnect22
L_lib_aci_disconnect23:
;lib_aci.c, 345 :: 		}
L_lib_aci_disconnect21:
;lib_aci.c, 346 :: 		return ret_val;
0x1C48	0xF89D0004  LDRB	R0, [SP, #4]
;lib_aci.c, 347 :: 		}
L_end_lib_aci_disconnect:
0x1C4C	0xF8DDE000  LDR	LR, [SP, #0]
0x1C50	0xB003    ADD	SP, SP, #12
0x1C52	0x4770    BX	LR
0x1C54	0x02E22000  	_msg_to_send+1
0x1C58	0x02E12000  	_msg_to_send+0
; end of _lib_aci_disconnect
_acil_encode_cmd_disconnect:
;acilib.c, 92 :: 		void acil_encode_cmd_disconnect(uint8_t *buffer, aci_cmd_params_disconnect_t *p_aci_cmd_params_disconnect)
; p_aci_cmd_params_disconnect start address is: 4 (R1)
; buffer start address is: 0 (R0)
; p_aci_cmd_params_disconnect end address is: 4 (R1)
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
; p_aci_cmd_params_disconnect start address is: 4 (R1)
;acilib.c, 94 :: 		*(buffer + OFFSET_ACI_CMD_T_LEN) = MSG_DISCONNECT_LEN;
0x0D58	0x2202    MOVS	R2, #2
0x0D5A	0x7002    STRB	R2, [R0, #0]
;acilib.c, 95 :: 		*(buffer + OFFSET_ACI_CMD_T_CMD_OPCODE) = ACI_CMD_DISCONNECT;
0x0D5C	0x1C43    ADDS	R3, R0, #1
0x0D5E	0x2211    MOVS	R2, #17
0x0D60	0x701A    STRB	R2, [R3, #0]
;acilib.c, 96 :: 		*(buffer + OFFSET_ACI_CMD_T_DISCONNECT + OFFSET_ACI_CMD_PARAMS_DISCONNECT_T_REASON) = (uint8_t)(p_aci_cmd_params_disconnect->reason);
0x0D62	0x1C83    ADDS	R3, R0, #2
; buffer end address is: 0 (R0)
0x0D64	0x780A    LDRB	R2, [R1, #0]
; p_aci_cmd_params_disconnect end address is: 4 (R1)
0x0D66	0x701A    STRB	R2, [R3, #0]
;acilib.c, 97 :: 		}
L_end_acil_encode_cmd_disconnect:
0x0D68	0x4770    BX	LR
; end of _acil_encode_cmd_disconnect
_lib_aci_change_timing:
;lib_aci.c, 451 :: 		bool lib_aci_change_timing(uint16_t minimun_cx_interval, uint16_t maximum_cx_interval, uint16_t slave_latency, uint16_t timeout)
; timeout start address is: 12 (R3)
; slave_latency start address is: 8 (R2)
; maximum_cx_interval start address is: 4 (R1)
; minimun_cx_interval start address is: 0 (R0)
0x187C	0xB083    SUB	SP, SP, #12
0x187E	0xF8CDE000  STR	LR, [SP, #0]
; timeout end address is: 12 (R3)
; slave_latency end address is: 8 (R2)
; maximum_cx_interval end address is: 4 (R1)
; minimun_cx_interval end address is: 0 (R0)
; minimun_cx_interval start address is: 0 (R0)
; maximum_cx_interval start address is: 4 (R1)
; slave_latency start address is: 8 (R2)
; timeout start address is: 12 (R3)
;lib_aci.c, 454 :: 		aci_cmd_params_change_timing.conn_params.min_conn_interval = minimun_cx_interval;
0x1882	0xF8AD0004  STRH	R0, [SP, #4]
; minimun_cx_interval end address is: 0 (R0)
;lib_aci.c, 455 :: 		aci_cmd_params_change_timing.conn_params.max_conn_interval = maximum_cx_interval;
0x1886	0xF8AD1006  STRH	R1, [SP, #6]
; maximum_cx_interval end address is: 4 (R1)
;lib_aci.c, 456 :: 		aci_cmd_params_change_timing.conn_params.slave_latency     = slave_latency;
0x188A	0xF8AD2008  STRH	R2, [SP, #8]
; slave_latency end address is: 8 (R2)
;lib_aci.c, 457 :: 		aci_cmd_params_change_timing.conn_params.timeout_mult      = timeout;
0x188E	0xF8AD300A  STRH	R3, [SP, #10]
; timeout end address is: 12 (R3)
;lib_aci.c, 458 :: 		acil_encode_cmd_change_timing_req(&(msg_to_send.buffer[0]), &aci_cmd_params_change_timing);
0x1892	0xAC01    ADD	R4, SP, #4
0x1894	0x4621    MOV	R1, R4
0x1896	0x4805    LDR	R0, [PC, #20]
0x1898	0xF7FFFA7A  BL	_acil_encode_cmd_change_timing_req+0
;lib_aci.c, 459 :: 		return hal_aci_tl_send(&msg_to_send);
0x189C	0x4804    LDR	R0, [PC, #16]
0x189E	0xF7FEFFA3  BL	_hal_aci_tl_send+0
;lib_aci.c, 460 :: 		}
L_end_lib_aci_change_timing:
0x18A2	0xF8DDE000  LDR	LR, [SP, #0]
0x18A6	0xB003    ADD	SP, SP, #12
0x18A8	0x4770    BX	LR
0x18AA	0xBF00    NOP
0x18AC	0x02E22000  	_msg_to_send+1
0x18B0	0x02E12000  	_msg_to_send+0
; end of _lib_aci_change_timing
_acil_encode_cmd_change_timing_req:
;acilib.c, 192 :: 		void acil_encode_cmd_change_timing_req(uint8_t *buffer, aci_cmd_params_change_timing_t *p_aci_cmd_params_change_timing)
; p_aci_cmd_params_change_timing start address is: 4 (R1)
; buffer start address is: 0 (R0)
; p_aci_cmd_params_change_timing end address is: 4 (R1)
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
; p_aci_cmd_params_change_timing start address is: 4 (R1)
;acilib.c, 194 :: 		*(buffer + OFFSET_ACI_CMD_T_LEN) = MSG_CHANGE_TIMING_LEN;
0x0D90	0x2209    MOVS	R2, #9
0x0D92	0x7002    STRB	R2, [R0, #0]
;acilib.c, 195 :: 		*(buffer + OFFSET_ACI_CMD_T_CMD_OPCODE) = ACI_CMD_CHANGE_TIMING;
0x0D94	0x1C43    ADDS	R3, R0, #1
0x0D96	0x2213    MOVS	R2, #19
0x0D98	0x701A    STRB	R2, [R3, #0]
;acilib.c, 196 :: 		*(buffer + OFFSET_ACI_CMD_T_CHANGE_TIMING + OFFSET_ACI_CMD_PARAMS_CHANGE_TIMING_T_CONN_PARAMS + OFFSET_ACI_LL_CONN_PARAMS_T_MIN_CONN_INTERVAL_MSB) = (uint8_t)(p_aci_cmd_params_change_timing->conn_params.min_conn_interval >> 8);
0x0D9A	0x1C82    ADDS	R2, R0, #2
0x0D9C	0x1C53    ADDS	R3, R2, #1
0x0D9E	0x880A    LDRH	R2, [R1, #0]
0x0DA0	0x0A12    LSRS	R2, R2, #8
0x0DA2	0xB2D2    UXTB	R2, R2
0x0DA4	0x701A    STRB	R2, [R3, #0]
;acilib.c, 197 :: 		*(buffer + OFFSET_ACI_CMD_T_CHANGE_TIMING + OFFSET_ACI_CMD_PARAMS_CHANGE_TIMING_T_CONN_PARAMS + OFFSET_ACI_LL_CONN_PARAMS_T_MIN_CONN_INTERVAL_LSB) = (uint8_t)(p_aci_cmd_params_change_timing->conn_params.min_conn_interval);
0x0DA6	0x1C83    ADDS	R3, R0, #2
0x0DA8	0x880A    LDRH	R2, [R1, #0]
0x0DAA	0xB2D2    UXTB	R2, R2
0x0DAC	0x701A    STRB	R2, [R3, #0]
;acilib.c, 198 :: 		*(buffer + OFFSET_ACI_CMD_T_CHANGE_TIMING + OFFSET_ACI_CMD_PARAMS_CHANGE_TIMING_T_CONN_PARAMS + OFFSET_ACI_LL_CONN_PARAMS_T_MAX_CONN_INTERVAL_MSB) = (uint8_t)(p_aci_cmd_params_change_timing->conn_params.max_conn_interval >> 8);
0x0DAE	0x1C82    ADDS	R2, R0, #2
0x0DB0	0x1CD3    ADDS	R3, R2, #3
0x0DB2	0x1C8A    ADDS	R2, R1, #2
0x0DB4	0x8812    LDRH	R2, [R2, #0]
0x0DB6	0x0A12    LSRS	R2, R2, #8
0x0DB8	0xB2D2    UXTB	R2, R2
0x0DBA	0x701A    STRB	R2, [R3, #0]
;acilib.c, 199 :: 		*(buffer + OFFSET_ACI_CMD_T_CHANGE_TIMING + OFFSET_ACI_CMD_PARAMS_CHANGE_TIMING_T_CONN_PARAMS + OFFSET_ACI_LL_CONN_PARAMS_T_MAX_CONN_INTERVAL_LSB) = (uint8_t)(p_aci_cmd_params_change_timing->conn_params.max_conn_interval);
0x0DBC	0x1C82    ADDS	R2, R0, #2
0x0DBE	0x1C93    ADDS	R3, R2, #2
0x0DC0	0x1C8A    ADDS	R2, R1, #2
0x0DC2	0x8812    LDRH	R2, [R2, #0]
0x0DC4	0xB2D2    UXTB	R2, R2
0x0DC6	0x701A    STRB	R2, [R3, #0]
;acilib.c, 200 :: 		*(buffer + OFFSET_ACI_CMD_T_CHANGE_TIMING + OFFSET_ACI_CMD_PARAMS_CHANGE_TIMING_T_CONN_PARAMS + OFFSET_ACI_LL_CONN_PARAMS_T_SLAVE_LATENCY_MSB    ) = (uint8_t)(p_aci_cmd_params_change_timing->conn_params.slave_latency >> 8);
0x0DC8	0x1C82    ADDS	R2, R0, #2
0x0DCA	0x1D53    ADDS	R3, R2, #5
0x0DCC	0x1D0A    ADDS	R2, R1, #4
0x0DCE	0x8812    LDRH	R2, [R2, #0]
0x0DD0	0x0A12    LSRS	R2, R2, #8
0x0DD2	0xB2D2    UXTB	R2, R2
0x0DD4	0x701A    STRB	R2, [R3, #0]
;acilib.c, 201 :: 		*(buffer + OFFSET_ACI_CMD_T_CHANGE_TIMING + OFFSET_ACI_CMD_PARAMS_CHANGE_TIMING_T_CONN_PARAMS + OFFSET_ACI_LL_CONN_PARAMS_T_SLAVE_LATENCY_LSB    ) = (uint8_t)(p_aci_cmd_params_change_timing->conn_params.slave_latency);
0x0DD6	0x1C82    ADDS	R2, R0, #2
0x0DD8	0x1D13    ADDS	R3, R2, #4
0x0DDA	0x1D0A    ADDS	R2, R1, #4
0x0DDC	0x8812    LDRH	R2, [R2, #0]
0x0DDE	0xB2D2    UXTB	R2, R2
0x0DE0	0x701A    STRB	R2, [R3, #0]
;acilib.c, 202 :: 		*(buffer + OFFSET_ACI_CMD_T_CHANGE_TIMING + OFFSET_ACI_CMD_PARAMS_CHANGE_TIMING_T_CONN_PARAMS + OFFSET_ACI_LL_CONN_PARAMS_T_TIMEOUT_MULT_MSB     ) = (uint8_t)(p_aci_cmd_params_change_timing->conn_params.timeout_mult >> 8);
0x0DE2	0x1C82    ADDS	R2, R0, #2
0x0DE4	0x1DD3    ADDS	R3, R2, #7
0x0DE6	0x1D8A    ADDS	R2, R1, #6
0x0DE8	0x8812    LDRH	R2, [R2, #0]
0x0DEA	0x0A12    LSRS	R2, R2, #8
0x0DEC	0xB2D2    UXTB	R2, R2
0x0DEE	0x701A    STRB	R2, [R3, #0]
;acilib.c, 203 :: 		*(buffer + OFFSET_ACI_CMD_T_CHANGE_TIMING + OFFSET_ACI_CMD_PARAMS_CHANGE_TIMING_T_CONN_PARAMS + OFFSET_ACI_LL_CONN_PARAMS_T_TIMEOUT_MULT_LSB     ) = (uint8_t)(p_aci_cmd_params_change_timing->conn_params.timeout_mult);
0x0DF0	0x1C82    ADDS	R2, R0, #2
; buffer end address is: 0 (R0)
0x0DF2	0x1D93    ADDS	R3, R2, #6
0x0DF4	0x1D8A    ADDS	R2, R1, #6
; p_aci_cmd_params_change_timing end address is: 4 (R1)
0x0DF6	0x8812    LDRH	R2, [R2, #0]
0x0DF8	0xB2D2    UXTB	R2, R2
0x0DFA	0x701A    STRB	R2, [R3, #0]
;acilib.c, 204 :: 		}
L_end_acil_encode_cmd_change_timing_req:
0x0DFC	0x4770    BX	LR
; end of _acil_encode_cmd_change_timing_req
_do_aci_setup:
;aci_setup.c, 89 :: 		uint8_t do_aci_setup(aci_state_t *aci_stat)
0x1CF4	0xB086    SUB	SP, SP, #24
0x1CF6	0xF8CDE000  STR	LR, [SP, #0]
0x1CFA	0x9005    STR	R0, [SP, #20]
;aci_setup.c, 91 :: 		uint8_t setup_offset         = 0;
0x1CFC	0xF10D0B04  ADD	R11, SP, #4
0x1D00	0xF10B0A10  ADD	R10, R11, #16
0x1D04	0xF8DFC09C  LDR	R12, [PC, #156]
0x1D08	0xF000FF64  BL	___CC2DW+0
;aci_setup.c, 92 :: 		uint32_t i                   = 0x0000;
;aci_setup.c, 93 :: 		aci_evt_t * aci_evt          = NULL;
;aci_setup.c, 94 :: 		aci_status_code_t cmd_status = ACI_STATUS_ERROR_CRC_MISMATCH;
;aci_setup.c, 100 :: 		hal_aci_evt_t  *aci_data = (hal_aci_evt_t *)&msg_to_send;
;aci_setup.c, 106 :: 		if (!lib_aci_command_queue_empty())
0x1D0C	0xF7FFFEF0  BL	_lib_aci_command_queue_empty+0
0x1D10	0xB908    CBNZ	R0, L_do_aci_setup3
;aci_setup.c, 108 :: 		return SETUP_FAIL_COMMAND_QUEUE_NOT_EMPTY;
0x1D12	0x2001    MOVS	R0, #1
0x1D14	0xE042    B	L_end_do_aci_setup
;aci_setup.c, 109 :: 		}
L_do_aci_setup3:
;aci_setup.c, 115 :: 		if (lib_aci_event_peek(aci_data))
0x1D16	0x9804    LDR	R0, [SP, #16]
0x1D18	0xF7FFFE0C  BL	_lib_aci_event_peek+0
0x1D1C	0xB108    CBZ	R0, L_do_aci_setup4
;aci_setup.c, 117 :: 		return SETUP_FAIL_EVENT_QUEUE_NOT_EMPTY;
0x1D1E	0x2002    MOVS	R0, #2
0x1D20	0xE03C    B	L_end_do_aci_setup
;aci_setup.c, 118 :: 		}
L_do_aci_setup4:
;aci_setup.c, 121 :: 		aci_setup_fill(aci_stat, &setup_offset);
0x1D22	0xA901    ADD	R1, SP, #4
0x1D24	0x9805    LDR	R0, [SP, #20]
0x1D26	0xF7FFF8A5  BL	aci_setup_aci_setup_fill+0
;aci_setup.c, 123 :: 		while (cmd_status != ACI_STATUS_TRANSACTION_COMPLETE)
L_do_aci_setup5:
0x1D2A	0xF89D100C  LDRB	R1, [SP, #12]
0x1D2E	0x2902    CMP	R1, #2
0x1D30	0xD033    BEQ	L_do_aci_setup6
;aci_setup.c, 129 :: 		if (i++ > 0xFFFFE)
0x1D32	0x9A02    LDR	R2, [SP, #8]
0x1D34	0x9902    LDR	R1, [SP, #8]
0x1D36	0x1C49    ADDS	R1, R1, #1
0x1D38	0x9102    STR	R1, [SP, #8]
0x1D3A	0x491B    LDR	R1, [PC, #108]
0x1D3C	0x428A    CMP	R2, R1
0x1D3E	0xD901    BLS	L_do_aci_setup7
;aci_setup.c, 131 :: 		return SETUP_FAIL_TIMEOUT;
0x1D40	0x2003    MOVS	R0, #3
0x1D42	0xE02B    B	L_end_do_aci_setup
;aci_setup.c, 132 :: 		}
L_do_aci_setup7:
;aci_setup.c, 134 :: 		if (lib_aci_event_peek(aci_data))
0x1D44	0x9804    LDR	R0, [SP, #16]
0x1D46	0xF7FFFDF5  BL	_lib_aci_event_peek+0
0x1D4A	0xB328    CBZ	R0, L_do_aci_setup8
;aci_setup.c, 136 :: 		aci_evt = &(aci_data->evt);
0x1D4C	0x9904    LDR	R1, [SP, #16]
0x1D4E	0x1C49    ADDS	R1, R1, #1
; aci_evt start address is: 0 (R0)
0x1D50	0x4608    MOV	R0, R1
;aci_setup.c, 138 :: 		if (ACI_EVT_CMD_RSP != aci_evt->evt_opcode)
0x1D52	0x1C49    ADDS	R1, R1, #1
0x1D54	0x7809    LDRB	R1, [R1, #0]
0x1D56	0x2984    CMP	R1, #132
0x1D58	0xD001    BEQ	L_do_aci_setup9
; aci_evt end address is: 0 (R0)
;aci_setup.c, 141 :: 		return SETUP_FAIL_NOT_COMMAND_RESPONSE;
0x1D5A	0x2005    MOVS	R0, #5
0x1D5C	0xE01E    B	L_end_do_aci_setup
;aci_setup.c, 142 :: 		}
L_do_aci_setup9:
;aci_setup.c, 144 :: 		cmd_status = (aci_status_code_t) aci_evt->params.cmd_rsp.cmd_status;
; aci_evt start address is: 0 (R0)
0x1D5E	0x1C81    ADDS	R1, R0, #2
; aci_evt end address is: 0 (R0)
0x1D60	0x1C49    ADDS	R1, R1, #1
0x1D62	0x7809    LDRB	R1, [R1, #0]
0x1D64	0xF88D100C  STRB	R1, [SP, #12]
;aci_setup.c, 145 :: 		switch (cmd_status)
0x1D68	0xE009    B	L_do_aci_setup10
;aci_setup.c, 147 :: 		case ACI_STATUS_TRANSACTION_CONTINUE:
L_do_aci_setup12:
;aci_setup.c, 149 :: 		i = 0;
0x1D6A	0x2100    MOVS	R1, #0
0x1D6C	0x9102    STR	R1, [SP, #8]
;aci_setup.c, 154 :: 		aci_setup_fill(aci_stat, &setup_offset);
0x1D6E	0xA901    ADD	R1, SP, #4
0x1D70	0x9805    LDR	R0, [SP, #20]
0x1D72	0xF7FFF87F  BL	aci_setup_aci_setup_fill+0
;aci_setup.c, 155 :: 		break;
0x1D76	0xE00B    B	L_do_aci_setup11
;aci_setup.c, 157 :: 		case ACI_STATUS_TRANSACTION_COMPLETE:
L_do_aci_setup13:
;aci_setup.c, 159 :: 		break;
0x1D78	0xE00A    B	L_do_aci_setup11
;aci_setup.c, 161 :: 		default:
L_do_aci_setup14:
;aci_setup.c, 163 :: 		return SETUP_FAIL_NOT_SETUP_EVENT;
0x1D7A	0x2004    MOVS	R0, #4
0x1D7C	0xE00E    B	L_end_do_aci_setup
;aci_setup.c, 164 :: 		}
L_do_aci_setup10:
0x1D7E	0xF89D100C  LDRB	R1, [SP, #12]
0x1D82	0x2901    CMP	R1, #1
0x1D84	0xD0F1    BEQ	L_do_aci_setup12
0x1D86	0xF89D100C  LDRB	R1, [SP, #12]
0x1D8A	0x2902    CMP	R1, #2
0x1D8C	0xD0F4    BEQ	L_do_aci_setup13
0x1D8E	0xE7F4    B	L_do_aci_setup14
L_do_aci_setup11:
;aci_setup.c, 170 :: 		lib_aci_event_get (aci_stat, aci_data);
0x1D90	0x9904    LDR	R1, [SP, #16]
0x1D92	0x9805    LDR	R0, [SP, #20]
0x1D94	0xF7FEFDD2  BL	_lib_aci_event_get+0
;aci_setup.c, 171 :: 		}
L_do_aci_setup8:
;aci_setup.c, 172 :: 		}
0x1D98	0xE7C7    B	L_do_aci_setup5
L_do_aci_setup6:
;aci_setup.c, 174 :: 		return SETUP_SUCCESS;
0x1D9A	0x2000    MOVS	R0, #0
;aci_setup.c, 175 :: 		}
L_end_do_aci_setup:
0x1D9C	0xF8DDE000  LDR	LR, [SP, #0]
0x1DA0	0xB006    ADD	SP, SP, #24
0x1DA2	0x4770    BX	LR
0x1DA4	0x3B830000  	?ICSdo_aci_setup_setup_offset_L0+0
0x1DA8	0xFFFE000F  	#1048574
; end of _do_aci_setup
_lib_aci_command_queue_empty:
;lib_aci.c, 754 :: 		bool lib_aci_command_queue_empty(void)
0x1AF0	0xB081    SUB	SP, SP, #4
0x1AF2	0xF8CDE000  STR	LR, [SP, #0]
;lib_aci.c, 756 :: 		return hal_aci_tl_tx_q_empty();
0x1AF6	0xF7FEFEED  BL	_hal_aci_tl_tx_q_empty+0
;lib_aci.c, 757 :: 		}
L_end_lib_aci_command_queue_empty:
0x1AFA	0xF8DDE000  LDR	LR, [SP, #0]
0x1AFE	0xB001    ADD	SP, SP, #4
0x1B00	0x4770    BX	LR
; end of _lib_aci_command_queue_empty
_hal_aci_tl_tx_q_empty:
;hal_aci_tl.c, 448 :: 		bool hal_aci_tl_tx_q_empty (void)
0x08D4	0xB081    SUB	SP, SP, #4
0x08D6	0xF8CDE000  STR	LR, [SP, #0]
;hal_aci_tl.c, 450 :: 		return aci_queue_is_empty(&aci_tx_q);
0x08DA	0x4803    LDR	R0, [PC, #12]
0x08DC	0xF7FFFDE0  BL	_aci_queue_is_empty+0
;hal_aci_tl.c, 451 :: 		}
L_end_hal_aci_tl_tx_q_empty:
0x08E0	0xF8DDE000  LDR	LR, [SP, #0]
0x08E4	0xB001    ADD	SP, SP, #4
0x08E6	0x4770    BX	LR
0x08E8	0x03F62000  	_aci_tx_q+0
; end of _hal_aci_tl_tx_q_empty
_lib_aci_event_peek:
;lib_aci.c, 560 :: 		bool lib_aci_event_peek(hal_aci_evt_t *p_aci_evt_data)
; p_aci_evt_data start address is: 0 (R0)
0x1934	0xB081    SUB	SP, SP, #4
0x1936	0xF8CDE000  STR	LR, [SP, #0]
; p_aci_evt_data end address is: 0 (R0)
; p_aci_evt_data start address is: 0 (R0)
;lib_aci.c, 562 :: 		return hal_aci_tl_event_peek((hal_aci_data_t *)p_aci_evt_data);
; p_aci_evt_data end address is: 0 (R0)
0x193A	0xF7FEFFD7  BL	_hal_aci_tl_event_peek+0
;lib_aci.c, 563 :: 		}
L_end_lib_aci_event_peek:
0x193E	0xF8DDE000  LDR	LR, [SP, #0]
0x1942	0xB001    ADD	SP, SP, #4
0x1944	0x4770    BX	LR
; end of _lib_aci_event_peek
_hal_aci_tl_event_peek:
;hal_aci_tl.c, 293 :: 		bool hal_aci_tl_event_peek(hal_aci_data_t *p_aci_data)
0x08EC	0xB082    SUB	SP, SP, #8
0x08EE	0xF8CDE000  STR	LR, [SP, #0]
0x08F2	0x9001    STR	R0, [SP, #4]
;hal_aci_tl.c, 295 :: 		if (!a_pins_local_ptr->interface_is_interrupt)
0x08F4	0x4909    LDR	R1, [PC, #36]
0x08F6	0x6809    LDR	R1, [R1, #0]
0x08F8	0x310A    ADDS	R1, #10
0x08FA	0x7809    LDRB	R1, [R1, #0]
0x08FC	0xB909    CBNZ	R1, L_hal_aci_tl_event_peek35
;hal_aci_tl.c, 297 :: 		m_aci_event_check();
0x08FE	0xF7FFFE55  BL	hal_aci_tl_m_aci_event_check+0
;hal_aci_tl.c, 298 :: 		}
L_hal_aci_tl_event_peek35:
;hal_aci_tl.c, 300 :: 		if (aci_queue_peek(&aci_rx_q, p_aci_data))
0x0902	0x9901    LDR	R1, [SP, #4]
0x0904	0x4806    LDR	R0, [PC, #24]
0x0906	0xF7FFFF9B  BL	_aci_queue_peek+0
0x090A	0xB108    CBZ	R0, L_hal_aci_tl_event_peek36
;hal_aci_tl.c, 302 :: 		return true;
0x090C	0x2001    MOVS	R0, #1
0x090E	0xE000    B	L_end_hal_aci_tl_event_peek
;hal_aci_tl.c, 303 :: 		}
L_hal_aci_tl_event_peek36:
;hal_aci_tl.c, 305 :: 		return false;
0x0910	0x2000    MOVS	R0, #0
;hal_aci_tl.c, 306 :: 		}
L_end_hal_aci_tl_event_peek:
0x0912	0xF8DDE000  LDR	LR, [SP, #0]
0x0916	0xB002    ADD	SP, SP, #8
0x0918	0x4770    BX	LR
0x091A	0xBF00    NOP
0x091C	0x036C2000  	hal_aci_tl_a_pins_local_ptr+0
0x0920	0x03702000  	_aci_rx_q+0
; end of _hal_aci_tl_event_peek
_aci_queue_peek:
;aci_queue.c, 166 :: 		bool aci_queue_peek(aci_queue_t *aci_q, hal_aci_data_t *p_data)
0x0840	0xB085    SUB	SP, SP, #20
0x0842	0xF8CDE000  STR	LR, [SP, #0]
0x0846	0x9003    STR	R0, [SP, #12]
0x0848	0x9104    STR	R1, [SP, #16]
;aci_queue.c, 168 :: 		ble_assert(NULL != aci_q);
0x084A	0x9A03    LDR	R2, [SP, #12]
0x084C	0xB102    CBZ	R2, L_aci_queue_peek34
0x084E	0xE004    B	L_aci_queue_peek35
L_aci_queue_peek34:
0x0850	0x4A13    LDR	R2, [PC, #76]
0x0852	0x21A8    MOVS	R1, #168
0x0854	0x4610    MOV	R0, R2
0x0856	0xF7FFFFA1  BL	___ble_assert+0
L_aci_queue_peek35:
;aci_queue.c, 169 :: 		ble_assert(NULL != p_data);
0x085A	0x9A04    LDR	R2, [SP, #16]
0x085C	0xB102    CBZ	R2, L_aci_queue_peek36
0x085E	0xE004    B	L_aci_queue_peek37
L_aci_queue_peek36:
0x0860	0x4A10    LDR	R2, [PC, #64]
0x0862	0x21A9    MOVS	R1, #169
0x0864	0x4610    MOV	R0, R2
0x0866	0xF7FFFF99  BL	___ble_assert+0
L_aci_queue_peek37:
;aci_queue.c, 171 :: 		if (aci_queue_is_empty(aci_q))
0x086A	0x9803    LDR	R0, [SP, #12]
0x086C	0xF7FFFE18  BL	_aci_queue_is_empty+0
0x0870	0xB108    CBZ	R0, L_aci_queue_peek38
;aci_queue.c, 173 :: 		return false;
0x0872	0x2000    MOVS	R0, #0
0x0874	0xE010    B	L_end_aci_queue_peek
;aci_queue.c, 174 :: 		}
L_aci_queue_peek38:
;aci_queue.c, 176 :: 		memcpy((uint8_t *)p_data, (uint8_t *)&(aci_q->aci_data[aci_q->head % ACI_QUEUE_SIZE]), sizeof(hal_aci_data_t));
0x0876	0x9A03    LDR	R2, [SP, #12]
0x0878	0x3284    ADDS	R2, #132
0x087A	0x7812    LDRB	R2, [R2, #0]
0x087C	0xF0020303  AND	R3, R2, #3
0x0880	0xB2DB    UXTB	R3, R3
0x0882	0x2221    MOVS	R2, #33
0x0884	0x4353    MULS	R3, R2, R3
0x0886	0x9A03    LDR	R2, [SP, #12]
0x0888	0x18D2    ADDS	R2, R2, R3
0x088A	0x4611    MOV	R1, R2
0x088C	0x2221    MOVS	R2, #33
0x088E	0xB212    SXTH	R2, R2
0x0890	0x9804    LDR	R0, [SP, #16]
0x0892	0xF7FFFCE1  BL	_memcpy+0
;aci_queue.c, 178 :: 		return true;
0x0896	0x2001    MOVS	R0, #1
;aci_queue.c, 179 :: 		}
L_end_aci_queue_peek:
0x0898	0xF8DDE000  LDR	LR, [SP, #0]
0x089C	0xB005    ADD	SP, SP, #20
0x089E	0x4770    BX	LR
0x08A0	0x39990000  	?lstr_14_aci_queue+0
0x08A4	0x39D20000  	?lstr_15_aci_queue+0
; end of _aci_queue_peek
aci_setup_aci_setup_fill:
;aci_setup.c, 51 :: 		static bool aci_setup_fill(aci_state_t *aci_stat, uint8_t *num_cmd_offset)
0x0E74	0xB084    SUB	SP, SP, #16
0x0E76	0xF8CDE000  STR	LR, [SP, #0]
0x0E7A	0x9002    STR	R0, [SP, #8]
0x0E7C	0x9103    STR	R1, [SP, #12]
;aci_setup.c, 53 :: 		bool ret_val = false;
0x0E7E	0x2200    MOVS	R2, #0
0x0E80	0xF88D2004  STRB	R2, [SP, #4]
;aci_setup.c, 55 :: 		while (*num_cmd_offset < aci_stat->aci_setup_info.num_setup_msgs)
L_aci_setup_aci_setup_fill0:
0x0E84	0x9A03    LDR	R2, [SP, #12]
0x0E86	0x7813    LDRB	R3, [R2, #0]
0x0E88	0x9A02    LDR	R2, [SP, #8]
0x0E8A	0x320C    ADDS	R2, #12
0x0E8C	0x320C    ADDS	R2, #12
0x0E8E	0x7812    LDRB	R2, [R2, #0]
0x0E90	0x4293    CMP	R3, R2
0x0E92	0xD220    BCS	L_aci_setup_aci_setup_fill1
;aci_setup.c, 70 :: 		(aci_stat->aci_setup_info.setup_msgs[*num_cmd_offset].buffer[0]+2));
0x0E94	0x9A02    LDR	R2, [SP, #8]
0x0E96	0x320C    ADDS	R2, #12
0x0E98	0xF2020308  ADDW	R3, R2, #8
0x0E9C	0x9A03    LDR	R2, [SP, #12]
0x0E9E	0x7814    LDRB	R4, [R2, #0]
0x0EA0	0x681B    LDR	R3, [R3, #0]
0x0EA2	0x2221    MOVS	R2, #33
0x0EA4	0x4362    MULS	R2, R4, R2
0x0EA6	0x189B    ADDS	R3, R3, R2
0x0EA8	0x1C5A    ADDS	R2, R3, #1
0x0EAA	0x7812    LDRB	R2, [R2, #0]
0x0EAC	0x1C92    ADDS	R2, R2, #2
;aci_setup.c, 69 :: 		memcpy(&msg_to_send, &(aci_stat->aci_setup_info.setup_msgs[*num_cmd_offset]),
0x0EAE	0x4619    MOV	R1, R3
0x0EB0	0x480C    LDR	R0, [PC, #48]
;aci_setup.c, 70 :: 		(aci_stat->aci_setup_info.setup_msgs[*num_cmd_offset].buffer[0]+2));
0x0EB2	0xF7FFF9D1  BL	_memcpy+0
;aci_setup.c, 74 :: 		if (!hal_aci_tl_send(&msg_to_send))
0x0EB6	0x480B    LDR	R0, [PC, #44]
0x0EB8	0xF7FFFC96  BL	_hal_aci_tl_send+0
0x0EBC	0xB910    CBNZ	R0, L_aci_setup_aci_setup_fill2
;aci_setup.c, 78 :: 		return ret_val;
0x0EBE	0xF89D0004  LDRB	R0, [SP, #4]
0x0EC2	0xE00A    B	L_end_aci_setup_fill
;aci_setup.c, 79 :: 		}
L_aci_setup_aci_setup_fill2:
;aci_setup.c, 81 :: 		ret_val = true;
0x0EC4	0x2201    MOVS	R2, #1
0x0EC6	0xF88D2004  STRB	R2, [SP, #4]
;aci_setup.c, 83 :: 		(*num_cmd_offset)++;
0x0ECA	0x9A03    LDR	R2, [SP, #12]
0x0ECC	0x7812    LDRB	R2, [R2, #0]
0x0ECE	0x1C53    ADDS	R3, R2, #1
0x0ED0	0x9A03    LDR	R2, [SP, #12]
0x0ED2	0x7013    STRB	R3, [R2, #0]
;aci_setup.c, 84 :: 		}
0x0ED4	0xE7D6    B	L_aci_setup_aci_setup_fill0
L_aci_setup_aci_setup_fill1:
;aci_setup.c, 86 :: 		return ret_val;
0x0ED6	0xF89D0004  LDRB	R0, [SP, #4]
;aci_setup.c, 87 :: 		}
L_end_aci_setup_fill:
0x0EDA	0xF8DDE000  LDR	LR, [SP, #0]
0x0EDE	0xB004    ADD	SP, SP, #16
0x0EE0	0x4770    BX	LR
0x0EE2	0xBF00    NOP
0x0EE4	0x02E12000  	_msg_to_send+0
; end of aci_setup_aci_setup_fill
_handle_serial_input:
;ble_p_click.c, 50 :: 		void handle_serial_input()
0x2A34	0xB09C    SUB	SP, SP, #112
0x2A36	0xF8CDE000  STR	LR, [SP, #0]
;ble_p_click.c, 53 :: 		char name_buf[100] = {0};
0x2A3A	0xF10D0B04  ADD	R11, SP, #4
0x2A3E	0xF10B0A64  ADD	R10, R11, #100
0x2A42	0xF8DFC098  LDR	R12, [PC, #152]
0x2A46	0xF000F8C5  BL	___CC2DW+0
;ble_p_click.c, 56 :: 		while (UART1_Data_Ready())
L_handle_serial_input3:
0x2A4A	0xF7FFFDD9  BL	_UART1_Data_Ready+0
0x2A4E	0x2800    CMP	R0, #0
0x2A50	0xD040    BEQ	L_handle_serial_input4
;ble_p_click.c, 58 :: 		serial_buffer[msg_length++] = (uint8_t) UART1_Read();
0x2A52	0x4823    LDR	R0, [PC, #140]
0x2A54	0x901B    STR	R0, [SP, #108]
0x2A56	0x7801    LDRB	R1, [R0, #0]
0x2A58	0x4822    LDR	R0, [PC, #136]
0x2A5A	0x1840    ADDS	R0, R0, R1
0x2A5C	0x901A    STR	R0, [SP, #104]
0x2A5E	0xF7FFFC49  BL	_UART1_Read+0
0x2A62	0xB2C1    UXTB	R1, R0
0x2A64	0x981A    LDR	R0, [SP, #104]
0x2A66	0x7001    STRB	R1, [R0, #0]
0x2A68	0x991B    LDR	R1, [SP, #108]
0x2A6A	0x4608    MOV	R0, R1
0x2A6C	0x7800    LDRB	R0, [R0, #0]
0x2A6E	0x1C40    ADDS	R0, R0, #1
0x2A70	0xB2C0    UXTB	R0, R0
0x2A72	0x7008    STRB	R0, [R1, #0]
;ble_p_click.c, 62 :: 		if ('\n' == serial_buffer[msg_length - 1] ||
0x2A74	0x1E41    SUBS	R1, R0, #1
0x2A76	0xB209    SXTH	R1, R1
0x2A78	0x481A    LDR	R0, [PC, #104]
0x2A7A	0x1840    ADDS	R0, R0, R1
0x2A7C	0x7800    LDRB	R0, [R0, #0]
;ble_p_click.c, 63 :: 		SERIAL_BUFFER_LENGTH == msg_length)
0x2A7E	0x280A    CMP	R0, #10
0x2A80	0xD004    BEQ	L__handle_serial_input14
0x2A82	0x4817    LDR	R0, [PC, #92]
0x2A84	0x7800    LDRB	R0, [R0, #0]
0x2A86	0x2820    CMP	R0, #32
0x2A88	0xD000    BEQ	L__handle_serial_input13
0x2A8A	0xE022    B	L_handle_serial_input7
L__handle_serial_input14:
L__handle_serial_input13:
;ble_p_click.c, 66 :: 		if (IS_NAME_SETTING(serial_buffer))
0x2A8C	0x2205    MOVS	R2, #5
0x2A8E	0xB212    SXTH	R2, R2
0x2A90	0x4915    LDR	R1, [PC, #84]
0x2A92	0x4814    LDR	R0, [PC, #80]
0x2A94	0xF7FFFBDC  BL	_memcmp+0
0x2A98	0xB978    CBNZ	R0, L_handle_serial_input8
;ble_p_click.c, 70 :: 		memcpy(name_buf, &serial_buffer[5], msg_length - 6);
0x2A9A	0x4811    LDR	R0, [PC, #68]
0x2A9C	0x7800    LDRB	R0, [R0, #0]
0x2A9E	0x1F81    SUBS	R1, R0, #6
0x2AA0	0xA801    ADD	R0, SP, #4
0x2AA2	0xB20A    SXTH	R2, R1
0x2AA4	0x4911    LDR	R1, [PC, #68]
0x2AA6	0xF7FDFBD7  BL	_memcpy+0
;ble_p_click.c, 73 :: 		ble_uart_name_set(name_buf, msg_length - 6);
0x2AAA	0x480D    LDR	R0, [PC, #52]
0x2AAC	0x7800    LDRB	R0, [R0, #0]
0x2AAE	0x1F81    SUBS	R1, R0, #6
0x2AB0	0xA801    ADD	R0, SP, #4
0x2AB2	0xB2C9    UXTB	R1, R1
0x2AB4	0xF7FFFBE6  BL	_ble_uart_name_set+0
;ble_p_click.c, 74 :: 		}
0x2AB8	0xE006    B	L_handle_serial_input9
L_handle_serial_input8:
;ble_p_click.c, 78 :: 		ble_uart_tx(serial_buffer, msg_length - 1);
0x2ABA	0x4809    LDR	R0, [PC, #36]
0x2ABC	0x7800    LDRB	R0, [R0, #0]
0x2ABE	0x1E40    SUBS	R0, R0, #1
0x2AC0	0xB2C1    UXTB	R1, R0
0x2AC2	0x4808    LDR	R0, [PC, #32]
0x2AC4	0xF7FFFA06  BL	_ble_uart_tx+0
;ble_p_click.c, 79 :: 		}
L_handle_serial_input9:
;ble_p_click.c, 82 :: 		clear_serial_buffer();
0x2AC8	0xF7FFFC42  BL	ble_p_click_clear_serial_buffer+0
;ble_p_click.c, 83 :: 		msg_length = 0;
0x2ACC	0x2100    MOVS	R1, #0
0x2ACE	0x4804    LDR	R0, [PC, #16]
0x2AD0	0x7001    STRB	R1, [R0, #0]
;ble_p_click.c, 84 :: 		}
L_handle_serial_input7:
;ble_p_click.c, 85 :: 		}
0x2AD2	0xE7BA    B	L_handle_serial_input3
L_handle_serial_input4:
;ble_p_click.c, 86 :: 		}
L_end_handle_serial_input:
0x2AD4	0xF8DDE000  LDR	LR, [SP, #0]
0x2AD8	0xB01C    ADD	SP, SP, #112
0x2ADA	0x4770    BX	LR
0x2ADC	0x38FC0000  	?ICShandle_serial_input_name_buf_L0+0
0x2AE0	0x02E02000  	handle_serial_input_msg_length_L0+0
0x2AE4	0x03142000  	ble_p_click_serial_buffer+0
0x2AE8	0x00002000  	?lstr1_ble_p_click+0
0x2AEC	0x03192000  	ble_p_click_serial_buffer+5
; end of _handle_serial_input
_UART1_Data_Ready:
;__Lib_UART_123_45_6.c, 140 :: 		
0x2600	0xB081    SUB	SP, SP, #4
0x2602	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 141 :: 		
0x2606	0x4803    LDR	R0, [PC, #12]
0x2608	0xF7FFFCE0  BL	__Lib_UART_123_45_6_UARTx_Data_Ready+0
;__Lib_UART_123_45_6.c, 142 :: 		
L_end_UART1_Data_Ready:
0x260C	0xF8DDE000  LDR	LR, [SP, #0]
0x2610	0xB001    ADD	SP, SP, #4
0x2612	0x4770    BX	LR
0x2614	0x10004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_6_UARTx_Data_Ready:
;__Lib_UART_123_45_6.c, 135 :: 		
; UART_Base start address is: 0 (R0)
0x1FCC	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45_6.c, 137 :: 		
0x1FCE	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x1FD0	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45_6.c, 138 :: 		
L_end_UARTx_Data_Ready:
0x1FD4	0xB001    ADD	SP, SP, #4
0x1FD6	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Data_Ready
_UART1_Read:
;__Lib_UART_123_45_6.c, 110 :: 		
0x22F4	0xB081    SUB	SP, SP, #4
0x22F6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45_6.c, 111 :: 		
0x22FA	0x4803    LDR	R0, [PC, #12]
0x22FC	0xF7FFFE90  BL	__Lib_UART_123_45_6_UARTx_Read+0
;__Lib_UART_123_45_6.c, 112 :: 		
L_end_UART1_Read:
0x2300	0xF8DDE000  LDR	LR, [SP, #0]
0x2304	0xB001    ADD	SP, SP, #4
0x2306	0x4770    BX	LR
0x2308	0x10004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_6_UARTx_Read:
;__Lib_UART_123_45_6.c, 102 :: 		
; UART_Base start address is: 0 (R0)
0x2020	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45_6.c, 104 :: 		
L___Lib_UART_123_45_6_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x2022	0x6802    LDR	R2, [R0, #0]
0x2024	0xF3C21140  UBFX	R1, R2, #5, #1
0x2028	0xB901    CBNZ	R1, L___Lib_UART_123_45_6_UARTx_Read5
0x202A	0xE7FA    B	L___Lib_UART_123_45_6_UARTx_Read4
L___Lib_UART_123_45_6_UARTx_Read5:
;__Lib_UART_123_45_6.c, 107 :: 		
0x202C	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x202E	0x6809    LDR	R1, [R1, #0]
0x2030	0xB288    UXTH	R0, R1
;__Lib_UART_123_45_6.c, 108 :: 		
L_end_UARTx_Read:
0x2032	0xB001    ADD	SP, SP, #4
0x2034	0x4770    BX	LR
; end of __Lib_UART_123_45_6_UARTx_Read
_memcmp:
;__Lib_CString.c, 30 :: 		
; n start address is: 8 (R2)
; s2 start address is: 4 (R1)
; s1 start address is: 0 (R0)
0x2250	0xB081    SUB	SP, SP, #4
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
; s1 end address is: 0 (R0)
; s1 start address is: 0 (R0)
; s2 start address is: 4 (R1)
; n start address is: 8 (R2)
0x2252	0xF8AD2000  STRH	R2, [SP, #0]
; s1 end address is: 0 (R0)
; n end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x2256	0x4602    MOV	R2, R0
0x2258	0xF9BD0000  LDRSH	R0, [SP, #0]
;__Lib_CString.c, 31 :: 		
L_memcmp4:
; n start address is: 0 (R0)
; n start address is: 0 (R0)
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
0x225C	0xB204    SXTH	R4, R0
0x225E	0x1E43    SUBS	R3, R0, #1
0x2260	0xB218    SXTH	R0, R3
; n end address is: 0 (R0)
0x2262	0xB15C    CBZ	R4, L_memcmp5
; n end address is: 0 (R0)
;__Lib_CString.c, 32 :: 		
; n start address is: 0 (R0)
0x2264	0x7814    LDRB	R4, [R2, #0]
0x2266	0x780B    LDRB	R3, [R1, #0]
0x2268	0x429C    CMP	R4, R3
0x226A	0xD004    BEQ	L_memcmp6
; n end address is: 0 (R0)
;__Lib_CString.c, 33 :: 		
0x226C	0x7814    LDRB	R4, [R2, #0]
; s1 end address is: 8 (R2)
0x226E	0x780B    LDRB	R3, [R1, #0]
; s2 end address is: 4 (R1)
0x2270	0x1AE3    SUB	R3, R4, R3
0x2272	0xB218    SXTH	R0, R3
0x2274	0xE004    B	L_end_memcmp
L_memcmp6:
;__Lib_CString.c, 37 :: 		
; s2 start address is: 4 (R1)
; s1 start address is: 8 (R2)
; n start address is: 0 (R0)
0x2276	0x1C52    ADDS	R2, R2, #1
;__Lib_CString.c, 38 :: 		
0x2278	0x1C49    ADDS	R1, R1, #1
;__Lib_CString.c, 39 :: 		
; n end address is: 0 (R0)
; s1 end address is: 8 (R2)
; s2 end address is: 4 (R1)
0x227A	0xE7EF    B	L_memcmp4
L_memcmp5:
;__Lib_CString.c, 40 :: 		
0x227C	0x2000    MOVS	R0, #0
0x227E	0xB200    SXTH	R0, R0
;__Lib_CString.c, 41 :: 		
L_end_memcmp:
0x2280	0xB001    ADD	SP, SP, #4
0x2282	0x4770    BX	LR
; end of _memcmp
_ble_uart_name_set:
;ble_uart.c, 136 :: 		void ble_uart_name_set(const char* device_name, uint8_t name_length)
0x2284	0xB083    SUB	SP, SP, #12
0x2286	0xF8CDE000  STR	LR, [SP, #0]
0x228A	0x9001    STR	R0, [SP, #4]
0x228C	0xF88D1008  STRB	R1, [SP, #8]
;ble_uart.c, 139 :: 		if (lib_aci_set_local_data(&aci_state, PIPE_GAP_DEVICE_NAME_SET, (uint8_t*) device_name, min(name_length, 16)))
0x2290	0x2110    MOVS	R1, #16
0x2292	0xF89D0008  LDRB	R0, [SP, #8]
0x2296	0xF7FFFF59  BL	_min+0
0x229A	0x9A01    LDR	R2, [SP, #4]
0x229C	0xB2C3    UXTB	R3, R0
0x229E	0x2101    MOVS	R1, #1
0x22A0	0x4811    LDR	R0, [PC, #68]
0x22A2	0xF7FFFCF9  BL	_lib_aci_set_local_data+0
0x22A6	0xB1B8    CBZ	R0, L_ble_uart_name_set2
;ble_uart.c, 141 :: 		UART1_Write_Text("Name set. New name: ");
0x22A8	0x4A10    LDR	R2, [PC, #64]
0x22AA	0x4610    MOV	R0, R2
0x22AC	0xF000FC68  BL	_UART1_Write_Text+0
;ble_uart.c, 142 :: 		for ( i = 0; i < min(name_length, 16); ++i)
; i start address is: 24 (R6)
0x22B0	0x2600    MOVS	R6, #0
; i end address is: 24 (R6)
0x22B2	0xB2F4    UXTB	R4, R6
L_ble_uart_name_set3:
; i start address is: 16 (R4)
0x22B4	0x2110    MOVS	R1, #16
0x22B6	0xF89D0008  LDRB	R0, [SP, #8]
0x22BA	0xF7FFFF47  BL	_min+0
0x22BE	0x4284    CMP	R4, R0
0x22C0	0xDA09    BGE	L_ble_uart_name_set4
;ble_uart.c, 144 :: 		UART1_Write(device_name[i]);
0x22C2	0x9A01    LDR	R2, [SP, #4]
0x22C4	0x1912    ADDS	R2, R2, R4
0x22C6	0x7812    LDRB	R2, [R2, #0]
0x22C8	0xB290    UXTH	R0, R2
0x22CA	0xF000FC67  BL	_UART1_Write+0
;ble_uart.c, 142 :: 		for ( i = 0; i < min(name_length, 16); ++i)
0x22CE	0x1C62    ADDS	R2, R4, #1
; i end address is: 16 (R4)
; i start address is: 24 (R6)
0x22D0	0xB2D6    UXTB	R6, R2
;ble_uart.c, 145 :: 		}
0x22D2	0xB2F4    UXTB	R4, R6
; i end address is: 24 (R6)
0x22D4	0xE7EE    B	L_ble_uart_name_set3
L_ble_uart_name_set4:
;ble_uart.c, 147 :: 		}
0x22D6	0xE003    B	L_ble_uart_name_set6
L_ble_uart_name_set2:
;ble_uart.c, 150 :: 		UART1_Write_Text("Name setting failed.");
0x22D8	0x4A05    LDR	R2, [PC, #20]
0x22DA	0x4610    MOV	R0, R2
0x22DC	0xF000FC50  BL	_UART1_Write_Text+0
;ble_uart.c, 151 :: 		}
L_ble_uart_name_set6:
;ble_uart.c, 152 :: 		}
L_end_ble_uart_name_set:
0x22E0	0xF8DDE000  LDR	LR, [SP, #0]
0x22E4	0xB003    ADD	SP, SP, #12
0x22E6	0x4770    BX	LR
0x22E8	0x03342000  	_aci_state+0
0x22EC	0x00172000  	?lstr4_ble_uart+0
0x22F0	0x002C2000  	?lstr5_ble_uart+0
; end of _ble_uart_name_set
_min:
;__Lib_CStdlib.c, 294 :: 		
; b start address is: 4 (R1)
; a start address is: 0 (R0)
0x214C	0xB081    SUB	SP, SP, #4
; b end address is: 4 (R1)
; a end address is: 0 (R0)
; a start address is: 0 (R0)
; b start address is: 4 (R1)
;__Lib_CStdlib.c, 295 :: 		
0x214E	0x4288    CMP	R0, R1
0x2150	0xDB01    BLT	L_min74
; a end address is: 0 (R0)
;__Lib_CStdlib.c, 296 :: 		
0x2152	0x4608    MOV	R0, R1
; b end address is: 4 (R1)
0x2154	0xE7FF    B	L_end_min
L_min74:
;__Lib_CStdlib.c, 297 :: 		
; a start address is: 0 (R0)
; a end address is: 0 (R0)
;__Lib_CStdlib.c, 298 :: 		
L_end_min:
0x2156	0xB001    ADD	SP, SP, #4
0x2158	0x4770    BX	LR
; end of _min
__Lib_System_4XX_InitialSetUpRCCRCC2:
;__Lib_System_4XX.c, 452 :: 		
0x2D80	0xB082    SUB	SP, SP, #8
0x2D82	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_4XX.c, 455 :: 		
; ulRCC_CR start address is: 8 (R2)
0x2D86	0x4A92    LDR	R2, [PC, #584]
;__Lib_System_4XX.c, 456 :: 		
; ulRCC_PLLCFGR start address is: 12 (R3)
0x2D88	0x4B92    LDR	R3, [PC, #584]
;__Lib_System_4XX.c, 457 :: 		
; ulRCC_CFGR start address is: 16 (R4)
0x2D8A	0x4C93    LDR	R4, [PC, #588]
;__Lib_System_4XX.c, 458 :: 		
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2D8C	0x4893    LDR	R0, [PC, #588]
;__Lib_System_4XX.c, 459 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2D8E	0x4994    LDR	R1, [PC, #592]
;__Lib_System_4XX.c, 461 :: 		
0x2D90	0x2803    CMP	R0, #3
0x2D92	0xF040803C  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC231
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 462 :: 		
0x2D96	0x4893    LDR	R0, [PC, #588]
0x2D98	0x4281    CMP	R1, R0
0x2D9A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 463 :: 		
0x2D9C	0x4892    LDR	R0, [PC, #584]
0x2D9E	0x6800    LDR	R0, [R0, #0]
0x2DA0	0xF0400105  ORR	R1, R0, #5
0x2DA4	0x4890    LDR	R0, [PC, #576]
0x2DA6	0x6001    STR	R1, [R0, #0]
0x2DA8	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC233
L___Lib_System_4XX_InitialSetUpRCCRCC232:
;__Lib_System_4XX.c, 464 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2DAA	0x4890    LDR	R0, [PC, #576]
0x2DAC	0x4281    CMP	R1, R0
0x2DAE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 465 :: 		
0x2DB0	0x488D    LDR	R0, [PC, #564]
0x2DB2	0x6800    LDR	R0, [R0, #0]
0x2DB4	0xF0400104  ORR	R1, R0, #4
0x2DB8	0x488B    LDR	R0, [PC, #556]
0x2DBA	0x6001    STR	R1, [R0, #0]
0x2DBC	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC235
L___Lib_System_4XX_InitialSetUpRCCRCC234:
;__Lib_System_4XX.c, 466 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2DBE	0x488C    LDR	R0, [PC, #560]
0x2DC0	0x4281    CMP	R1, R0
0x2DC2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC236
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 467 :: 		
0x2DC4	0x4888    LDR	R0, [PC, #544]
0x2DC6	0x6800    LDR	R0, [R0, #0]
0x2DC8	0xF0400103  ORR	R1, R0, #3
0x2DCC	0x4886    LDR	R0, [PC, #536]
0x2DCE	0x6001    STR	R1, [R0, #0]
0x2DD0	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC237
L___Lib_System_4XX_InitialSetUpRCCRCC236:
;__Lib_System_4XX.c, 468 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2DD2	0xF64E2060  MOVW	R0, #60000
0x2DD6	0x4281    CMP	R1, R0
0x2DD8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC238
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 469 :: 		
0x2DDA	0x4883    LDR	R0, [PC, #524]
0x2DDC	0x6800    LDR	R0, [R0, #0]
0x2DDE	0xF0400102  ORR	R1, R0, #2
0x2DE2	0x4881    LDR	R0, [PC, #516]
0x2DE4	0x6001    STR	R1, [R0, #0]
0x2DE6	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC239
L___Lib_System_4XX_InitialSetUpRCCRCC238:
;__Lib_System_4XX.c, 470 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2DE8	0xF2475030  MOVW	R0, #30000
0x2DEC	0x4281    CMP	R1, R0
0x2DEE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC240
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 471 :: 		
0x2DF0	0x487D    LDR	R0, [PC, #500]
0x2DF2	0x6800    LDR	R0, [R0, #0]
0x2DF4	0xF0400101  ORR	R1, R0, #1
0x2DF8	0x487B    LDR	R0, [PC, #492]
0x2DFA	0x6001    STR	R1, [R0, #0]
0x2DFC	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC241
L___Lib_System_4XX_InitialSetUpRCCRCC240:
;__Lib_System_4XX.c, 473 :: 		
0x2DFE	0x487A    LDR	R0, [PC, #488]
0x2E00	0x6801    LDR	R1, [R0, #0]
0x2E02	0xF06F0007  MVN	R0, #7
0x2E06	0x4001    ANDS	R1, R0
0x2E08	0x4877    LDR	R0, [PC, #476]
0x2E0A	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC241:
L___Lib_System_4XX_InitialSetUpRCCRCC239:
L___Lib_System_4XX_InitialSetUpRCCRCC237:
L___Lib_System_4XX_InitialSetUpRCCRCC235:
L___Lib_System_4XX_InitialSetUpRCCRCC233:
;__Lib_System_4XX.c, 474 :: 		
0x2E0C	0xE10C    B	L___Lib_System_4XX_InitialSetUpRCCRCC242
L___Lib_System_4XX_InitialSetUpRCCRCC231:
;__Lib_System_4XX.c, 475 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2E0E	0x2802    CMP	R0, #2
0x2E10	0xF0408046  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC243
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 476 :: 		
0x2E14	0x4877    LDR	R0, [PC, #476]
0x2E16	0x4281    CMP	R1, R0
0x2E18	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC244
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 477 :: 		
0x2E1A	0x4873    LDR	R0, [PC, #460]
0x2E1C	0x6800    LDR	R0, [R0, #0]
0x2E1E	0xF0400106  ORR	R1, R0, #6
0x2E22	0x4871    LDR	R0, [PC, #452]
0x2E24	0x6001    STR	R1, [R0, #0]
0x2E26	0xE03A    B	L___Lib_System_4XX_InitialSetUpRCCRCC245
L___Lib_System_4XX_InitialSetUpRCCRCC244:
;__Lib_System_4XX.c, 478 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2E28	0x4870    LDR	R0, [PC, #448]
0x2E2A	0x4281    CMP	R1, R0
0x2E2C	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC246
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 479 :: 		
0x2E2E	0x486E    LDR	R0, [PC, #440]
0x2E30	0x6800    LDR	R0, [R0, #0]
0x2E32	0xF0400105  ORR	R1, R0, #5
0x2E36	0x486C    LDR	R0, [PC, #432]
0x2E38	0x6001    STR	R1, [R0, #0]
0x2E3A	0xE030    B	L___Lib_System_4XX_InitialSetUpRCCRCC247
L___Lib_System_4XX_InitialSetUpRCCRCC246:
;__Lib_System_4XX.c, 480 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2E3C	0x486E    LDR	R0, [PC, #440]
0x2E3E	0x4281    CMP	R1, R0
0x2E40	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC248
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 481 :: 		
0x2E42	0x4869    LDR	R0, [PC, #420]
0x2E44	0x6800    LDR	R0, [R0, #0]
0x2E46	0xF0400104  ORR	R1, R0, #4
0x2E4A	0x4867    LDR	R0, [PC, #412]
0x2E4C	0x6001    STR	R1, [R0, #0]
0x2E4E	0xE026    B	L___Lib_System_4XX_InitialSetUpRCCRCC249
L___Lib_System_4XX_InitialSetUpRCCRCC248:
;__Lib_System_4XX.c, 482 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2E50	0x486A    LDR	R0, [PC, #424]
0x2E52	0x4281    CMP	R1, R0
0x2E54	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC250
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 483 :: 		
0x2E56	0x4864    LDR	R0, [PC, #400]
0x2E58	0x6800    LDR	R0, [R0, #0]
0x2E5A	0xF0400103  ORR	R1, R0, #3
0x2E5E	0x4862    LDR	R0, [PC, #392]
0x2E60	0x6001    STR	R1, [R0, #0]
0x2E62	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC251
L___Lib_System_4XX_InitialSetUpRCCRCC250:
;__Lib_System_4XX.c, 484 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2E64	0xF64B3080  MOVW	R0, #48000
0x2E68	0x4281    CMP	R1, R0
0x2E6A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC252
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 485 :: 		
0x2E6C	0x485E    LDR	R0, [PC, #376]
0x2E6E	0x6800    LDR	R0, [R0, #0]
0x2E70	0xF0400102  ORR	R1, R0, #2
0x2E74	0x485C    LDR	R0, [PC, #368]
0x2E76	0x6001    STR	R1, [R0, #0]
0x2E78	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC253
L___Lib_System_4XX_InitialSetUpRCCRCC252:
;__Lib_System_4XX.c, 486 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2E7A	0xF64550C0  MOVW	R0, #24000
0x2E7E	0x4281    CMP	R1, R0
0x2E80	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC254
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 487 :: 		
0x2E82	0x4859    LDR	R0, [PC, #356]
0x2E84	0x6800    LDR	R0, [R0, #0]
0x2E86	0xF0400101  ORR	R1, R0, #1
0x2E8A	0x4857    LDR	R0, [PC, #348]
0x2E8C	0x6001    STR	R1, [R0, #0]
0x2E8E	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC255
L___Lib_System_4XX_InitialSetUpRCCRCC254:
;__Lib_System_4XX.c, 489 :: 		
0x2E90	0x4855    LDR	R0, [PC, #340]
0x2E92	0x6801    LDR	R1, [R0, #0]
0x2E94	0xF06F0007  MVN	R0, #7
0x2E98	0x4001    ANDS	R1, R0
0x2E9A	0x4853    LDR	R0, [PC, #332]
0x2E9C	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC255:
L___Lib_System_4XX_InitialSetUpRCCRCC253:
L___Lib_System_4XX_InitialSetUpRCCRCC251:
L___Lib_System_4XX_InitialSetUpRCCRCC249:
L___Lib_System_4XX_InitialSetUpRCCRCC247:
L___Lib_System_4XX_InitialSetUpRCCRCC245:
;__Lib_System_4XX.c, 490 :: 		
0x2E9E	0xE0C3    B	L___Lib_System_4XX_InitialSetUpRCCRCC256
L___Lib_System_4XX_InitialSetUpRCCRCC243:
;__Lib_System_4XX.c, 491 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2EA0	0x2801    CMP	R0, #1
0x2EA2	0xF0408051  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC257
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 492 :: 		
0x2EA6	0x4851    LDR	R0, [PC, #324]
0x2EA8	0x4281    CMP	R1, R0
0x2EAA	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC258
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 493 :: 		
0x2EAC	0x484E    LDR	R0, [PC, #312]
0x2EAE	0x6800    LDR	R0, [R0, #0]
0x2EB0	0xF0400107  ORR	R1, R0, #7
0x2EB4	0x484C    LDR	R0, [PC, #304]
0x2EB6	0x6001    STR	R1, [R0, #0]
0x2EB8	0xE045    B	L___Lib_System_4XX_InitialSetUpRCCRCC259
L___Lib_System_4XX_InitialSetUpRCCRCC258:
;__Lib_System_4XX.c, 494 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2EBA	0x4851    LDR	R0, [PC, #324]
0x2EBC	0x4281    CMP	R1, R0
0x2EBE	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC260
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 495 :: 		
0x2EC0	0x4849    LDR	R0, [PC, #292]
0x2EC2	0x6800    LDR	R0, [R0, #0]
0x2EC4	0xF0400106  ORR	R1, R0, #6
0x2EC8	0x4847    LDR	R0, [PC, #284]
0x2ECA	0x6001    STR	R1, [R0, #0]
0x2ECC	0xE03B    B	L___Lib_System_4XX_InitialSetUpRCCRCC261
L___Lib_System_4XX_InitialSetUpRCCRCC260:
;__Lib_System_4XX.c, 496 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2ECE	0x4848    LDR	R0, [PC, #288]
0x2ED0	0x4281    CMP	R1, R0
0x2ED2	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC262
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 497 :: 		
0x2ED4	0x4844    LDR	R0, [PC, #272]
0x2ED6	0x6800    LDR	R0, [R0, #0]
0x2ED8	0xF0400105  ORR	R1, R0, #5
0x2EDC	0x4842    LDR	R0, [PC, #264]
0x2EDE	0x6001    STR	R1, [R0, #0]
0x2EE0	0xE031    B	L___Lib_System_4XX_InitialSetUpRCCRCC263
L___Lib_System_4XX_InitialSetUpRCCRCC262:
;__Lib_System_4XX.c, 498 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2EE2	0x4846    LDR	R0, [PC, #280]
0x2EE4	0x4281    CMP	R1, R0
0x2EE6	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC264
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 499 :: 		
0x2EE8	0x483F    LDR	R0, [PC, #252]
0x2EEA	0x6800    LDR	R0, [R0, #0]
0x2EEC	0xF0400104  ORR	R1, R0, #4
0x2EF0	0x483D    LDR	R0, [PC, #244]
0x2EF2	0x6001    STR	R1, [R0, #0]
0x2EF4	0xE027    B	L___Lib_System_4XX_InitialSetUpRCCRCC265
L___Lib_System_4XX_InitialSetUpRCCRCC264:
;__Lib_System_4XX.c, 500 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2EF6	0xF24D20F0  MOVW	R0, #54000
0x2EFA	0x4281    CMP	R1, R0
0x2EFC	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC266
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 501 :: 		
0x2EFE	0x483A    LDR	R0, [PC, #232]
0x2F00	0x6800    LDR	R0, [R0, #0]
0x2F02	0xF0400103  ORR	R1, R0, #3
0x2F06	0x4838    LDR	R0, [PC, #224]
0x2F08	0x6001    STR	R1, [R0, #0]
0x2F0A	0xE01C    B	L___Lib_System_4XX_InitialSetUpRCCRCC267
L___Lib_System_4XX_InitialSetUpRCCRCC266:
;__Lib_System_4XX.c, 502 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2F0C	0xF64840A0  MOVW	R0, #36000
0x2F10	0x4281    CMP	R1, R0
0x2F12	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC268
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 503 :: 		
0x2F14	0x4834    LDR	R0, [PC, #208]
0x2F16	0x6800    LDR	R0, [R0, #0]
0x2F18	0xF0400102  ORR	R1, R0, #2
0x2F1C	0x4832    LDR	R0, [PC, #200]
0x2F1E	0x6001    STR	R1, [R0, #0]
0x2F20	0xE011    B	L___Lib_System_4XX_InitialSetUpRCCRCC269
L___Lib_System_4XX_InitialSetUpRCCRCC268:
;__Lib_System_4XX.c, 504 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2F22	0xF2446050  MOVW	R0, #18000
0x2F26	0x4281    CMP	R1, R0
0x2F28	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC270
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 505 :: 		
0x2F2A	0x482F    LDR	R0, [PC, #188]
0x2F2C	0x6800    LDR	R0, [R0, #0]
0x2F2E	0xF0400101  ORR	R1, R0, #1
0x2F32	0x482D    LDR	R0, [PC, #180]
0x2F34	0x6001    STR	R1, [R0, #0]
0x2F36	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC271
L___Lib_System_4XX_InitialSetUpRCCRCC270:
;__Lib_System_4XX.c, 507 :: 		
0x2F38	0x482B    LDR	R0, [PC, #172]
0x2F3A	0x6801    LDR	R1, [R0, #0]
0x2F3C	0xF06F0007  MVN	R0, #7
0x2F40	0x4001    ANDS	R1, R0
0x2F42	0x4829    LDR	R0, [PC, #164]
0x2F44	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC271:
L___Lib_System_4XX_InitialSetUpRCCRCC269:
L___Lib_System_4XX_InitialSetUpRCCRCC267:
L___Lib_System_4XX_InitialSetUpRCCRCC265:
L___Lib_System_4XX_InitialSetUpRCCRCC263:
L___Lib_System_4XX_InitialSetUpRCCRCC261:
L___Lib_System_4XX_InitialSetUpRCCRCC259:
;__Lib_System_4XX.c, 508 :: 		
0x2F46	0xE06F    B	L___Lib_System_4XX_InitialSetUpRCCRCC272
L___Lib_System_4XX_InitialSetUpRCCRCC257:
;__Lib_System_4XX.c, 509 :: 		
; Fosc_kHz start address is: 4 (R1)
; ulVOLTAGE_RANGE start address is: 0 (R0)
0x2F48	0x2800    CMP	R0, #0
0x2F4A	0xF040806D  BNE	L___Lib_System_4XX_InitialSetUpRCCRCC273
; ulVOLTAGE_RANGE end address is: 0 (R0)
;__Lib_System_4XX.c, 510 :: 		
0x2F4E	0x482D    LDR	R0, [PC, #180]
0x2F50	0x4281    CMP	R1, R0
0x2F52	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC274
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 511 :: 		
0x2F54	0x4824    LDR	R0, [PC, #144]
0x2F56	0x6800    LDR	R0, [R0, #0]
0x2F58	0xF0400107  ORR	R1, R0, #7
0x2F5C	0x4822    LDR	R0, [PC, #136]
0x2F5E	0x6001    STR	R1, [R0, #0]
0x2F60	0xE062    B	L___Lib_System_4XX_InitialSetUpRCCRCC275
L___Lib_System_4XX_InitialSetUpRCCRCC274:
;__Lib_System_4XX.c, 512 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2F62	0x4825    LDR	R0, [PC, #148]
0x2F64	0x4281    CMP	R1, R0
0x2F66	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC276
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 513 :: 		
0x2F68	0x481F    LDR	R0, [PC, #124]
0x2F6A	0x6800    LDR	R0, [R0, #0]
0x2F6C	0xF0400106  ORR	R1, R0, #6
0x2F70	0x481D    LDR	R0, [PC, #116]
0x2F72	0x6001    STR	R1, [R0, #0]
0x2F74	0xE058    B	L___Lib_System_4XX_InitialSetUpRCCRCC277
L___Lib_System_4XX_InitialSetUpRCCRCC276:
;__Lib_System_4XX.c, 514 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2F76	0x4824    LDR	R0, [PC, #144]
0x2F78	0x4281    CMP	R1, R0
0x2F7A	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC278
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 515 :: 		
0x2F7C	0x481A    LDR	R0, [PC, #104]
0x2F7E	0x6800    LDR	R0, [R0, #0]
0x2F80	0xF0400105  ORR	R1, R0, #5
0x2F84	0x4818    LDR	R0, [PC, #96]
0x2F86	0x6001    STR	R1, [R0, #0]
0x2F88	0xE04E    B	L___Lib_System_4XX_InitialSetUpRCCRCC279
L___Lib_System_4XX_InitialSetUpRCCRCC278:
;__Lib_System_4XX.c, 516 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2F8A	0xF5B14F7A  CMP	R1, #64000
0x2F8E	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC280
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 517 :: 		
0x2F90	0x4815    LDR	R0, [PC, #84]
0x2F92	0x6800    LDR	R0, [R0, #0]
0x2F94	0xF0400104  ORR	R1, R0, #4
0x2F98	0x4813    LDR	R0, [PC, #76]
0x2F9A	0x6001    STR	R1, [R0, #0]
0x2F9C	0xE044    B	L___Lib_System_4XX_InitialSetUpRCCRCC281
L___Lib_System_4XX_InitialSetUpRCCRCC280:
;__Lib_System_4XX.c, 518 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2F9E	0xF64B3080  MOVW	R0, #48000
0x2FA2	0x4281    CMP	R1, R0
0x2FA4	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC282
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 519 :: 		
0x2FA6	0x4810    LDR	R0, [PC, #64]
0x2FA8	0x6800    LDR	R0, [R0, #0]
0x2FAA	0xF0400103  ORR	R1, R0, #3
0x2FAE	0x480E    LDR	R0, [PC, #56]
0x2FB0	0x6001    STR	R1, [R0, #0]
0x2FB2	0xE039    B	L___Lib_System_4XX_InitialSetUpRCCRCC283
L___Lib_System_4XX_InitialSetUpRCCRCC282:
;__Lib_System_4XX.c, 520 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2FB4	0xF5B14FFA  CMP	R1, #32000
0x2FB8	0xD906    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC284
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 521 :: 		
0x2FBA	0x480B    LDR	R0, [PC, #44]
0x2FBC	0x6800    LDR	R0, [R0, #0]
0x2FBE	0xF0400102  ORR	R1, R0, #2
0x2FC2	0x4809    LDR	R0, [PC, #36]
0x2FC4	0x6001    STR	R1, [R0, #0]
0x2FC6	0xE02F    B	L___Lib_System_4XX_InitialSetUpRCCRCC285
L___Lib_System_4XX_InitialSetUpRCCRCC284:
;__Lib_System_4XX.c, 522 :: 		
; Fosc_kHz start address is: 4 (R1)
0x2FC8	0xF5B15F7A  CMP	R1, #16000
0x2FCC	0xD925    BLS	L___Lib_System_4XX_InitialSetUpRCCRCC286
0x2FCE	0xE01D    B	#58
0x2FD0	0x00810100  	#16777345
0x2FD4	0x348C0600  	#100676748
0x2FD8	0x94020000  	#37890
0x2FDC	0x00030000  	#3
0x2FE0	0x22E00002  	#140000
0x2FE4	0x49F00002  	#150000
0x2FE8	0x3C004002  	FLASH_ACR+0
0x2FEC	0xD4C00001  	#120000
0x2FF0	0x5F900001  	#90000
0x2FF4	0x32800002  	#144000
0x2FF8	0x77000001  	#96000
0x2FFC	0x19400001  	#72000
0x3000	0xA5E00001  	#108000
0x3004	0xB5800001  	#112000
0x3008	0x38800001  	#80000
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_4XX.c, 523 :: 		
0x300C	0x482D    LDR	R0, [PC, #180]
0x300E	0x6800    LDR	R0, [R0, #0]
0x3010	0xF0400101  ORR	R1, R0, #1
0x3014	0x482B    LDR	R0, [PC, #172]
0x3016	0x6001    STR	R1, [R0, #0]
0x3018	0xE006    B	L___Lib_System_4XX_InitialSetUpRCCRCC287
L___Lib_System_4XX_InitialSetUpRCCRCC286:
;__Lib_System_4XX.c, 525 :: 		
0x301A	0x482A    LDR	R0, [PC, #168]
0x301C	0x6801    LDR	R1, [R0, #0]
0x301E	0xF06F0007  MVN	R0, #7
0x3022	0x4001    ANDS	R1, R0
0x3024	0x4827    LDR	R0, [PC, #156]
0x3026	0x6001    STR	R1, [R0, #0]
L___Lib_System_4XX_InitialSetUpRCCRCC287:
L___Lib_System_4XX_InitialSetUpRCCRCC285:
L___Lib_System_4XX_InitialSetUpRCCRCC283:
L___Lib_System_4XX_InitialSetUpRCCRCC281:
L___Lib_System_4XX_InitialSetUpRCCRCC279:
L___Lib_System_4XX_InitialSetUpRCCRCC277:
L___Lib_System_4XX_InitialSetUpRCCRCC275:
;__Lib_System_4XX.c, 526 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC273:
L___Lib_System_4XX_InitialSetUpRCCRCC272:
L___Lib_System_4XX_InitialSetUpRCCRCC256:
L___Lib_System_4XX_InitialSetUpRCCRCC242:
;__Lib_System_4XX.c, 528 :: 		
0x3028	0x2101    MOVS	R1, #1
0x302A	0xB249    SXTB	R1, R1
0x302C	0x4826    LDR	R0, [PC, #152]
0x302E	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 529 :: 		
0x3030	0x4826    LDR	R0, [PC, #152]
0x3032	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 531 :: 		
0x3034	0xF7FFFCD8  BL	__Lib_System_4XX_SystemClockSetDefault+0
;__Lib_System_4XX.c, 533 :: 		
0x3038	0x4825    LDR	R0, [PC, #148]
0x303A	0x6003    STR	R3, [R0, #0]
; ulRCC_PLLCFGR end address is: 12 (R3)
;__Lib_System_4XX.c, 534 :: 		
0x303C	0x4825    LDR	R0, [PC, #148]
0x303E	0x6004    STR	R4, [R0, #0]
;__Lib_System_4XX.c, 535 :: 		
0x3040	0x4825    LDR	R0, [PC, #148]
0x3042	0xEA020100  AND	R1, R2, R0, LSL #0
0x3046	0x4825    LDR	R0, [PC, #148]
0x3048	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 537 :: 		
0x304A	0xF0020001  AND	R0, R2, #1
0x304E	0xB140    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC299
; ulRCC_CFGR end address is: 16 (R4)
; ulRCC_CR end address is: 8 (R2)
0x3050	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 538 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC289:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3052	0x4822    LDR	R0, [PC, #136]
0x3054	0x6800    LDR	R0, [R0, #0]
0x3056	0xF0000002  AND	R0, R0, #2
0x305A	0x2800    CMP	R0, #0
0x305C	0xD100    BNE	L___Lib_System_4XX_InitialSetUpRCCRCC290
;__Lib_System_4XX.c, 539 :: 		
0x305E	0xE7F8    B	L___Lib_System_4XX_InitialSetUpRCCRCC289
L___Lib_System_4XX_InitialSetUpRCCRCC290:
;__Lib_System_4XX.c, 540 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x3060	0xE000    B	L___Lib_System_4XX_InitialSetUpRCCRCC288
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC299:
;__Lib_System_4XX.c, 537 :: 		
0x3062	0x4621    MOV	R1, R4
;__Lib_System_4XX.c, 540 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC288:
;__Lib_System_4XX.c, 542 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3064	0xF4023080  AND	R0, R2, #65536
0x3068	0xB148    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2100
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
;__Lib_System_4XX.c, 543 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC292:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 4 (R1)
0x306A	0x481C    LDR	R0, [PC, #112]
0x306C	0x6800    LDR	R0, [R0, #0]
0x306E	0xF4003000  AND	R0, R0, #131072
0x3072	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC293
;__Lib_System_4XX.c, 544 :: 		
0x3074	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC292
L___Lib_System_4XX_InitialSetUpRCCRCC293:
;__Lib_System_4XX.c, 545 :: 		
0x3076	0x9201    STR	R2, [SP, #4]
; ulRCC_CFGR end address is: 4 (R1)
0x3078	0x460A    MOV	R2, R1
0x307A	0x9901    LDR	R1, [SP, #4]
0x307C	0xE002    B	L___Lib_System_4XX_InitialSetUpRCCRCC291
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC2100:
;__Lib_System_4XX.c, 542 :: 		
0x307E	0x9101    STR	R1, [SP, #4]
0x3080	0x4611    MOV	R1, R2
0x3082	0x9A01    LDR	R2, [SP, #4]
;__Lib_System_4XX.c, 545 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC291:
;__Lib_System_4XX.c, 547 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x3084	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x3088	0xB170    CBZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC2101
;__Lib_System_4XX.c, 548 :: 		
0x308A	0x4814    LDR	R0, [PC, #80]
0x308C	0x6800    LDR	R0, [R0, #0]
0x308E	0xF0407180  ORR	R1, R0, #16777216
0x3092	0x4812    LDR	R0, [PC, #72]
0x3094	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x3096	0x4611    MOV	R1, R2
;__Lib_System_4XX.c, 549 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC295:
; ulRCC_CFGR start address is: 4 (R1)
0x3098	0x4810    LDR	R0, [PC, #64]
0x309A	0x6800    LDR	R0, [R0, #0]
0x309C	0xF0007000  AND	R0, R0, #33554432
0x30A0	0xB900    CBNZ	R0, L___Lib_System_4XX_InitialSetUpRCCRCC296
;__Lib_System_4XX.c, 550 :: 		
0x30A2	0xE7F9    B	L___Lib_System_4XX_InitialSetUpRCCRCC295
L___Lib_System_4XX_InitialSetUpRCCRCC296:
;__Lib_System_4XX.c, 551 :: 		
0x30A4	0x460A    MOV	R2, R1
0x30A6	0xE7FF    B	L___Lib_System_4XX_InitialSetUpRCCRCC294
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_4XX_InitialSetUpRCCRCC2101:
;__Lib_System_4XX.c, 547 :: 		
;__Lib_System_4XX.c, 551 :: 		
L___Lib_System_4XX_InitialSetUpRCCRCC294:
;__Lib_System_4XX.c, 554 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_4XX_InitialSetUpRCCRCC297:
; ulRCC_CFGR start address is: 8 (R2)
0x30A8	0x480A    LDR	R0, [PC, #40]
0x30AA	0x6800    LDR	R0, [R0, #0]
0x30AC	0xF000010C  AND	R1, R0, #12
0x30B0	0x0090    LSLS	R0, R2, #2
0x30B2	0xF000000C  AND	R0, R0, #12
0x30B6	0x4281    CMP	R1, R0
0x30B8	0xD000    BEQ	L___Lib_System_4XX_InitialSetUpRCCRCC298
;__Lib_System_4XX.c, 555 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x30BA	0xE7F5    B	L___Lib_System_4XX_InitialSetUpRCCRCC297
L___Lib_System_4XX_InitialSetUpRCCRCC298:
;__Lib_System_4XX.c, 557 :: 		
L_end_InitialSetUpRCCRCC2:
0x30BC	0xF8DDE000  LDR	LR, [SP, #0]
0x30C0	0xB002    ADD	SP, SP, #8
0x30C2	0x4770    BX	LR
0x30C4	0x3C004002  	FLASH_ACR+0
0x30C8	0x80204247  	FLASH_ACR+0
0x30CC	0x80244247  	FLASH_ACR+0
0x30D0	0x38044002  	RCC_PLLCFGR+0
0x30D4	0x38084002  	RCC_CFGR+0
0x30D8	0xFFFF000F  	#1048575
0x30DC	0x38004002  	RCC_CR+0
; end of __Lib_System_4XX_InitialSetUpRCCRCC2
__Lib_System_4XX_SystemClockSetDefault:
;__Lib_System_4XX.c, 431 :: 		
0x29E8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 434 :: 		
0x29EA	0x480D    LDR	R0, [PC, #52]
0x29EC	0x6800    LDR	R0, [R0, #0]
0x29EE	0xF0400101  ORR	R1, R0, #1
0x29F2	0x480B    LDR	R0, [PC, #44]
0x29F4	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 437 :: 		
0x29F6	0x2100    MOVS	R1, #0
0x29F8	0x480A    LDR	R0, [PC, #40]
0x29FA	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 440 :: 		
0x29FC	0x4808    LDR	R0, [PC, #32]
0x29FE	0x6801    LDR	R1, [R0, #0]
0x2A00	0x4809    LDR	R0, [PC, #36]
0x2A02	0x4001    ANDS	R1, R0
0x2A04	0x4806    LDR	R0, [PC, #24]
0x2A06	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 443 :: 		
0x2A08	0x4908    LDR	R1, [PC, #32]
0x2A0A	0x4809    LDR	R0, [PC, #36]
0x2A0C	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 446 :: 		
0x2A0E	0x4804    LDR	R0, [PC, #16]
0x2A10	0x6801    LDR	R1, [R0, #0]
0x2A12	0xF46F2080  MVN	R0, #262144
0x2A16	0x4001    ANDS	R1, R0
0x2A18	0x4801    LDR	R0, [PC, #4]
0x2A1A	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 450 :: 		
L_end_SystemClockSetDefault:
0x2A1C	0xB001    ADD	SP, SP, #4
0x2A1E	0x4770    BX	LR
0x2A20	0x38004002  	RCC_CR+0
0x2A24	0x38084002  	RCC_CFGR+0
0x2A28	0xFFFFFEF6  	#-17367041
0x2A2C	0x30102400  	#603992080
0x2A30	0x38044002  	RCC_PLLCFGR+0
; end of __Lib_System_4XX_SystemClockSetDefault
__Lib_System_4XX_InitialSetUpFosc:
;__Lib_System_4XX.c, 369 :: 		
0x2CC8	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 370 :: 		
0x2CCA	0x4904    LDR	R1, [PC, #16]
0x2CCC	0x4804    LDR	R0, [PC, #16]
0x2CCE	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 371 :: 		
0x2CD0	0x4904    LDR	R1, [PC, #16]
0x2CD2	0x4805    LDR	R0, [PC, #20]
0x2CD4	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 372 :: 		
L_end_InitialSetUpFosc:
0x2CD6	0xB001    ADD	SP, SP, #4
0x2CD8	0x4770    BX	LR
0x2CDA	0xBF00    NOP
0x2CDC	0x22E00002  	#140000
0x2CE0	0x04C82000  	___System_CLOCK_IN_KHZ+0
0x2CE4	0x00030000  	#3
0x2CE8	0x04CC2000  	__VOLTAGE_RANGE+0
; end of __Lib_System_4XX_InitialSetUpFosc
___GenExcept:
;__Lib_System_4XX.c, 314 :: 		
0x2C94	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 315 :: 		
L___GenExcept27:
0x2C96	0xE7FE    B	L___GenExcept27
;__Lib_System_4XX.c, 316 :: 		
L_end___GenExcept:
0x2C98	0xB001    ADD	SP, SP, #4
0x2C9A	0x4770    BX	LR
; end of ___GenExcept
___EnableFPU:
;__Lib_System_4XX.c, 347 :: 		
0x2C9C	0xB081    SUB	SP, SP, #4
;__Lib_System_4XX.c, 350 :: 		
0x2C9E	0xF64E5088  MOVW	R0, #60808
;__Lib_System_4XX.c, 351 :: 		
0x2CA2	0xF2CE0000  MOVT	R0, #57344
;__Lib_System_4XX.c, 353 :: 		
0x2CA6	0x6801    LDR	R1, [R0, #0]
;__Lib_System_4XX.c, 355 :: 		
0x2CA8	0xF4410170  ORR	R1, R1, #15728640
;__Lib_System_4XX.c, 357 :: 		
0x2CAC	0x6001    STR	R1, [R0, #0]
;__Lib_System_4XX.c, 359 :: 		
0x2CAE	0xBF00    NOP
;__Lib_System_4XX.c, 360 :: 		
0x2CB0	0xBF00    NOP
;__Lib_System_4XX.c, 361 :: 		
0x2CB2	0xBF00    NOP
;__Lib_System_4XX.c, 362 :: 		
0x2CB4	0xBF00    NOP
;__Lib_System_4XX.c, 364 :: 		
0x2CB6	0xEEF10A10  VMRS	R0, FPSCR
;__Lib_System_4XX.c, 365 :: 		
0x2CBA	0xF4400040  ORR	R0, R0, #12582912
;__Lib_System_4XX.c, 366 :: 		
0x2CBE	0xEEE10A10  VMSR	FPSCR, R0
;__Lib_System_4XX.c, 367 :: 		
L_end___EnableFPU:
0x2CC2	0xB001    ADD	SP, SP, #4
0x2CC4	0x4770    BX	LR
; end of ___EnableFPU
0x3BDC	0xB500    PUSH	(R14)
0x3BDE	0xF8DFB014  LDR	R11, [PC, #20]
0x3BE2	0xF8DFA014  LDR	R10, [PC, #20]
0x3BE6	0xF8DFC014  LDR	R12, [PC, #20]
0x3BEA	0xF7FEFFF3  BL	11220
0x3BEE	0xBD00    POP	(R15)
0x3BF0	0x4770    BX	LR
0x3BF2	0xBF00    NOP
0x3BF4	0x00002000  	#536870912
0x3BF8	0x02E12000  	#536871649
0x3BFC	0x35420000  	#13634
0x3C5C	0xB500    PUSH	(R14)
0x3C5E	0xF8DFB010  LDR	R11, [PC, #16]
0x3C62	0xF8DFA010  LDR	R10, [PC, #16]
0x3C66	0xF7FEFFC9  BL	11260
0x3C6A	0xBD00    POP	(R15)
0x3C6C	0x4770    BX	LR
0x3C6E	0xBF00    NOP
0x3C70	0x00002000  	#536870912
0x3C74	0x04E02000  	#536872160
;uart_aci.c,0 :: ?lstr_3_uart_aci [2]
0x01AA	0x000A ;?lstr_3_uart_aci+0
; end of ?lstr_3_uart_aci
;,0 :: _initBlock_1 [6]
; Containing: ?lstr_18_uart_aci [3]
;             ?lstr_10_uart_aci [3]
0x264A	0x25006425 ;_initBlock_1+0 : ?lstr_18_uart_aci at 0x264A : ?lstr_10_uart_aci at 0x264D
0x264E	0x0064 ;_initBlock_1+4
; end of _initBlock_1
;ble_uart.c,83 :: ble_uart_setup_msgs [1122]
0x30E0	0x00060700 ;ble_uart_setup_msgs+0
0x30E4	0x42020300 ;ble_uart_setup_msgs+4
0x30E8	0x00000007 ;ble_uart_setup_msgs+8
0x30EC	0x00000000 ;ble_uart_setup_msgs+12
0x30F0	0x00000000 ;ble_uart_setup_msgs+16
0x30F4	0x00000000 ;ble_uart_setup_msgs+20
0x30F8	0x00000000 ;ble_uart_setup_msgs+24
0x30FC	0x00000000 ;ble_uart_setup_msgs+28
0x3100	0x061F0000 ;ble_uart_setup_msgs+32
0x3104	0x00000010 ;ble_uart_setup_msgs+36
0x3108	0x00000000 ;ble_uart_setup_msgs+40
0x310C	0x010C000B ;ble_uart_setup_msgs+44
0x3110	0x06000001 ;ble_uart_setup_msgs+48
0x3114	0x00900000 ;ble_uart_setup_msgs+52
0x3118	0x00000000 ;ble_uart_setup_msgs+56
0x311C	0x00000000 ;ble_uart_setup_msgs+60
0x3120	0x1F000000 ;ble_uart_setup_msgs+64
0x3124	0x011C1006 ;ble_uart_setup_msgs+68
0x3128	0x00000002 ;ble_uart_setup_msgs+72
0x312C	0x00000000 ;ble_uart_setup_msgs+76
0x3130	0x00000000 ;ble_uart_setup_msgs+80
0x3134	0x00000000 ;ble_uart_setup_msgs+84
0x3138	0x00100000 ;ble_uart_setup_msgs+88
0x313C	0x00040000 ;ble_uart_setup_msgs+92
0x3140	0x00FF0190 ;ble_uart_setup_msgs+96
0x3144	0x3810061F ;ble_uart_setup_msgs+100
0x3148	0x5802FFFF ;ble_uart_setup_msgs+104
0x314C	0x0000050A ;ble_uart_setup_msgs+108
0x3150	0x00000000 ;ble_uart_setup_msgs+112
0x3154	0x00001000 ;ble_uart_setup_msgs+116
0x3158	0x00000000 ;ble_uart_setup_msgs+120
0x315C	0x00000000 ;ble_uart_setup_msgs+124
0x3160	0x00000000 ;ble_uart_setup_msgs+128
0x3164	0x10060500 ;ble_uart_setup_msgs+132
0x3168	0x00000054 ;ble_uart_setup_msgs+136
0x316C	0x00000000 ;ble_uart_setup_msgs+140
0x3170	0x00000000 ;ble_uart_setup_msgs+144
0x3174	0x00000000 ;ble_uart_setup_msgs+148
0x3178	0x00000000 ;ble_uart_setup_msgs+152
0x317C	0x00000000 ;ble_uart_setup_msgs+156
0x3180	0x00000000 ;ble_uart_setup_msgs+160
0x3184	0x061F0000 ;ble_uart_setup_msgs+164
0x3188	0x04040020 ;ble_uart_setup_msgs+168
0x318C	0x01000202 ;ble_uart_setup_msgs+172
0x3190	0x00010028 ;ble_uart_setup_msgs+176
0x3194	0x05040418 ;ble_uart_setup_msgs+180
0x3198	0x28020005 ;ble_uart_setup_msgs+184
0x319C	0x030E0103 ;ble_uart_setup_msgs+188
0x31A0	0x042A0000 ;ble_uart_setup_msgs+192
0x31A4	0x1F001014 ;ble_uart_setup_msgs+196
0x31A8	0x061C2006 ;ble_uart_setup_msgs+200
0x31AC	0x002A0300 ;ble_uart_setup_msgs+204
0x31B0	0x6B694D01 ;ble_uart_setup_msgs+208
0x31B4	0x73456F72 ;ble_uart_setup_msgs+212
0x31B8	0x2E696D65 ;ble_uart_setup_msgs+216
0x31BC	0x006D6F63 ;ble_uart_setup_msgs+220
0x31C0	0x05040400 ;ble_uart_setup_msgs+224
0x31C4	0x00040005 ;ble_uart_setup_msgs+228
0x31C8	0x3820061F ;ble_uart_setup_msgs+232
0x31CC	0x02010328 ;ble_uart_setup_msgs+236
0x31D0	0x2A010005 ;ble_uart_setup_msgs+240
0x31D4	0x02030406 ;ble_uart_setup_msgs+244
0x31D8	0x012A0500 ;ble_uart_setup_msgs+248
0x31DC	0x04008001 ;ble_uart_setup_msgs+252
0x31E0	0x00050504 ;ble_uart_setup_msgs+256
0x31E4	0x01032806 ;ble_uart_setup_msgs+260
0x31E8	0x20061F00 ;ble_uart_setup_msgs+264
0x31EC	0x00070254 ;ble_uart_setup_msgs+268
0x31F0	0x04062A04 ;ble_uart_setup_msgs+272
0x31F4	0x07000809 ;ble_uart_setup_msgs+276
0x31F8	0x0A01042A ;ble_uart_setup_msgs+280
0x31FC	0x00001200 ;ble_uart_setup_msgs+284
0x3200	0x04000A00 ;ble_uart_setup_msgs+288
0x3204	0x00020204 ;ble_uart_setup_msgs+292
0x3208	0x061F0008 ;ble_uart_setup_msgs+296
0x320C	0x00287020 ;ble_uart_setup_msgs+300
0x3210	0x04180101 ;ble_uart_setup_msgs+304
0x3214	0x00050504 ;ble_uart_setup_msgs+308
0x3218	0x01032809 ;ble_uart_setup_msgs+312
0x321C	0x05000A22 ;ble_uart_setup_msgs+316
0x3220	0x0504262A ;ble_uart_setup_msgs+320
0x3224	0x2A0A0004 ;ble_uart_setup_msgs+324
0x3228	0x1F000105 ;ble_uart_setup_msgs+328
0x322C	0x008C2006 ;ble_uart_setup_msgs+332
0x3230	0x46000000 ;ble_uart_setup_msgs+336
0x3234	0x00020314 ;ble_uart_setup_msgs+340
0x3238	0x0102290B ;ble_uart_setup_msgs+344
0x323C	0x04040000 ;ble_uart_setup_msgs+348
0x3240	0x0C000202 ;ble_uart_setup_msgs+352
0x3244	0x0A010028 ;ble_uart_setup_msgs+356
0x3248	0x00040418 ;ble_uart_setup_msgs+360
0x324C	0xA820061F ;ble_uart_setup_msgs+364
0x3250	0x0D000505 ;ble_uart_setup_msgs+368
0x3254	0x02010328 ;ble_uart_setup_msgs+372
0x3258	0x2A27000E ;ble_uart_setup_msgs+376
0x325C	0x01090404 ;ble_uart_setup_msgs+380
0x3260	0x272A0E00 ;ble_uart_setup_msgs+384
0x3264	0x00000A01 ;ble_uart_setup_msgs+388
0x3268	0x00000000 ;ble_uart_setup_msgs+392
0x326C	0x20061F00 ;ble_uart_setup_msgs+396
0x3270	0x040000C4 ;ble_uart_setup_msgs+400
0x3274	0x00050504 ;ble_uart_setup_msgs+404
0x3278	0x0103280F ;ble_uart_setup_msgs+408
0x327C	0x29001002 ;ble_uart_setup_msgs+412
0x3280	0x1404042A ;ble_uart_setup_msgs+416
0x3284	0x2A100002 ;ble_uart_setup_msgs+420
0x3288	0x31300129 ;ble_uart_setup_msgs+424
0x328C	0x061F0000 ;ble_uart_setup_msgs+428
0x3290	0x0000E020 ;ble_uart_setup_msgs+432
0x3294	0x00000000 ;ble_uart_setup_msgs+436
0x3298	0x00000000 ;ble_uart_setup_msgs+440
0x329C	0x00000000 ;ble_uart_setup_msgs+444
0x32A0	0x04000000 ;ble_uart_setup_msgs+448
0x32A4	0x00050504 ;ble_uart_setup_msgs+452
0x32A8	0x01032811 ;ble_uart_setup_msgs+456
0x32AC	0x1F001202 ;ble_uart_setup_msgs+460
0x32B0	0x00FC2006 ;ble_uart_setup_msgs+464
0x32B4	0x04042A24 ;ble_uart_setup_msgs+468
0x32B8	0x12000208 ;ble_uart_setup_msgs+472
0x32BC	0x3101242A ;ble_uart_setup_msgs+476
0x32C0	0x00000032 ;ble_uart_setup_msgs+480
0x32C4	0x04000000 ;ble_uart_setup_msgs+484
0x32C8	0x00050504 ;ble_uart_setup_msgs+488
0x32CC	0x00032813 ;ble_uart_setup_msgs+492
0x32D0	0x1821061F ;ble_uart_setup_msgs+496
0x32D4	0x00140201 ;ble_uart_setup_msgs+500
0x32D8	0x04042A26 ;ble_uart_setup_msgs+504
0x32DC	0x14000204 ;ble_uart_setup_msgs+508
0x32E0	0x3301262A ;ble_uart_setup_msgs+512
0x32E4	0x04000034 ;ble_uart_setup_msgs+516
0x32E8	0x00050504 ;ble_uart_setup_msgs+520
0x32EC	0x01032815 ;ble_uart_setup_msgs+524
0x32F0	0x21061F00 ;ble_uart_setup_msgs+528
0x32F4	0x00160234 ;ble_uart_setup_msgs+532
0x32F8	0x04062A50 ;ble_uart_setup_msgs+536
0x32FC	0x16000708 ;ble_uart_setup_msgs+540
0x3300	0x0201502A ;ble_uart_setup_msgs+544
0x3304	0xAAAA0000 ;ble_uart_setup_msgs+548
0x3308	0x0404CCCC ;ble_uart_setup_msgs+552
0x330C	0x17001010 ;ble_uart_setup_msgs+556
0x3310	0x061F0028 ;ble_uart_setup_msgs+560
0x3314	0x01005021 ;ble_uart_setup_msgs+564
0x3318	0x24DCCA9E ;ble_uart_setup_msgs+568
0x331C	0xE0A9E50E ;ble_uart_setup_msgs+572
0x3320	0xB5A3F393 ;ble_uart_setup_msgs+576
0x3324	0x6E400001 ;ble_uart_setup_msgs+580
0x3328	0x13130404 ;ble_uart_setup_msgs+584
0x332C	0x03281800 ;ble_uart_setup_msgs+588
0x3330	0x1F000401 ;ble_uart_setup_msgs+592
0x3334	0x196C2106 ;ble_uart_setup_msgs+596
0x3338	0xDCCA9E00 ;ble_uart_setup_msgs+600
0x333C	0xA9E50E24 ;ble_uart_setup_msgs+604
0x3340	0xA3F393E0 ;ble_uart_setup_msgs+608
0x3344	0x400002B5 ;ble_uart_setup_msgs+612
0x3348	0x1410446E ;ble_uart_setup_msgs+616
0x334C	0x00190000 ;ble_uart_setup_msgs+620
0x3350	0x00000202 ;ble_uart_setup_msgs+624
0x3354	0x8821061F ;ble_uart_setup_msgs+628
0x3358	0x00000000 ;ble_uart_setup_msgs+632
0x335C	0x00000000 ;ble_uart_setup_msgs+636
0x3360	0x00000000 ;ble_uart_setup_msgs+640
0x3364	0x00000000 ;ble_uart_setup_msgs+644
0x3368	0x04000000 ;ble_uart_setup_msgs+648
0x336C	0x00131304 ;ble_uart_setup_msgs+652
0x3370	0x0103281A ;ble_uart_setup_msgs+656
0x3374	0x21061F00 ;ble_uart_setup_msgs+660
0x3378	0x001B10A4 ;ble_uart_setup_msgs+664
0x337C	0x24DCCA9E ;ble_uart_setup_msgs+668
0x3380	0xE0A9E50E ;ble_uart_setup_msgs+672
0x3384	0xB5A3F393 ;ble_uart_setup_msgs+676
0x3388	0x6E400003 ;ble_uart_setup_msgs+680
0x338C	0x00140014 ;ble_uart_setup_msgs+684
0x3390	0x03001B00 ;ble_uart_setup_msgs+688
0x3394	0x061F0002 ;ble_uart_setup_msgs+692
0x3398	0x0000C021 ;ble_uart_setup_msgs+696
0x339C	0x00000000 ;ble_uart_setup_msgs+700
0x33A0	0x00000000 ;ble_uart_setup_msgs+704
0x33A4	0x00000000 ;ble_uart_setup_msgs+708
0x33A8	0x00000000 ;ble_uart_setup_msgs+712
0x33AC	0x14460000 ;ble_uart_setup_msgs+716
0x33B0	0x1C000203 ;ble_uart_setup_msgs+720
0x33B4	0x1F000229 ;ble_uart_setup_msgs+724
0x33B8	0x01DC2106 ;ble_uart_setup_msgs+728
0x33BC	0x04040000 ;ble_uart_setup_msgs+732
0x33C0	0x1D001313 ;ble_uart_setup_msgs+736
0x33C4	0x14010328 ;ble_uart_setup_msgs+740
0x33C8	0xCA9E001E ;ble_uart_setup_msgs+744
0x33CC	0xE50E24DC ;ble_uart_setup_msgs+748
0x33D0	0xF393E0A9 ;ble_uart_setup_msgs+752
0x33D4	0x0004B5A3 ;ble_uart_setup_msgs+756
0x33D8	0xF821061F ;ble_uart_setup_msgs+760
0x33DC	0x546E4000 ;ble_uart_setup_msgs+764
0x33E0	0x00000910 ;ble_uart_setup_msgs+768
0x33E4	0x0204001E ;ble_uart_setup_msgs+772
0x33E8	0x00000000 ;ble_uart_setup_msgs+776
0x33EC	0x00000000 ;ble_uart_setup_msgs+780
0x33F0	0x03144600 ;ble_uart_setup_msgs+784
0x33F4	0x291F0002 ;ble_uart_setup_msgs+788
0x33F8	0x22061F00 ;ble_uart_setup_msgs+792
0x33FC	0x00010214 ;ble_uart_setup_msgs+796
0x3400	0x13040400 ;ble_uart_setup_msgs+800
0x3404	0x28200013 ;ble_uart_setup_msgs+804
0x3408	0x21020103 ;ble_uart_setup_msgs+808
0x340C	0xDCCA9E00 ;ble_uart_setup_msgs+812
0x3410	0xA9E50E24 ;ble_uart_setup_msgs+816
0x3414	0xA3F393E0 ;ble_uart_setup_msgs+820
0x3418	0x061700B5 ;ble_uart_setup_msgs+824
0x341C	0x00053022 ;ble_uart_setup_msgs+828
0x3420	0x04066E40 ;ble_uart_setup_msgs+832
0x3424	0x21000607 ;ble_uart_setup_msgs+836
0x3428	0xFF020500 ;ble_uart_setup_msgs+840
0x342C	0xFFFFFFFF ;ble_uart_setup_msgs+844
0x3430	0x000000FF ;ble_uart_setup_msgs+848
0x3434	0x00000000 ;ble_uart_setup_msgs+852
0x3438	0x1F000000 ;ble_uart_setup_msgs+856
0x343C	0x2A004006 ;ble_uart_setup_msgs+860
0x3440	0x80000100 ;ble_uart_setup_msgs+864
0x3444	0x00030004 ;ble_uart_setup_msgs+868
0x3448	0x01052A00 ;ble_uart_setup_msgs+872
0x344C	0x00040400 ;ble_uart_setup_msgs+876
0x3450	0x2A0B000A ;ble_uart_setup_msgs+880
0x3454	0x80000127 ;ble_uart_setup_msgs+884
0x3458	0x000E0004 ;ble_uart_setup_msgs+888
0x345C	0x1C40061F ;ble_uart_setup_msgs+892
0x3460	0x292A0000 ;ble_uart_setup_msgs+896
0x3464	0x04800001 ;ble_uart_setup_msgs+900
0x3468	0x00001000 ;ble_uart_setup_msgs+904
0x346C	0x0001242A ;ble_uart_setup_msgs+908
0x3470	0x12000480 ;ble_uart_setup_msgs+912
0x3474	0x262A0000 ;ble_uart_setup_msgs+916
0x3478	0x04800001 ;ble_uart_setup_msgs+920
0x347C	0x40061F00 ;ble_uart_setup_msgs+924
0x3480	0x00140038 ;ble_uart_setup_msgs+928
0x3484	0x01502A00 ;ble_uart_setup_msgs+932
0x3488	0x00048000 ;ble_uart_setup_msgs+936
0x348C	0x00000016 ;ble_uart_setup_msgs+940
0x3490	0x08000202 ;ble_uart_setup_msgs+944
0x3494	0x00190004 ;ble_uart_setup_msgs+948
0x3498	0x02030000 ;ble_uart_setup_msgs+952
0x349C	0x061D0000 ;ble_uart_setup_msgs+956
0x34A0	0x04025440 ;ble_uart_setup_msgs+960
0x34A4	0x1C001B00 ;ble_uart_setup_msgs+964
0x34A8	0x00020400 ;ble_uart_setup_msgs+968
0x34AC	0x1E00040A ;ble_uart_setup_msgs+972
0x34B0	0x05001F00 ;ble_uart_setup_msgs+976
0x34B4	0x04800002 ;ble_uart_setup_msgs+980
0x34B8	0x00002100 ;ble_uart_setup_msgs+984
0x34BC	0x13000000 ;ble_uart_setup_msgs+988
0x34C0	0x9E005006 ;ble_uart_setup_msgs+992
0x34C4	0x0E24DCCA ;ble_uart_setup_msgs+996
0x34C8	0x93E0A9E5 ;ble_uart_setup_msgs+1000
0x34CC	0x00B5A3F3 ;ble_uart_setup_msgs+1004
0x34D0	0x006E4000 ;ble_uart_setup_msgs+1008
0x34D4	0x00000000 ;ble_uart_setup_msgs+1012
0x34D8	0x00000000 ;ble_uart_setup_msgs+1016
0x34DC	0x00000000 ;ble_uart_setup_msgs+1020
0x34E0	0x0060061F ;ble_uart_setup_msgs+1024
0x34E4	0x00000000 ;ble_uart_setup_msgs+1028
0x34E8	0x00000000 ;ble_uart_setup_msgs+1032
0x34EC	0x00000000 ;ble_uart_setup_msgs+1036
0x34F0	0x00000000 ;ble_uart_setup_msgs+1040
0x34F4	0x00000000 ;ble_uart_setup_msgs+1044
0x34F8	0x00000000 ;ble_uart_setup_msgs+1048
0x34FC	0x00000000 ;ble_uart_setup_msgs+1052
0x3500	0x60060800 ;ble_uart_setup_msgs+1056
0x3504	0x0000001C ;ble_uart_setup_msgs+1060
0x3508	0x00000000 ;ble_uart_setup_msgs+1064
0x350C	0x00000000 ;ble_uart_setup_msgs+1068
0x3510	0x00000000 ;ble_uart_setup_msgs+1072
0x3514	0x00000000 ;ble_uart_setup_msgs+1076
0x3518	0x00000000 ;ble_uart_setup_msgs+1080
0x351C	0x00000000 ;ble_uart_setup_msgs+1084
0x3520	0x06060000 ;ble_uart_setup_msgs+1088
0x3524	0x690300F0 ;ble_uart_setup_msgs+1092
0x3528	0x00000022 ;ble_uart_setup_msgs+1096
0x352C	0x00000000 ;ble_uart_setup_msgs+1100
0x3530	0x00000000 ;ble_uart_setup_msgs+1104
0x3534	0x00000000 ;ble_uart_setup_msgs+1108
0x3538	0x00000000 ;ble_uart_setup_msgs+1112
0x353C	0x00000000 ;ble_uart_setup_msgs+1116
0x3540	0x0000 ;ble_uart_setup_msgs+1120
; end of ble_uart_setup_msgs
;ble_p_click.c,0 :: ?ICS?lstr1_ble_p_click [6]
0x3542	0x656D616E ;?ICS?lstr1_ble_p_click+0
0x3546	0x003D ;?ICS?lstr1_ble_p_click+4
; end of ?ICS?lstr1_ble_p_click
;,0 :: _initBlock_4 [38]
; Containing: ?ICS?lstr2_ble_p_click [17]
;             ?ICS?lstr4_ble_uart [21]
0x3548	0x74726155 ;_initBlock_4+0 : ?ICS?lstr2_ble_p_click at 0x3548
0x354C	0x696E6920 ;_initBlock_4+4
0x3550	0x6C616974 ;_initBlock_4+8
0x3554	0x64657A69 ;_initBlock_4+12
0x3558	0x6D614E00 ;_initBlock_4+16 : ?ICS?lstr4_ble_uart at 0x3559
0x355C	0x65732065 ;_initBlock_4+20
0x3560	0x4E202E74 ;_initBlock_4+24
0x3564	0x6E207765 ;_initBlock_4+28
0x3568	0x3A656D61 ;_initBlock_4+32
0x356C	0x0020 ;_initBlock_4+36
; end of _initBlock_4
;,0 :: _initBlock_5 [104]
; Containing: ?ICS?lstr5_ble_uart [21]
;             ?ICS?lstr1_ble_uart [18]
;             ?ICS?lstr2_ble_uart [64]
;             ?ICShal_aci_tl_aci_debug_print [1]
0x356E	0x656D614E ;_initBlock_5+0 : ?ICS?lstr5_ble_uart at 0x356E
0x3572	0x74657320 ;_initBlock_5+4
0x3576	0x676E6974 ;_initBlock_5+8
0x357A	0x69616620 ;_initBlock_5+12
0x357E	0x2E64656C ;_initBlock_5+16
0x3582	0x454C4200 ;_initBlock_5+20 : ?ICS?lstr1_ble_uart at 0x3583
0x3586	0x43205020 ;_initBlock_5+24
0x358A	0x6B63696C ;_initBlock_5+28
0x358E	0x74655320 ;_initBlock_5+32
0x3592	0x53007075 ;_initBlock_5+36 : ?ICS?lstr2_ble_uart at 0x3595
0x3596	0x6C207465 ;_initBlock_5+40
0x359A	0x20656E69 ;_initBlock_5+44
0x359E	0x69646E65 ;_initBlock_5+48
0x35A2	0x7420676E ;_initBlock_5+52
0x35A6	0x656E206F ;_initBlock_5+56
0x35AA	0x6E696C77 ;_initBlock_5+60
0x35AE	0x6F742065 ;_initBlock_5+64
0x35B2	0x6E657320 ;_initBlock_5+68
0x35B6	0x61642064 ;_initBlock_5+72
0x35BA	0x66206174 ;_initBlock_5+76
0x35BE	0x206D6F72 ;_initBlock_5+80
0x35C2	0x20656874 ;_initBlock_5+84
0x35C6	0x69726573 ;_initBlock_5+88
0x35CA	0x6D206C61 ;_initBlock_5+92
0x35CE	0x74696E6F ;_initBlock_5+96
0x35D2	0x0000726F ;_initBlock_5+100 : ?ICShal_aci_tl_aci_debug_print at 0x35D5
; end of _initBlock_5
;ble_uart.c,0 :: ?ICSble_uart_services_pipe_type_mapping [48]
0x35D6	0x00800001 ;?ICSble_uart_services_pipe_type_mapping+0
0x35DA	0x00040001 ;?ICSble_uart_services_pipe_type_mapping+4
0x35DE	0x00800001 ;?ICSble_uart_services_pipe_type_mapping+8
0x35E2	0x00800001 ;?ICSble_uart_services_pipe_type_mapping+12
0x35E6	0x00800001 ;?ICSble_uart_services_pipe_type_mapping+16
0x35EA	0x00800001 ;?ICSble_uart_services_pipe_type_mapping+20
0x35EE	0x00800001 ;?ICSble_uart_services_pipe_type_mapping+24
0x35F2	0x00080001 ;?ICSble_uart_services_pipe_type_mapping+28
0x35F6	0x00020001 ;?ICSble_uart_services_pipe_type_mapping+32
0x35FA	0x00020001 ;?ICSble_uart_services_pipe_type_mapping+36
0x35FE	0x00080001 ;?ICSble_uart_services_pipe_type_mapping+40
0x3602	0x00800001 ;?ICSble_uart_services_pipe_type_mapping+44
; end of ?ICSble_uart_services_pipe_type_mapping
;,0 :: _initBlock_7 [28]
; Containing: ?ICS?lstr3_ble_uart [11]
;             ?ICS?lstr6_ble_uart [16]
;             ?ICSlib_aci_request_operation_pipe [1]
0x3606	0x55544553 ;_initBlock_7+0 : ?ICS?lstr3_ble_uart at 0x3606
0x360A	0x4F442050 ;_initBlock_7+4
0x360E	0x5200454E ;_initBlock_7+8 : ?ICS?lstr6_ble_uart at 0x3611
0x3612	0x69656365 ;_initBlock_7+12
0x3616	0x20646576 ;_initBlock_7+16
0x361A	0x61746164 ;_initBlock_7+20
0x361E	0x0000203A ;_initBlock_7+24 : ?ICSlib_aci_request_operation_pipe at 0x3621
; end of _initBlock_7
;,0 :: _initBlock_8 [130]
; Containing: ?ICSlib_aci_indicate_operation_pipe [1]
;             ?ICS?lstr4_uart_aci [30]
;             ?ICS?lstr5_uart_aci [30]
;             ?ICS?lstr6_uart_aci [56]
;             ?ICS?lstr7_uart_aci [13]
0x3622	0x76452000 ;_initBlock_8+0 : ?ICSlib_aci_indicate_operation_pipe at 0x3622 : ?ICS?lstr4_uart_aci at 0x3623
0x3626	0x20746E65 ;_initBlock_8+4
0x362A	0x69766564 ;_initBlock_8+8
0x362E	0x73206563 ;_initBlock_8+12
0x3632	0x74726174 ;_initBlock_8+16
0x3636	0x203A6465 ;_initBlock_8+20
0x363A	0x75746553 ;_initBlock_8+24
0x363E	0x20002070 ;_initBlock_8+28 : ?ICS?lstr5_uart_aci at 0x3641
0x3642	0x20747645 ;_initBlock_8+32
0x3646	0x69766544 ;_initBlock_8+36
0x364A	0x53206563 ;_initBlock_8+40
0x364E	0x74726174 ;_initBlock_8+44
0x3652	0x203A6465 ;_initBlock_8+48
0x3656	0x6E617453 ;_initBlock_8+52
0x365A	0x20796264 ;_initBlock_8+56
0x365E	0x64412000 ;_initBlock_8+60 : ?ICS?lstr6_uart_aci at 0x365F
0x3662	0x74726576 ;_initBlock_8+64
0x3666	0x6E697369 ;_initBlock_8+68
0x366A	0x74732067 ;_initBlock_8+72
0x366E	0x65747261 ;_initBlock_8+76
0x3672	0x203A2064 ;_initBlock_8+80
0x3676	0x20706154 ;_initBlock_8+84
0x367A	0x6E6E6F43 ;_initBlock_8+88
0x367E	0x20746365 ;_initBlock_8+92
0x3682	0x74206E6F ;_initBlock_8+96
0x3686	0x6E206568 ;_initBlock_8+100
0x368A	0x55204652 ;_initBlock_8+104
0x368E	0x20545241 ;_initBlock_8+108
0x3692	0x20707061 ;_initBlock_8+112
0x3696	0x49434100 ;_initBlock_8+116 : ?ICS?lstr7_uart_aci at 0x3697
0x369A	0x6D6F4320 ;_initBlock_8+120
0x369E	0x646E616D ;_initBlock_8+124
0x36A2	0x0020 ;_initBlock_8+128
; end of _initBlock_8
;,0 :: _initBlock_9 [42]
; Containing: ?ICS?lstr9_uart_aci [25]
;             ?ICS?lstr11_uart_aci [16]
;             ?ICSuart_aci_timing_change_done [1]
0x36A4	0x20747645 ;_initBlock_9+0 : ?ICS?lstr9_uart_aci at 0x36A4
0x36A8	0x20646D43 ;_initBlock_9+4
0x36AC	0x70736572 ;_initBlock_9+8
0x36B0	0x3A656E6F ;_initBlock_9+12
0x36B4	0x61745320 ;_initBlock_9+16
0x36B8	0x20737574 ;_initBlock_9+20
0x36BC	0x76452000 ;_initBlock_9+24 : ?ICS?lstr11_uart_aci at 0x36BD
0x36C0	0x6F432074 ;_initBlock_9+28
0x36C4	0x63656E6E ;_initBlock_9+32
0x36C8	0x20646574 ;_initBlock_9+36
0x36CC	0x0000 ;_initBlock_9+40 : ?ICSuart_aci_timing_change_done at 0x36CD
; end of _initBlock_9
;uart_aci.c,0 :: ?ICS?lstr12_uart_aci [18]
0x36CE	0x74764520 ;?ICS?lstr12_uart_aci+0
0x36D2	0x70695020 ;?ICS?lstr12_uart_aci+4
0x36D6	0x74532065 ;?ICS?lstr12_uart_aci+8
0x36DA	0x73757461 ;?ICS?lstr12_uart_aci+12
0x36DE	0x0020 ;?ICS?lstr12_uart_aci+16
; end of ?ICS?lstr12_uart_aci
;,0 :: _initBlock_11 [50]
; Containing: ?ICS?lstr13_uart_aci [11]
;             ?ICS?lstr14_uart_aci [39]
0x36E0	0x6E655320 ;_initBlock_11+0 : ?ICS?lstr13_uart_aci at 0x36E0
0x36E4	0x676E6964 ;_initBlock_11+4
0x36E8	0x2000203A ;_initBlock_11+8 : ?ICS?lstr14_uart_aci at 0x36EB
0x36EC	0x20747645 ;_initBlock_11+12
0x36F0	0x6B6E696C ;_initBlock_11+16
0x36F4	0x6E6F6320 ;_initBlock_11+20
0x36F8	0x7463656E ;_initBlock_11+24
0x36FC	0x206E6F69 ;_initBlock_11+28
0x3700	0x65746E69 ;_initBlock_11+32
0x3704	0x6C617672 ;_initBlock_11+36
0x3708	0x61686320 ;_initBlock_11+40
0x370C	0x6465676E ;_initBlock_11+44
0x3710	0x0020 ;_initBlock_11+48
; end of _initBlock_11
;,0 :: _initBlock_12 [96]
; Containing: ?ICS?lstr15_uart_aci [41]
;             ?ICS?lstr16_uart_aci [55]
0x3712	0x74764520 ;_initBlock_12+0 : ?ICS?lstr15_uart_aci at 0x3712
0x3716	0x73694420 ;_initBlock_12+4
0x371A	0x6E6E6F63 ;_initBlock_12+8
0x371E	0x65746365 ;_initBlock_12+12
0x3722	0x64412F64 ;_initBlock_12+16
0x3726	0x74726576 ;_initBlock_12+20
0x372A	0x6E697369 ;_initBlock_12+24
0x372E	0x69742067 ;_initBlock_12+28
0x3732	0x2064656D ;_initBlock_12+32
0x3736	0x2074756F ;_initBlock_12+36
0x373A	0x64412000 ;_initBlock_12+40 : ?ICS?lstr16_uart_aci at 0x373B
0x373E	0x74726576 ;_initBlock_12+44
0x3742	0x6E697369 ;_initBlock_12+48
0x3746	0x74732067 ;_initBlock_12+52
0x374A	0x65747261 ;_initBlock_12+56
0x374E	0x54202E64 ;_initBlock_12+60
0x3752	0x43207061 ;_initBlock_12+64
0x3756	0x656E6E6F ;_initBlock_12+68
0x375A	0x6F207463 ;_initBlock_12+72
0x375E	0x6874206E ;_initBlock_12+76
0x3762	0x526E2065 ;_initBlock_12+80
0x3766	0x41552046 ;_initBlock_12+84
0x376A	0x61205452 ;_initBlock_12+88
0x376E	0x00207070 ;_initBlock_12+92
; end of _initBlock_12
;uart_aci.c,0 :: ?ICS?lstr17_uart_aci [30]
0x3772	0x49434120 ;?ICS?lstr17_uart_aci+0
0x3776	0x74764520 ;?ICS?lstr17_uart_aci+4
0x377A	0x70695020 ;?ICS?lstr17_uart_aci+8
0x377E	0x72452065 ;?ICS?lstr17_uart_aci+12
0x3782	0x3A726F72 ;?ICS?lstr17_uart_aci+16
0x3786	0x70695020 ;?ICS?lstr17_uart_aci+20
0x378A	0x3A232065 ;?ICS?lstr17_uart_aci+24
0x378E	0x0020 ;?ICS?lstr17_uart_aci+28
; end of ?ICS?lstr17_uart_aci
;uart_aci.c,0 :: ?ICS?lstr19_uart_aci [22]
0x3790	0x69502020 ;?ICS?lstr19_uart_aci+0
0x3794	0x45206570 ;?ICS?lstr19_uart_aci+4
0x3798	0x726F7272 ;?ICS?lstr19_uart_aci+8
0x379C	0x646F4320 ;?ICS?lstr19_uart_aci+12
0x37A0	0x30203A65 ;?ICS?lstr19_uart_aci+16
0x37A4	0x0078 ;?ICS?lstr19_uart_aci+20
; end of ?ICS?lstr19_uart_aci
;uart_aci.c,0 :: ?ICS?lstr21_uart_aci [12]
0x37A6	0x20574820 ;?ICS?lstr21_uart_aci+0
0x37AA	0x6F727265 ;?ICS?lstr21_uart_aci+4
0x37AE	0x00203A72 ;?ICS?lstr21_uart_aci+8
; end of ?ICS?lstr21_uart_aci
;uart_aci.c,0 :: ?ICS?lstr23_uart_aci [2]
0x37B2	0x000A ;?ICS?lstr23_uart_aci+0
; end of ?ICS?lstr23_uart_aci
;,0 :: _initBlock_17 [88]
; Containing: ?ICS?lstr24_uart_aci [55]
;             ?ICS?lstr1___Lib_Sprinti [16]
;             ?ICS?lstr2___Lib_Sprinti [17]
0x37B4	0x76644120 ;_initBlock_17+0 : ?ICS?lstr24_uart_aci at 0x37B4
0x37B8	0x69747265 ;_initBlock_17+4
0x37BC	0x676E6973 ;_initBlock_17+8
0x37C0	0x61747320 ;_initBlock_17+12
0x37C4	0x64657472 ;_initBlock_17+16
0x37C8	0x6154202E ;_initBlock_17+20
0x37CC	0x6F432070 ;_initBlock_17+24
0x37D0	0x63656E6E ;_initBlock_17+28
0x37D4	0x6E6F2074 ;_initBlock_17+32
0x37D8	0x65687420 ;_initBlock_17+36
0x37DC	0x46526E20 ;_initBlock_17+40
0x37E0	0x52415520 ;_initBlock_17+44
0x37E4	0x70612054 ;_initBlock_17+48
0x37E8	0x6E002070 ;_initBlock_17+52 : ?ICS?lstr1___Lib_Sprinti at 0x37EB
0x37EC	0x6C2D6E6F ;_initBlock_17+56
0x37F0	0x20676E6F ;_initBlock_17+60
0x37F4	0x6E697270 ;_initBlock_17+64
0x37F8	0x6E006674 ;_initBlock_17+68 : ?ICS?lstr2___Lib_Sprinti at 0x37FB
0x37FC	0x662D6E6F ;_initBlock_17+72
0x3800	0x74616F6C ;_initBlock_17+76
0x3804	0x69727020 ;_initBlock_17+80
0x3808	0x0066746E ;_initBlock_17+84
; end of _initBlock_17
;,0 :: _initBlock_18 [22]
; Containing: ?ICS?lstr3___Lib_Sprinti [5]
;             ?ICS__Lib_System_4XX_APBAHBPrescTable [16]
;             ?ICSaci_loop_setup_required_L0 [1]
0x380C	0x6C6C756E ;_initBlock_18+0 : ?ICS?lstr3___Lib_Sprinti at 0x380C
0x3810	0x00000000 ;_initBlock_18+4 : ?ICS__Lib_System_4XX_APBAHBPrescTable at 0x3811
0x3814	0x03020100 ;_initBlock_18+8
0x3818	0x03020104 ;_initBlock_18+12
0x381C	0x08070604 ;_initBlock_18+16
0x3820	0x0009 ;_initBlock_18+20 : ?ICSaci_loop_setup_required_L0 at 0x3821
; end of _initBlock_18
;ble_p_click.c,0 :: ?ICShandle_serial_input_msg_length_L0 [1]
0x3822	0x00 ;?ICShandle_serial_input_msg_length_L0+0
; end of ?ICShandle_serial_input_msg_length_L0
;__Lib_GPIO_32F4xx_Defs.c,752 :: __GPIO_MODULE_SPI3_PC10_11_12 [108]
0x3824	0x0000062A ;__GPIO_MODULE_SPI3_PC10_11_12+0
0x3828	0x0000062B ;__GPIO_MODULE_SPI3_PC10_11_12+4
0x382C	0x0000062C ;__GPIO_MODULE_SPI3_PC10_11_12+8
0x3830	0xFFFFFFFF ;__GPIO_MODULE_SPI3_PC10_11_12+12
0x3834	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+16
0x3838	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+20
0x383C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+24
0x3840	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+28
0x3844	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+32
0x3848	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+36
0x384C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+40
0x3850	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+44
0x3854	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+48
0x3858	0x00001018 ;__GPIO_MODULE_SPI3_PC10_11_12+52
0x385C	0x00001018 ;__GPIO_MODULE_SPI3_PC10_11_12+56
0x3860	0x00001018 ;__GPIO_MODULE_SPI3_PC10_11_12+60
0x3864	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+64
0x3868	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+68
0x386C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+72
0x3870	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+76
0x3874	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+80
0x3878	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+84
0x387C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+88
0x3880	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+92
0x3884	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+96
0x3888	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+100
0x388C	0x00000000 ;__GPIO_MODULE_SPI3_PC10_11_12+104
; end of __GPIO_MODULE_SPI3_PC10_11_12
;__Lib_GPIO_32F4xx_Defs.c,789 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x3890	0x00000709 ;__GPIO_MODULE_USART1_PA9_10+0
0x3894	0x0000070A ;__GPIO_MODULE_USART1_PA9_10+4
0x3898	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x389C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x38A0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x38A4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x38A8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x38AC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x38B0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x38B4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x38B8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x38BC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x38C0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x38C4	0x00001018 ;__GPIO_MODULE_USART1_PA9_10+52
0x38C8	0x00001018 ;__GPIO_MODULE_USART1_PA9_10+56
0x38CC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x38D0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x38D4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x38D8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x38DC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x38E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x38E4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x38E8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x38EC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x38F0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x38F4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x38F8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;ble_p_click.c,0 :: ?ICShandle_serial_input_name_buf_L0 [100]
0x38FC	0x00000000 ;?ICShandle_serial_input_name_buf_L0+0
0x3900	0x00000000 ;?ICShandle_serial_input_name_buf_L0+4
0x3904	0x00000000 ;?ICShandle_serial_input_name_buf_L0+8
0x3908	0x00000000 ;?ICShandle_serial_input_name_buf_L0+12
0x390C	0x00000000 ;?ICShandle_serial_input_name_buf_L0+16
0x3910	0x00000000 ;?ICShandle_serial_input_name_buf_L0+20
0x3914	0x00000000 ;?ICShandle_serial_input_name_buf_L0+24
0x3918	0x00000000 ;?ICShandle_serial_input_name_buf_L0+28
0x391C	0x00000000 ;?ICShandle_serial_input_name_buf_L0+32
0x3920	0x00000000 ;?ICShandle_serial_input_name_buf_L0+36
0x3924	0x00000000 ;?ICShandle_serial_input_name_buf_L0+40
0x3928	0x00000000 ;?ICShandle_serial_input_name_buf_L0+44
0x392C	0x00000000 ;?ICShandle_serial_input_name_buf_L0+48
0x3930	0x00000000 ;?ICShandle_serial_input_name_buf_L0+52
0x3934	0x00000000 ;?ICShandle_serial_input_name_buf_L0+56
0x3938	0x00000000 ;?ICShandle_serial_input_name_buf_L0+60
0x393C	0x00000000 ;?ICShandle_serial_input_name_buf_L0+64
0x3940	0x00000000 ;?ICShandle_serial_input_name_buf_L0+68
0x3944	0x00000000 ;?ICShandle_serial_input_name_buf_L0+72
0x3948	0x00000000 ;?ICShandle_serial_input_name_buf_L0+76
0x394C	0x00000000 ;?ICShandle_serial_input_name_buf_L0+80
0x3950	0x00000000 ;?ICShandle_serial_input_name_buf_L0+84
0x3954	0x00000000 ;?ICShandle_serial_input_name_buf_L0+88
0x3958	0x00000000 ;?ICShandle_serial_input_name_buf_L0+92
0x395C	0x00000000 ;?ICShandle_serial_input_name_buf_L0+96
; end of ?ICShandle_serial_input_name_buf_L0
;,0 :: _initBlock_23 [114]
; Containing: ?lstr_7_aci_queue [57]
;             ?lstr_14_aci_queue [57]
0x3960	0x552F3A43 ;_initBlock_23+0 : ?lstr_7_aci_queue at 0x3960
0x3964	0x73726573 ;_initBlock_23+4
0x3968	0x6B69562F ;_initBlock_23+8
0x396C	0x2F726F74 ;_initBlock_23+12
0x3970	0x6B736544 ;_initBlock_23+16
0x3974	0x2F706F74 ;_initBlock_23+20
0x3978	0x5F656C62 ;_initBlock_23+24
0x397C	0x676F6C62 ;_initBlock_23+28
0x3980	0x6C65725F ;_initBlock_23+32
0x3984	0x65736165 ;_initBlock_23+36
0x3988	0x6372732F ;_initBlock_23+40
0x398C	0x6963612F ;_initBlock_23+44
0x3990	0x6575715F ;_initBlock_23+48
0x3994	0x632E6575 ;_initBlock_23+52
0x3998	0x2F3A4300 ;_initBlock_23+56 : ?lstr_14_aci_queue at 0x3999
0x399C	0x72657355 ;_initBlock_23+60
0x39A0	0x69562F73 ;_initBlock_23+64
0x39A4	0x726F746B ;_initBlock_23+68
0x39A8	0x7365442F ;_initBlock_23+72
0x39AC	0x706F746B ;_initBlock_23+76
0x39B0	0x656C622F ;_initBlock_23+80
0x39B4	0x6F6C625F ;_initBlock_23+84
0x39B8	0x65725F67 ;_initBlock_23+88
0x39BC	0x7361656C ;_initBlock_23+92
0x39C0	0x72732F65 ;_initBlock_23+96
0x39C4	0x63612F63 ;_initBlock_23+100
0x39C8	0x75715F69 ;_initBlock_23+104
0x39CC	0x2E657565 ;_initBlock_23+108
0x39D0	0x0063 ;_initBlock_23+112
; end of _initBlock_23
;,0 :: _initBlock_24 [114]
; Containing: ?lstr_15_aci_queue [57]
;             ?lstr_6_aci_queue [57]
0x39D2	0x552F3A43 ;_initBlock_24+0 : ?lstr_15_aci_queue at 0x39D2
0x39D6	0x73726573 ;_initBlock_24+4
0x39DA	0x6B69562F ;_initBlock_24+8
0x39DE	0x2F726F74 ;_initBlock_24+12
0x39E2	0x6B736544 ;_initBlock_24+16
0x39E6	0x2F706F74 ;_initBlock_24+20
0x39EA	0x5F656C62 ;_initBlock_24+24
0x39EE	0x676F6C62 ;_initBlock_24+28
0x39F2	0x6C65725F ;_initBlock_24+32
0x39F6	0x65736165 ;_initBlock_24+36
0x39FA	0x6372732F ;_initBlock_24+40
0x39FE	0x6963612F ;_initBlock_24+44
0x3A02	0x6575715F ;_initBlock_24+48
0x3A06	0x632E6575 ;_initBlock_24+52
0x3A0A	0x2F3A4300 ;_initBlock_24+56 : ?lstr_6_aci_queue at 0x3A0B
0x3A0E	0x72657355 ;_initBlock_24+60
0x3A12	0x69562F73 ;_initBlock_24+64
0x3A16	0x726F746B ;_initBlock_24+68
0x3A1A	0x7365442F ;_initBlock_24+72
0x3A1E	0x706F746B ;_initBlock_24+76
0x3A22	0x656C622F ;_initBlock_24+80
0x3A26	0x6F6C625F ;_initBlock_24+84
0x3A2A	0x65725F67 ;_initBlock_24+88
0x3A2E	0x7361656C ;_initBlock_24+92
0x3A32	0x72732F65 ;_initBlock_24+96
0x3A36	0x63612F63 ;_initBlock_24+100
0x3A3A	0x75715F69 ;_initBlock_24+104
0x3A3E	0x2E657565 ;_initBlock_24+108
0x3A42	0x0063 ;_initBlock_24+112
; end of _initBlock_24
;,0 :: _initBlock_25 [114]
; Containing: ?lstr_12_aci_queue [57]
;             ?lstr_10_aci_queue [57]
0x3A44	0x552F3A43 ;_initBlock_25+0 : ?lstr_12_aci_queue at 0x3A44
0x3A48	0x73726573 ;_initBlock_25+4
0x3A4C	0x6B69562F ;_initBlock_25+8
0x3A50	0x2F726F74 ;_initBlock_25+12
0x3A54	0x6B736544 ;_initBlock_25+16
0x3A58	0x2F706F74 ;_initBlock_25+20
0x3A5C	0x5F656C62 ;_initBlock_25+24
0x3A60	0x676F6C62 ;_initBlock_25+28
0x3A64	0x6C65725F ;_initBlock_25+32
0x3A68	0x65736165 ;_initBlock_25+36
0x3A6C	0x6372732F ;_initBlock_25+40
0x3A70	0x6963612F ;_initBlock_25+44
0x3A74	0x6575715F ;_initBlock_25+48
0x3A78	0x632E6575 ;_initBlock_25+52
0x3A7C	0x2F3A4300 ;_initBlock_25+56 : ?lstr_10_aci_queue at 0x3A7D
0x3A80	0x72657355 ;_initBlock_25+60
0x3A84	0x69562F73 ;_initBlock_25+64
0x3A88	0x726F746B ;_initBlock_25+68
0x3A8C	0x7365442F ;_initBlock_25+72
0x3A90	0x706F746B ;_initBlock_25+76
0x3A94	0x656C622F ;_initBlock_25+80
0x3A98	0x6F6C625F ;_initBlock_25+84
0x3A9C	0x65725F67 ;_initBlock_25+88
0x3AA0	0x7361656C ;_initBlock_25+92
0x3AA4	0x72732F65 ;_initBlock_25+96
0x3AA8	0x63612F63 ;_initBlock_25+100
0x3AAC	0x75715F69 ;_initBlock_25+104
0x3AB0	0x2E657565 ;_initBlock_25+108
0x3AB4	0x0063 ;_initBlock_25+112
; end of _initBlock_25
;,0 :: _initBlock_26 [114]
; Containing: ?lstr_1_aci_queue [57]
;             ?lstr_3_aci_queue [57]
0x3AB6	0x552F3A43 ;_initBlock_26+0 : ?lstr_1_aci_queue at 0x3AB6
0x3ABA	0x73726573 ;_initBlock_26+4
0x3ABE	0x6B69562F ;_initBlock_26+8
0x3AC2	0x2F726F74 ;_initBlock_26+12
0x3AC6	0x6B736544 ;_initBlock_26+16
0x3ACA	0x2F706F74 ;_initBlock_26+20
0x3ACE	0x5F656C62 ;_initBlock_26+24
0x3AD2	0x676F6C62 ;_initBlock_26+28
0x3AD6	0x6C65725F ;_initBlock_26+32
0x3ADA	0x65736165 ;_initBlock_26+36
0x3ADE	0x6372732F ;_initBlock_26+40
0x3AE2	0x6963612F ;_initBlock_26+44
0x3AE6	0x6575715F ;_initBlock_26+48
0x3AEA	0x632E6575 ;_initBlock_26+52
0x3AEE	0x2F3A4300 ;_initBlock_26+56 : ?lstr_3_aci_queue at 0x3AEF
0x3AF2	0x72657355 ;_initBlock_26+60
0x3AF6	0x69562F73 ;_initBlock_26+64
0x3AFA	0x726F746B ;_initBlock_26+68
0x3AFE	0x7365442F ;_initBlock_26+72
0x3B02	0x706F746B ;_initBlock_26+76
0x3B06	0x656C622F ;_initBlock_26+80
0x3B0A	0x6F6C625F ;_initBlock_26+84
0x3B0E	0x65725F67 ;_initBlock_26+88
0x3B12	0x7361656C ;_initBlock_26+92
0x3B16	0x72732F65 ;_initBlock_26+96
0x3B1A	0x63612F63 ;_initBlock_26+100
0x3B1E	0x75715F69 ;_initBlock_26+104
0x3B22	0x2E657565 ;_initBlock_26+108
0x3B26	0x0063 ;_initBlock_26+112
; end of _initBlock_26
;,0 :: _initBlock_27 [74]
; Containing: ?lstr_2_aci_queue [57]
;             hexs [17]
0x3B28	0x552F3A43 ;_initBlock_27+0 : ?lstr_2_aci_queue at 0x3B28
0x3B2C	0x73726573 ;_initBlock_27+4
0x3B30	0x6B69562F ;_initBlock_27+8
0x3B34	0x2F726F74 ;_initBlock_27+12
0x3B38	0x6B736544 ;_initBlock_27+16
0x3B3C	0x2F706F74 ;_initBlock_27+20
0x3B40	0x5F656C62 ;_initBlock_27+24
0x3B44	0x676F6C62 ;_initBlock_27+28
0x3B48	0x6C65725F ;_initBlock_27+32
0x3B4C	0x65736165 ;_initBlock_27+36
0x3B50	0x6372732F ;_initBlock_27+40
0x3B54	0x6963612F ;_initBlock_27+44
0x3B58	0x6575715F ;_initBlock_27+48
0x3B5C	0x632E6575 ;_initBlock_27+52
0x3B60	0x32313000 ;_initBlock_27+56 : hexs at 0x3B61
0x3B64	0x36353433 ;_initBlock_27+60
0x3B68	0x61393837 ;_initBlock_27+64
0x3B6C	0x65646362 ;_initBlock_27+68
0x3B70	0x0066 ;_initBlock_27+72
; end of _initBlock_27
;,0 :: _initBlock_28 [18]
; Containing: hexb [17]
;             ?ICSdo_aci_setup_setup_offset_L0 [1]
0x3B72	0x33323130 ;_initBlock_28+0 : hexb at 0x3B72
0x3B76	0x37363534 ;_initBlock_28+4
0x3B7A	0x42413938 ;_initBlock_28+8
0x3B7E	0x46454443 ;_initBlock_28+12
0x3B82	0x0000 ;_initBlock_28+16 : ?ICSdo_aci_setup_setup_offset_L0 at 0x3B83
; end of _initBlock_28
;,0 :: _initBlock_29_Padded [6]
; Containing: ?ICSdo_aci_setup_i_L0 [4]
;             ?ICSdo_aci_setup_cmd_status_L0 [1]
0x3B86	0x00000000 ;_initBlock_29_Padded+0 : ?ICSdo_aci_setup_i_L0 at 0x3B87
0x3B8A	0x8800 ;_initBlock_29_Padded+4 : ?ICSdo_aci_setup_cmd_status_L0 at 0x3B8B
; end of _initBlock_29_Padded
;,0 :: _initBlock_30_Padded [20]
; Containing: ?ICSdo_aci_setup_aci_data_L0 [4]
;             ?ICSaci_loop_hello_L3 [15]
0x3B8E	0x0002E100 ;_initBlock_30_Padded+0 : ?ICSdo_aci_setup_aci_data_L0 at 0x3B8F
0x3B92	0x6C656820 ;_initBlock_30_Padded+4 : ?ICSaci_loop_hello_L3 at 0x3B93
0x3B96	0x61206F6C ;_initBlock_30_Padded+8
0x3B9A	0x6F72646E ;_initBlock_30_Padded+12
0x3B9E	0x00216469 ;_initBlock_30_Padded+16
; end of _initBlock_30_Padded
;uart_aci.c,0 :: ?lstr_1_uart_aci [15]
0x3BA2	0x20454C42 ;?lstr_1_uart_aci+0
0x3BA6	0x54524155 ;?lstr_1_uart_aci+4
0x3BAA	0x52524520 ;?lstr_1_uart_aci+8
0x3BAE	0x00524F ;?lstr_1_uart_aci+12
; end of ?lstr_1_uart_aci
;__Lib_Sprinti.c,114 :: __Lib_Sprinti_octpowers [12]
0x3BB2	0x00080001 ;__Lib_Sprinti_octpowers+0
0x3BB6	0x02000040 ;__Lib_Sprinti_octpowers+4
0x3BBA	0x80001000 ;__Lib_Sprinti_octpowers+8
; end of __Lib_Sprinti_octpowers
;__Lib_Sprinti.c,103 :: __Lib_Sprinti_dpowers [10]
0x3BBE	0x000A0001 ;__Lib_Sprinti_dpowers+0
0x3BC2	0x03E80064 ;__Lib_Sprinti_dpowers+4
0x3BC6	0x2710 ;__Lib_Sprinti_dpowers+8
; end of __Lib_Sprinti_dpowers
;__Lib_Sprinti.c,109 :: __Lib_Sprinti_hexpowers [8]
0x3BC8	0x00100001 ;__Lib_Sprinti_hexpowers+0
0x3BCC	0x10000100 ;__Lib_Sprinti_hexpowers+4
; end of __Lib_Sprinti_hexpowers
;,0 :: _initBlock_35 [6]
; Containing: ?lstr_8_uart_aci [3]
;             ?lstr_20_uart_aci [3]
0x3BD0	0x25006425 ;_initBlock_35+0 : ?lstr_8_uart_aci at 0x3BD0 : ?lstr_20_uart_aci at 0x3BD3
0x3BD4	0x0064 ;_initBlock_35+4
; end of _initBlock_35
;,0 :: _initBlock_36 [6]
; Containing: ?lstr_2_uart_aci [3]
;             ?lstr_22_uart_aci [3]
0x3BD6	0x2500203A ;_initBlock_36+0 : ?lstr_2_uart_aci at 0x3BD6 : ?lstr_22_uart_aci at 0x3BD9
0x3BDA	0x0064 ;_initBlock_36+4
; end of _initBlock_36
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0188      [34]    __Lib_SPI_123_SPIx_Read
0x01AC      [28]    _SPI1_Read
0x01C8      [28]    _SPI3_Read
0x01E4      [28]    _SPI2_Read
0x0200      [28]    _blep_hal_transfer
0x021C       [2]    _noInterrupts
0x0220       [2]    _interrupts
0x0224      [32]    hal_aci_tl_m_aci_reqn_disable
0x0244      [18]    hal_aci_tl_spi_readwrite
0x0258      [34]    _memcpy
0x027C      [80]    _aci_queue_is_full
0x02CC     [116]    _aci_queue_dequeue
0x0340     [268]    hal_aci_tl_m_aci_spi_transfer
0x044C      [84]    _digitalRead
0x04A0      [76]    _aci_queue_is_empty
0x04EC      [32]    hal_aci_tl_m_aci_reqn_enable
0x050C     [160]    _aci_queue_enqueue
0x05AC     [152]    hal_aci_tl_m_aci_event_check
0x0644       [2]    _m_aci_data_print
0x0648     [168]    _GPIO_Clk_Enable
0x06F0     [112]    _hal_aci_tl_event_get
0x0760      [60]    _digitalWrite
0x079C      [62]    ___ble_assert
0x07DC      [12]    _acil_encode_baseband_reset
0x07E8      [88]    _hal_aci_tl_send
0x0840     [104]    _aci_queue_peek
0x08A8      [44]    _acil_encode_cmd_send_data
0x08D4      [24]    _hal_aci_tl_tx_q_empty
0x08EC      [56]    _hal_aci_tl_event_peek
0x0924      [22]    _isdigit
0x093C     [274]    _lib_aci_event_get
0x0A50     [560]    _GPIO_Config
0x0C80     [148]    _hal_aci_tl_pin_reset
0x0D14      [68]    hal_aci_tl_m_aci_pins_set
0x0D58      [18]    _acil_encode_cmd_disconnect
0x0D6C      [36]    _lib_aci_radio_reset
0x0D90     [110]    _acil_encode_cmd_change_timing_req
0x0E00      [92]    _aci_queue_init
0x0E5C      [12]    _Get_Fosc_kHz
0x0E68      [12]    _acil_encode_cmd_change_timing_req_GAP_PPCP
0x0E74     [116]    aci_setup_aci_setup_fill
0x0EE8      [58]    _acil_encode_cmd_connect
0x0F24    [2336]    __Lib_Sprinti__doprnti
0x1844      [44]    _acil_encode_cmd_set_local_data
0x1870      [12]    _acil_encode_cmd_get_device_version
0x187C      [56]    _lib_aci_change_timing
0x18B4     [128]    _lib_aci_send_data
0x1934      [18]    _lib_aci_event_peek
0x1948     [144]    _hal_aci_tl_init
0x19D8     [280]    _lib_aci_board_init
0x1AF0      [18]    _lib_aci_command_queue_empty
0x1B04     [252]    __Lib_GPIO_32F4xx_GPIO_Config_Pin_Alternate_Function
0x1C00      [92]    _lib_aci_disconnect
0x1C5C      [60]    _ble_uart_rx
0x1C98      [92]    _lib_aci_set_local_data
0x1CF4     [184]    _do_aci_setup
0x1DAC     [152]    _uart_process_control_point_rx
0x1E44      [28]    _strlen
0x1E60      [42]    _lib_aci_is_pipe_available
0x1E8C      [36]    _lib_aci_change_timing_GAP_PPCP
0x1EB0      [36]    _lib_aci_device_version
0x1ED4      [84]    _ble_uart_tx
0x1F28     [132]    _RCC_GetClocksFrequency
0x1FAC      [30]    __Lib_UART_123_45_6_UARTx_Write
0x1FCC      [12]    __Lib_UART_123_45_6_UARTx_Data_Ready
0x1FD8      [70]    _GPIO_Alternate_Function_Enable
0x2020      [22]    __Lib_UART_123_45_6_UARTx_Read
0x2038      [48]    _lib_aci_connect
0x2068      [52]    _sprinti
0x209C     [176]    _lib_aci_init
0x214C      [14]    _min
0x215C     [244]    _ble_uart_setup
0x2250      [52]    _memcmp
0x2284     [112]    _ble_uart_name_set
0x22F4      [24]    _UART1_Read
0x230C      [66]    __Lib_SPI_123_SPIx_Init_Advanced
0x2350      [28]    ble_p_click_clear_serial_buffer
0x236C     [660]    __Lib_UART_123_45_6_UARTx_Init_Advanced
0x2600      [24]    _UART1_Data_Ready
0x2618      [50]    __Lib_UART_123_45_6_UARTx_Write_Text
0x2650     [920]    _aci_loop
0x29E8      [76]    __Lib_System_4XX_SystemClockSetDefault
0x2A34     [188]    _handle_serial_input
0x2AF0      [24]    _GPIO_Digital_Input
0x2B08      [84]    _SPI3_Init_Advanced
0x2B5C      [36]    _blep_hal_init
0x2B80      [28]    _UART1_Write_Text
0x2B9C      [28]    _UART1_Write
0x2BB8      [28]    _GPIO_Digital_Output
0x2BD4      [20]    ___CC2DW
0x2BE8      [18]    _ble_uart_loop
0x2BFC      [58]    ___FillZeros
0x2C38      [40]    _setup
0x2C60      [52]    _UART1_Init
0x2C94       [8]    ___GenExcept
0x2C9C      [42]    ___EnableFPU
0x2CC8      [36]    __Lib_System_4XX_InitialSetUpFosc
0x2CEC     [148]    _main
0x2D80     [864]    __Lib_System_4XX_InitialSetUpRCCRCC2
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [4]    FARG_modf_val
0x0000       [4]    FARG_sqrt_x
0x0000       [4]    FARG_ldexp_value
0x0000       [4]    FARG___Lib_CMath_eval_poly_x
0x0000       [4]    FARG_atan_f
0x0000       [4]    FARG_acos_x
0x0000       [4]    FARG_asin_x
0x0000       [4]    FARG_ceil_x
0x0000       [4]    FARG_frexp_value
0x0000       [4]    FARG_floor_x
0x0000       [4]    FARG_fabs_d
0x0000       [4]    FARG_sinh_x
0x0000       [4]    FARG_pow_x
0x0000       [4]    FARG_log10_x
0x0000       [4]    FARG_cosh_x
0x0000       [4]    FARG_tanh_x
0x0000       [4]    FARG_cos_f
0x0000       [4]    FARG_atan2_y
0x0000       [4]    FARG_sin_f
0x0000       [4]    FARG_log_x
0x0000       [4]    FARG_tan_x
0x0000       [4]    FARG_exp_x
0x0004       [4]    FARG_atan2_x
0x0004       [4]    FARG_pow_y
0x20000000       [6]    ?lstr1_ble_p_click
0x20000006      [17]    ?lstr2_ble_p_click
0x20000017      [21]    ?lstr4_ble_uart
0x2000002C      [21]    ?lstr5_ble_uart
0x20000041      [18]    ?lstr1_ble_uart
0x20000053      [64]    ?lstr2_ble_uart
0x20000093       [1]    hal_aci_tl_aci_debug_print
0x20000094      [48]    ble_uart_services_pipe_type_mapping
0x200000C4      [11]    ?lstr3_ble_uart
0x200000CF      [16]    ?lstr6_ble_uart
0x200000DF       [1]    lib_aci_request_operation_pipe
0x200000E0       [1]    lib_aci_indicate_operation_pipe
0x200000E1      [30]    ?lstr4_uart_aci
0x200000FF      [30]    ?lstr5_uart_aci
0x2000011D      [56]    ?lstr6_uart_aci
0x20000155      [13]    ?lstr7_uart_aci
0x20000162      [25]    ?lstr9_uart_aci
0x2000017B      [16]    ?lstr11_uart_aci
0x2000018B       [1]    uart_aci_timing_change_done
0x2000018C      [18]    ?lstr12_uart_aci
0x2000019E      [11]    ?lstr13_uart_aci
0x200001A9      [39]    ?lstr14_uart_aci
0x200001D0      [41]    ?lstr15_uart_aci
0x200001F9      [55]    ?lstr16_uart_aci
0x20000230      [30]    ?lstr17_uart_aci
0x2000024E      [22]    ?lstr19_uart_aci
0x20000264      [12]    ?lstr21_uart_aci
0x20000270       [2]    ?lstr23_uart_aci
0x20000272      [55]    ?lstr24_uart_aci
0x200002A9      [16]    ?lstr1___Lib_Sprinti
0x200002B9      [17]    ?lstr2___Lib_Sprinti
0x200002CA       [5]    ?lstr3___Lib_Sprinti
0x200002CF      [16]    __Lib_System_4XX_APBAHBPrescTable
0x200002DF       [1]    aci_loop_setup_required_L0
0x200002E0       [1]    handle_serial_input_msg_length_L0
0x200002E1      [33]    _msg_to_send
0x20000302       [1]    lib_aci_is_request_operation_pending
0x20000303       [1]    lib_aci_is_indicate_operation_pending
0x20000304       [4]    blep_hal_write_spi_p
0x20000308       [4]    _SPI_Wr_Ptr
0x2000030C       [4]    blep_hal_read_spi_p
0x20000310       [4]    _SPI_Rd_Ptr
0x20000314      [32]    ble_p_click_serial_buffer
0x20000334      [56]    _aci_state
0x2000036C       [4]    hal_aci_tl_a_pins_local_ptr
0x20000370     [134]    _aci_rx_q
0x200003F6     [134]    _aci_tx_q
0x2000047C       [4]    lib_aci_p_services_pipe_type_map
0x20000480       [8]    lib_aci_aci_cmd_params_open_adv_pipe
0x20000488       [1]    lib_aci_is_open_remote_pipe_pending
0x20000489       [1]    lib_aci_is_close_remote_pipe_pending
0x2000048A       [2]    uart_aci_uart_over_ble
0x2000048C       [4]    lib_aci_p_setup_msgs
0x20000490      [34]    uart_aci_aci_data
0x200004B2      [20]    _txt
0x200004C8       [4]    ___System_CLOCK_IN_KHZ
0x200004CC       [4]    __VOLTAGE_RANGE
0x200004D0       [4]    _UART_Wr_Ptr
0x200004D4       [4]    _UART_Rd_Ptr
0x200004D8       [4]    _UART_Rdy_Ptr
0x200004DC       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x01AA       [2]    ?lstr_3_uart_aci
0x264A       [3]    ?lstr_18_uart_aci
0x264D       [3]    ?lstr_10_uart_aci
0x30E0    [1122]    ble_uart_setup_msgs
0x3542       [6]    ?ICS?lstr1_ble_p_click
0x3548      [17]    ?ICS?lstr2_ble_p_click
0x3559      [21]    ?ICS?lstr4_ble_uart
0x356E      [21]    ?ICS?lstr5_ble_uart
0x3583      [18]    ?ICS?lstr1_ble_uart
0x3595      [64]    ?ICS?lstr2_ble_uart
0x35D5       [1]    ?ICShal_aci_tl_aci_debug_print
0x35D6      [48]    ?ICSble_uart_services_pipe_type_mapping
0x3606      [11]    ?ICS?lstr3_ble_uart
0x3611      [16]    ?ICS?lstr6_ble_uart
0x3621       [1]    ?ICSlib_aci_request_operation_pipe
0x3622       [1]    ?ICSlib_aci_indicate_operation_pipe
0x3623      [30]    ?ICS?lstr4_uart_aci
0x3641      [30]    ?ICS?lstr5_uart_aci
0x365F      [56]    ?ICS?lstr6_uart_aci
0x3697      [13]    ?ICS?lstr7_uart_aci
0x36A4      [25]    ?ICS?lstr9_uart_aci
0x36BD      [16]    ?ICS?lstr11_uart_aci
0x36CD       [1]    ?ICSuart_aci_timing_change_done
0x36CE      [18]    ?ICS?lstr12_uart_aci
0x36E0      [11]    ?ICS?lstr13_uart_aci
0x36EB      [39]    ?ICS?lstr14_uart_aci
0x3712      [41]    ?ICS?lstr15_uart_aci
0x373B      [55]    ?ICS?lstr16_uart_aci
0x3772      [30]    ?ICS?lstr17_uart_aci
0x3790      [22]    ?ICS?lstr19_uart_aci
0x37A6      [12]    ?ICS?lstr21_uart_aci
0x37B2       [2]    ?ICS?lstr23_uart_aci
0x37B4      [55]    ?ICS?lstr24_uart_aci
0x37EB      [16]    ?ICS?lstr1___Lib_Sprinti
0x37FB      [17]    ?ICS?lstr2___Lib_Sprinti
0x380C       [5]    ?ICS?lstr3___Lib_Sprinti
0x3811      [16]    ?ICS__Lib_System_4XX_APBAHBPrescTable
0x3821       [1]    ?ICSaci_loop_setup_required_L0
0x3822       [1]    ?ICShandle_serial_input_msg_length_L0
0x3824     [108]    __GPIO_MODULE_SPI3_PC10_11_12
0x3890     [108]    __GPIO_MODULE_USART1_PA9_10
0x38FC     [100]    ?ICShandle_serial_input_name_buf_L0
0x3960      [57]    ?lstr_7_aci_queue
0x3999      [57]    ?lstr_14_aci_queue
0x39D2      [57]    ?lstr_15_aci_queue
0x3A0B      [57]    ?lstr_6_aci_queue
0x3A44      [57]    ?lstr_12_aci_queue
0x3A7D      [57]    ?lstr_10_aci_queue
0x3AB6      [57]    ?lstr_1_aci_queue
0x3AEF      [57]    ?lstr_3_aci_queue
0x3B28      [57]    ?lstr_2_aci_queue
0x3B61      [17]    __Lib_Sprinti_hexs
0x3B72      [17]    __Lib_Sprinti_hexb
0x3B83       [1]    ?ICSdo_aci_setup_setup_offset_L0
0x3B87       [4]    ?ICSdo_aci_setup_i_L0
0x3B8B       [1]    ?ICSdo_aci_setup_cmd_status_L0
0x3B8F       [4]    ?ICSdo_aci_setup_aci_data_L0
0x3B93      [15]    ?ICSaci_loop_hello_L3
0x3BA2      [15]    ?lstr_1_uart_aci
0x3BB2      [12]    __Lib_Sprinti_octpowers
0x3BBE      [10]    __Lib_Sprinti_dpowers
0x3BC8       [8]    __Lib_Sprinti_hexpowers
0x3BD0       [3]    ?lstr_8_uart_aci
0x3BD3       [3]    ?lstr_20_uart_aci
0x3BD6       [3]    ?lstr_2_uart_aci
0x3BD9       [3]    ?lstr_22_uart_aci
